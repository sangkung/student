<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.app.almweb.mapper.TR_0103Mapper">




	<select id="selectTR_0103" parameterType="java.util.Map" resultType="java.util.HashMap">
	
		/*	 컬럼 별칭에 붙는 숫자 의미.
		    1 기준월
		    2 전월
		    3 전년도말
		    4 전년동월
		*/ 
		WITH SPLY_OPR AS (
		 SELECT  /* 데이터 처리 */
			 	 #{BASE_DATE} AS BASE_DATE
			     , ALM_WORK_TC           
			     , ORG_CLAS_C          
			     , BR_C                 
			     , CUR_C                
			     , AC_BUSI_TC          
			     , ACCT_C
		     <if test="AMT_TC == '01'">
			     , NVL(CASE WHEN BASE_DATE = #{BASE_DATE} THEN MMW_AVG_BAL ELSE NULL END,0)                                                                               AS "ABAL1"          --월중평잔_기준월
			     , NVL(CASE WHEN BASE_DATE = #{BASE_DATE} THEN MMW_PRFT_CST_AMT ELSE NULL END,0)                                                                          AS "PRFT_CST_AMT1"  --월중손익_기준월
			     , NVL(CASE WHEN BASE_DATE = #{BASE_DATE} THEN MMW_AVG_APLY_RATE_AMT ELSE NULL END,0)                                                                     AS "ABAL_RATE_AMT1" --월중평잔이율금액_기준월
			     , NVL(CASE WHEN BASE_DATE = TO_CHAR(ADD_MONTHS(TO_DATE(#{BASE_DATE},'YYYYMMDD)'),-1 ),'YYYYMMDD') THEN MMW_AVG_BAL ELSE NULL END,0)                      AS "ABAL2"          --월중평잔_전월
			     , NVL(CASE WHEN BASE_DATE = TO_CHAR(ADD_MONTHS(TO_DATE(#{BASE_DATE},'YYYYMMDD)'),-1 ),'YYYYMMDD') THEN MMW_PRFT_CST_AMT ELSE NULL END,0)                 AS "PRFT_CST_AMT2"  --월중손익_전월
			     , NVL(CASE WHEN BASE_DATE = TO_CHAR(ADD_MONTHS(TO_DATE(#{BASE_DATE},'YYYYMMDD)'),-1 ),'YYYYMMDD') THEN MMW_AVG_APLY_RATE_AMT ELSE NULL END,0)            AS "ABAL_RATE_AMT2" --월중평잔이율금액_전월
			     , NVL(CASE WHEN BASE_DATE = TO_CHAR(ADD_MONTHS(TO_DATE(#{BASE_DATE},'YYYYMMDD)'),-12),'YYYY')     || '1231' THEN MMW_AVG_BAL ELSE NULL END,0)            AS "ABAL3"          --월중평잔_전년도
			     , NVL(CASE WHEN BASE_DATE = TO_CHAR(ADD_MONTHS(TO_DATE(#{BASE_DATE},'YYYYMMDD)'),-12),'YYYY')     || '1231' THEN MMW_PRFT_CST_AMT ELSE NULL END,0)       AS "PRFT_CST_AMT3"  --월중손익_전년도
			     , NVL(CASE WHEN BASE_DATE = TO_CHAR(ADD_MONTHS(TO_DATE(#{BASE_DATE},'YYYYMMDD)'),-12),'YYYY')     || '1231' THEN MMW_AVG_APLY_RATE_AMT ELSE NULL END,0)  AS "ABAL_RATE_AMT3" --월중평잔이율금액_전년도
			     , NVL(CASE WHEN BASE_DATE = TO_CHAR(ADD_MONTHS(TO_DATE(#{BASE_DATE},'YYYYMMDD)'),-12),'YYYYMMDD') THEN MMW_AVG_BAL ELSE NULL END,0)                      AS "ABAL4"          --월중평잔_전년동월
			     , NVL(CASE WHEN BASE_DATE = TO_CHAR(ADD_MONTHS(TO_DATE(#{BASE_DATE},'YYYYMMDD)'),-12),'YYYYMMDD') THEN MMW_PRFT_CST_AMT ELSE NULL END,0)                 AS "PRFT_CST_AMT4"  --월중손익_전년동월
			     , NVL(CASE WHEN BASE_DATE = TO_CHAR(ADD_MONTHS(TO_DATE(#{BASE_DATE},'YYYYMMDD)'),-12),'YYYYMMDD') THEN MMW_AVG_APLY_RATE_AMT ELSE NULL END,0)            AS "ABAL_RATE_AMT4" --월중평잔이율금액_전년동월
			     , TO_NUMBER(SUBSTR(#{BASE_DATE},7,2)) 																													  AS "DAY_CNT1"       --기준월_월중일수
			     , TO_NUMBER(SUBSTR(TO_CHAR(ADD_MONTHS(TO_DATE(#{BASE_DATE},'YYYYMMDD)'),-1 ),'YYYYMMDD'),7,2)) 														  AS "DAY_CNT2"       --전월_월중일수
			     , TO_NUMBER(SUBSTR(TO_CHAR(ADD_MONTHS(TO_DATE(#{BASE_DATE},'YYYYMMDD)'),-12),'YYYY') || '1231',7,2)) 												  	  AS "DAY_CNT3"       --전년도말_월중일수
			     , TO_NUMBER(SUBSTR(TO_CHAR(ADD_MONTHS(TO_DATE(#{BASE_DATE},'YYYYMMDD)'),-12),'YYYYMMDD'),7,2)) 														  AS "DAY_CNT4"       --전년동월_월중일수
		     </if> 
		     <if test="AMT_TC == '02'">               
			     , NVL(CASE WHEN BASE_DATE = #{BASE_DATE} THEN AMG_SESN_ABAL ELSE NULL END,0)                                                                             AS "ABAL1"          --기중평잔_기준월
			     , NVL(CASE WHEN BASE_DATE = #{BASE_DATE} THEN AMG_SESN_PRFT_CST_AMT ELSE NULL END,0)                                                                     AS "PRFT_CST_AMT1"  --기중손익_기준월
			     , NVL(CASE WHEN BASE_DATE = #{BASE_DATE} THEN AMG_SESN_ABAL_RATE_AMT ELSE NULL END,0)                                                                    AS "ABAL_RATE_AMT1" --기중평잔이율금액_기준월
			     , NVL(CASE WHEN BASE_DATE = TO_CHAR(ADD_MONTHS(TO_DATE(#{BASE_DATE},'YYYYMMDD)'),-1 ),'YYYYMMDD') THEN AMG_SESN_ABAL ELSE NULL END,0)                    AS "ABAL2"          --기중평잔_전월
			     , NVL(CASE WHEN BASE_DATE = TO_CHAR(ADD_MONTHS(TO_DATE(#{BASE_DATE},'YYYYMMDD)'),-1 ),'YYYYMMDD') THEN AMG_SESN_PRFT_CST_AMT ELSE NULL END,0)            AS "PRFT_CST_AMT2"  --기중손익_전월
			     , NVL(CASE WHEN BASE_DATE = TO_CHAR(ADD_MONTHS(TO_DATE(#{BASE_DATE},'YYYYMMDD)'),-1 ),'YYYYMMDD') THEN AMG_SESN_ABAL_RATE_AMT ELSE NULL END,0)           AS "ABAL_RATE_AMT2" --기중평잔이율금액_전월
			     , NVL(CASE WHEN BASE_DATE = TO_CHAR(ADD_MONTHS(TO_DATE(#{BASE_DATE},'YYYYMMDD)'),-12),'YYYY')     || '1231' THEN AMG_SESN_ABAL ELSE NULL END,0)          AS "ABAL3"          --기중평잔_전년도
			     , NVL(CASE WHEN BASE_DATE = TO_CHAR(ADD_MONTHS(TO_DATE(#{BASE_DATE},'YYYYMMDD)'),-12),'YYYY')     || '1231' THEN AMG_SESN_PRFT_CST_AMT ELSE NULL END,0)  AS "PRFT_CST_AMT3"  --기중손익_전년도
			     , NVL(CASE WHEN BASE_DATE = TO_CHAR(ADD_MONTHS(TO_DATE(#{BASE_DATE},'YYYYMMDD)'),-12),'YYYY')     || '1231' THEN AMG_SESN_ABAL_RATE_AMT ELSE NULL END,0) AS "ABAL_RATE_AMT3" --기중평잔이율금액_전년도
			     , NVL(CASE WHEN BASE_DATE = TO_CHAR(ADD_MONTHS(TO_DATE(#{BASE_DATE},'YYYYMMDD)'),-12),'YYYYMMDD') THEN AMG_SESN_ABAL ELSE NULL END,0)                    AS "ABAL4"          --기중평잔_전년동월
			     , NVL(CASE WHEN BASE_DATE = TO_CHAR(ADD_MONTHS(TO_DATE(#{BASE_DATE},'YYYYMMDD)'),-12),'YYYYMMDD') THEN AMG_SESN_PRFT_CST_AMT ELSE NULL END,0)            AS "PRFT_CST_AMT4"  --기중손익_전년동월
			     , NVL(CASE WHEN BASE_DATE = TO_CHAR(ADD_MONTHS(TO_DATE(#{BASE_DATE},'YYYYMMDD)'),-12),'YYYYMMDD') THEN AMG_SESN_ABAL_RATE_AMT ELSE NULL END,0)           AS "ABAL_RATE_AMT4" --기중평잔이율금액_전년동월
			     , TO_DATE(#{BASE_DATE},'YYYYMMDD') - TO_DATE(SUBSTR(#{BASE_DATE},1,4)||'0101','YYYYMMDD') + 1														      AS "DAY_CNT1"        --기준월_기중일수
			     , TO_DATE(TO_CHAR(ADD_MONTHS(TO_DATE(#{BASE_DATE},'YYYYMMDD)'),-1 ),'YYYYMMDD'),'YYYYMMDD') 
			       - 
			       TO_DATE(SUBSTR(TO_CHAR(ADD_MONTHS(TO_DATE(#{BASE_DATE},'YYYYMMDD)'),-1 ),'YYYYMMDD'),1,4)||'0101','YYYYMMDD') + 1									  AS "DAY_CNT2"        --전월_기중일수
			     , TO_DATE(TO_CHAR(ADD_MONTHS(TO_DATE(#{BASE_DATE},'YYYYMMDD)'),-12),'YYYY') || '1231','YYYYMMDD') 
			       - 
			       TO_DATE(SUBSTR(TO_CHAR(ADD_MONTHS(TO_DATE(#{BASE_DATE},'YYYYMMDD)'),-12),'YYYY') || '1231',1,4)||'0101','YYYYMMDD') + 1								  AS "DAY_CNT3"        --전년도말_기중일수
			     , TO_DATE(TO_CHAR(ADD_MONTHS(TO_DATE(#{BASE_DATE},'YYYYMMDD)'),-12),'YYYYMMDD'),'YYYYMMDD')
			       - 
			       TO_DATE(SUBSTR(TO_CHAR(ADD_MONTHS(TO_DATE(#{BASE_DATE},'YYYYMMDD)'),-12),'YYYYMMDD'),1,4)||'0101','YYYYMMDD') + 1									  AS "DAY_CNT4"        --전년동월_기중일수
		     </if> 
		FROM TSR_SPLY_OPR_STAT  
		WHERE BASE_DATE IN (#{BASE_DATE}                                          					     --기준월
			                ,TO_CHAR(ADD_MONTHS(TO_DATE(#{BASE_DATE},'YYYYMMDD)'),-1 ),'YYYYMMDD')       --전월
			                ,TO_CHAR(ADD_MONTHS(TO_DATE(#{BASE_DATE},'YYYYMMDD)'),-12),'YYYY') || '1231' --전년도말
			                ,TO_CHAR(ADD_MONTHS(TO_DATE(#{BASE_DATE},'YYYYMMDD)'),-12),'YYYYMMDD')       --전년동월
			                ) 
		 AND ALM_WORK_TC = 'M'          /* 월은 고정      */
		 AND CUR_C       = 'KRW'        /* 통화코드 고정 */
		 AND ORG_CLAS_C  = #{ORG_CLAS_C} 
		 
		 -- ( 회계구분  )
		 --************************************************
		 /* 중앙회 조회 시 에만 발생  */
	 	<if test="AC_BUSI_TC == '0000'">
	 		AND AC_BUSI_TC IN('1105','1106','1107')
	 	</if>
	 	<if test="AC_BUSI_TC != '0000'">
	 		AND AC_BUSI_TC = #{AC_BUSI_TC}
	 	</if>
		 --************************************************
		 
		 
		 -- ( 점소코드  )
		 --************************************************
		 -- 전체조합 조회 시 
		 -- 신용회계 고정(2102)
		 <if test="JISO_INCLUDE == 'no' and BLNG_HQ_BR_C == '' and BR_C == 'ALL'">
		 	-- 모든 점소코드 나오기
		 </if>
		 
		 -- 단위조합별 조회 시 (지소포함여부  yes/no)
		 -- 신용회계 고정(2102)
		 <if test="JISO_INCLUDE == 'yes' and BLNG_HQ_BR_C != ''">   
		 	AND BR_C IN ( SELECT BR_C FROM TTL_BR_C_INFO WHERE MO_BR_C = #{BR_C} ) 
		 </if>
		 <if test="JISO_INCLUDE == 'no' and BLNG_HQ_BR_C != ''"> 
		 	AND BR_C     = #{BR_C}
		 </if>
		 
		 -- 도지회별 조회 시 
		 -- 신용회계 고정(2102)
		 <if test="JISO_INCLUDE == 'no' and BLNG_HQ_BR_C == '' and BR_C != 'ALL' and BR_C != '001'">
		 	AND BR_C IN ( SELECT BR_C FROM TTL_BR_C_INFO WHERE BLNG_HQ_BR_C = #{BR_C} )
		 </if>
		 
		 -- 중앙회 조회 시  
		 <if test="JISO_INCLUDE == 'no' and BLNG_HQ_BR_C == '' and BR_C == '001'">
			AND BR_C     = #{BR_C}
		 </if>
		 --************************************************
		 
		)
	
		SELECT 
				LVL1 																			  								  AS ACCT_TC_NM1
		    <if test="LVL == 1"> <!-- 미정 --> </if>                                                                               
		    <if test="LVL == 2">                                                                                                  
		    	, DECODE(GROUPING_ID (LVL2), 1, LVL1||' 소계', LVL2) 															      AS ACCT_TC_NM2
		    	, GROUPING_ID (LVL2) 								 															  AS GRP_ID 
		    </if>                                                                                                                 
		    <if test="LVL == 3">                                                                                                  
		    	, DECODE(GROUPING_ID (LVL2, LVL3), 3, LVL1||' 소계', LVL2)														  AS ACCT_TC_NM2
		    	, DECODE(GROUPING_ID (LVL2, LVL3), 1, LVL2||' 소계', LVL3)														  AS ACCT_TC_NM3	
		    	, GROUPING_ID (LVL2,LVL3) 								 														  AS GRP_ID 
		    </if>                                                                                                                 
		    <if test="LVL == 4">                                                                                                  
		    	, DECODE(GROUPING_ID (LVL2, LVL3, LVL4), 7, LVL1||' 소계', LVL2)													  AS ACCT_TC_NM2
		    	, DECODE(GROUPING_ID (LVL2, LVL3, LVL4), 3, LVL2||' 소계', LVL3)													  AS ACCT_TC_NM3
		    	, DECODE(GROUPING_ID (LVL2, LVL3, LVL4), 1, LVL3||' 소계', LVL4)													  AS ACCT_TC_NM4
		    	, GROUPING_ID (LVL2,LVL3,LVL4) 								 													  AS GRP_ID 
		    </if>                                                                                                                 
		    <if test="LVL == 5">                                                                                                  
		    	, DECODE(GROUPING_ID (LVL2, LVL3, LVL4, LVL5), 15, LVL1||' 소계', LVL2)											  AS ACCT_TC_NM2
		    	, DECODE(GROUPING_ID (LVL2, LVL3, LVL4, LVL5), 7,  LVL2||' 소계', LVL3)											  AS ACCT_TC_NM3
		    	, DECODE(GROUPING_ID (LVL2, LVL3, LVL4, LVL5), 3,  LVL3||' 소계', LVL4)											  AS ACCT_TC_NM4
		    	, DECODE(GROUPING_ID (LVL2, LVL3, LVL4, LVL5), 1,  LVL4||' 소계', LVL5)											  AS ACCT_TC_NM5
		    	, GROUPING_ID (LVL2,LVL3,LVL4,LVL5) 								 											  AS GRP_ID 
		    </if>                                                                                                                 
		    <if test="LVL == 6">                                                                                                  
		    	, DECODE(GROUPING_ID (LVL2, LVL3, LVL4, LVL5, LVL6), 31, LVL1||' 소계', LVL2)										  AS ACCT_TC_NM2
		    	, DECODE(GROUPING_ID (LVL2, LVL3, LVL4, LVL5, LVL6), 15, LVL2||' 소계', LVL3)										  AS ACCT_TC_NM3
		    	, DECODE(GROUPING_ID (LVL2, LVL3, LVL4, LVL5, LVL6), 7,  LVL3||' 소계', LVL4)										  AS ACCT_TC_NM4
		    	, DECODE(GROUPING_ID (LVL2, LVL3, LVL4, LVL5, LVL6), 3,  LVL4||' 소계', LVL5)										  AS ACCT_TC_NM5
		    	, DECODE(GROUPING_ID (LVL2, LVL3, LVL4, LVL5, LVL6), 1,  LVL5||' 소계', LVL6)										  AS ACCT_TC_NM6
		    	, GROUPING_ID (LVL2,LVL3,LVL4,LVL5,LVL6) 								 										  AS GRP_ID 
		    </if>                                                                                                                 
		    <if test="LVL == 7">                                                                                                  
		    	, DECODE(GROUPING_ID (LVL2, LVL3, LVL4, LVL5, LVL6, LVL7), 63, LVL1||' 소계', LVL2)								  AS ACCT_TC_NM2
		    	, DECODE(GROUPING_ID (LVL2, LVL3, LVL4, LVL5, LVL6, LVL7), 31, LVL2||' 소계', LVL3)								  AS ACCT_TC_NM3
		    	, DECODE(GROUPING_ID (LVL2, LVL3, LVL4, LVL5, LVL6, LVL7), 15, LVL3||' 소계', LVL4)								  AS ACCT_TC_NM4
		    	, DECODE(GROUPING_ID (LVL2, LVL3, LVL4, LVL5, LVL6, LVL7), 7,  LVL4||' 소계', LVL5)								  AS ACCT_TC_NM5
		    	, DECODE(GROUPING_ID (LVL2, LVL3, LVL4, LVL5, LVL6, LVL7), 3,  LVL5||' 소계', LVL6)								  AS ACCT_TC_NM6
		    	, DECODE(GROUPING_ID (LVL2, LVL3, LVL4, LVL5, LVL6, LVL7), 1,  LVL6||' 소계', LVL7)								  AS ACCT_TC_NM7
		    	, GROUPING_ID (LVL2,LVL3,LVL4,LVL5,LVL6,LVL7) 								 									  AS GRP_ID 
		    </if>
                , SUM(VIEW_ABAL1)                                                                                          		  AS ABAL1          	     /* 기준월_기중평잔  */
                , SUM(VIEW_PRFT_CST1)                                                                                      		  AS PRFT_CST_AMT1  		 /* 기준월_기중손익 */
                , CASE
                  	WHEN NVL(SUM(ABAL1),0) = 0 THEN 0 
                  	ELSE ROUND( ( ( SUM(PRFT_CST_AMT1) / SUM(ABAL1) ) * 365 / MAX(DAY_CNT1) ) * 100 ,2)               
                  END                          		  																			  AS PROFIT_COST_RATIO1   	 /* 기준월_수익비용률 */
                     
                , SUM(VIEW_ABAL2)                                                                                          		  AS ABAL2          		 /* 전월_기중평잔 */
                , SUM(VIEW_PRFT_CST2)                                                                                      		  AS PRFT_CST_AMT2  	     /* 전월_기중손익 */
                , CASE
                  	WHEN NVL(SUM(ABAL2),0) = 0 THEN 0 
                  	ELSE ROUND( ( ( SUM(PRFT_CST_AMT2) / SUM(ABAL2) ) * 365 / MAX(DAY_CNT2) ) * 100 ,2)               
                  END                          		  																			  AS PROFIT_COST_RATIO2   	 /* 전월_수익비용률 */
                     
                , SUM(VIEW_ABAL3)                                                                                          		  AS ABAL3         	    	 /* 전년도말_기중평잔 */
                , SUM(VIEW_PRFT_CST3)                                                                                      		  AS PRFT_CST_AMT3			 /* 전년도말_기중손익 */
                , CASE
                  	WHEN NVL(SUM(ABAL3),0) = 0 THEN 0 
                  	ELSE ROUND( ( ( SUM(PRFT_CST_AMT3) / SUM(ABAL3) ) * 365 / MAX(DAY_CNT3) ) * 100 ,2)               
                  END                          		  																			  AS PROFIT_COST_RATIO3   	 /* 전년도말_수익비용률 */
                     
                , SUM(VIEW_ABAL4)                                                                                          		  AS ABAL4          		 /* 전년동월_기중평잔  */
                , SUM(VIEW_PRFT_CST4)                                                                                       	  AS PRFT_CST_AMT4  		 /* 전년동월_기중손익 */
                , CASE
                  	WHEN NVL(SUM(ABAL4),0) = 0 THEN 0 
                  	ELSE ROUND( ( ( SUM(PRFT_CST_AMT4) / SUM(ABAL4) ) * 365 / MAX(DAY_CNT4) ) * 100 ,2)               
                  END                          		  																			  AS PROFIT_COST_RATIO4   	 /* 전년동월_수익비용률 */
                <!-- ******************************************************************************************************************************************************* -->
                , TO_NUMBER(NVL(DECODE( 
                    CASE
                        WHEN NVL(SUM(ABAL2),0) = 0 THEN 0 
                        ELSE ROUND( ( ( SUM(PRFT_CST_AMT2) / SUM(ABAL2) ) * 365 / MAX(DAY_CNT2) ) * 100 ,2)               
                    END
                    , 0, NULL,
                    ROUND(
                           (
                              (CASE
                                WHEN NVL(SUM(ABAL1),0) = 0 THEN 0 
                                ELSE ROUND( ( ( SUM(PRFT_CST_AMT1) / SUM(ABAL1) ) * 365 / MAX(DAY_CNT1) ) * 100 ,2)               
                              END)                                                                                                            
                             - 
                              (CASE
                                WHEN NVL(SUM(ABAL2),0) = 0 THEN 0 
                                ELSE ROUND( ( ( SUM(PRFT_CST_AMT2) / SUM(ABAL2) ) * 365 / MAX(DAY_CNT2) ) * 100 ,2)               
                              END) 
                           )/
                              (CASE
                                WHEN NVL(SUM(ABAL2),0) = 0 THEN 0 
                                ELSE ROUND( ( ( SUM(PRFT_CST_AMT2) / SUM(ABAL2) ) * 365 / MAX(DAY_CNT2) ) * 100 ,2)               
                              END) 
                            * 100       
                        ,2)  
                  ), 0))                                                                                                                   
                AS BS_DT_CONTRAST2  /* 전월대비_기준월증감률 */ 
                <!-- ******************************************************************************************************************************************************* -->
            
                <!-- ******************************************************************************************************************************************************* -->
                , TO_NUMBER(NVL(DECODE( 
                    CASE
                        WHEN NVL(SUM(ABAL3),0) = 0 THEN 0 
                        ELSE ROUND( ( ( SUM(PRFT_CST_AMT3) / SUM(ABAL3) ) * 365 / MAX(DAY_CNT3) ) * 100 ,2)               
                    END
                    , 0, NULL,
                    ROUND(
                           (
                              (CASE
                                WHEN NVL(SUM(ABAL1),0) = 0 THEN 0 
                                ELSE ROUND( ( ( SUM(PRFT_CST_AMT1) / SUM(ABAL1) ) * 365 / MAX(DAY_CNT1) ) * 100 ,2)               
                              END)                                                                                                            
                             - 
                              (CASE
                                WHEN NVL(SUM(ABAL3),0) = 0 THEN 0 
                                ELSE ROUND( ( ( SUM(PRFT_CST_AMT3) / SUM(ABAL3) ) * 365 / MAX(DAY_CNT3) ) * 100 ,2)               
                              END) 
                           )/
                              (CASE
                                WHEN NVL(SUM(ABAL3),0) = 0 THEN 0 
                                ELSE ROUND( ( ( SUM(PRFT_CST_AMT3) / SUM(ABAL3) ) * 365 / MAX(DAY_CNT3) ) * 100 ,2)               
                              END) 
                            * 100       
                        ,2)  
                  ), 0))                                                                                                                   
                AS BS_DT_CONTRAST3  /* 전년도말대비_기준월증감률 */
                <!-- ******************************************************************************************************************************************************* -->
            
                <!-- ******************************************************************************************************************************************************* -->
                , TO_NUMBER(NVL(DECODE( 
                    CASE
                        WHEN NVL(SUM(ABAL4),0) = 0 THEN 0 
                        ELSE ROUND( ( ( SUM(PRFT_CST_AMT4) / SUM(ABAL4) ) * 365 / MAX(DAY_CNT4) ) * 100 ,2)               
                    END
                    , 0, NULL,
                    ROUND(
                           (
                              (CASE
                                WHEN NVL(SUM(ABAL1),0) = 0 THEN 0 
                                ELSE ROUND( ( ( SUM(PRFT_CST_AMT1) / SUM(ABAL1) ) * 365 / MAX(DAY_CNT1) ) * 100 ,2)               
                              END)                                                                                                            
                             - 
                              (CASE
                                WHEN NVL(SUM(ABAL4),0) = 0 THEN 0 
                                ELSE ROUND( ( ( SUM(PRFT_CST_AMT4) / SUM(ABAL4) ) * 365 / MAX(DAY_CNT4) ) * 100 ,2)               
                              END) 
                           )/
                              (CASE
                                WHEN NVL(SUM(ABAL4),0) = 0 THEN 0 
                                ELSE ROUND( ( ( SUM(PRFT_CST_AMT4) / SUM(ABAL4) ) * 365 / MAX(DAY_CNT4) ) * 100 ,2)               
                              END) 
                            * 100       
                        ,2)  
                  ), 0))                                                                                                                   
                AS BS_DT_CONTRAST4  /* 전년동월대비_기준월증감률 */
                <!-- ******************************************************************************************************************************************************* -->
		   		
		FROM
			
            (
            SELECT 
            		LVL1	    
		    <if test="LVL == 2">
                  , LVL2
		    </if>
		    <if test="LVL == 3">
                  , LVL2
                  , LVL3
		    </if>
		    <if test="LVL == 4">
                  , LVL2
                  , LVL3
                  , LVL4
		    </if>
		    <if test="LVL == 5">
                  , LVL2
                  , LVL3
                  , LVL4
                  , LVL5
		    </if>
		    <if test="LVL == 6">
                  , LVL2
                  , LVL3
                  , LVL4
                  , LVL5
                  , LVL6
		    </if>
		    <if test="LVL == 7">
                  , LVL2
                  , LVL3
                  , LVL4
                  , LVL5
                  , LVL6
                  , LVL7
		    </if>  
		    	  
            /* 화면에 보여질 금액부분 처리  */
                  , ROUND(SUM(ABAL1)        / TO_NUMBER(#{AMT_UNIT}),0)   AS VIEW_ABAL1
                  , ROUND(SUM(ABAL2)        / TO_NUMBER(#{AMT_UNIT}),0)   AS VIEW_ABAL2
                  , ROUND(SUM(ABAL3)        / TO_NUMBER(#{AMT_UNIT}),0)   AS VIEW_ABAL3
                  , ROUND(SUM(ABAL4)        / TO_NUMBER(#{AMT_UNIT}),0)   AS VIEW_ABAL4
                  , ROUND(SUM(PRFT_CST_AMT1)/ TO_NUMBER(#{AMT_UNIT}),0)   AS VIEW_PRFT_CST1
                  , ROUND(SUM(PRFT_CST_AMT2)/ TO_NUMBER(#{AMT_UNIT}),0)   AS VIEW_PRFT_CST2
                  , ROUND(SUM(PRFT_CST_AMT3)/ TO_NUMBER(#{AMT_UNIT}),0)   AS VIEW_PRFT_CST3
                  , ROUND(SUM(PRFT_CST_AMT4)/ TO_NUMBER(#{AMT_UNIT}),0)   AS VIEW_PRFT_CST4    
                  --------------------------------------------------
                  , SUM(ABAL1          )        AS ABAL1
                  , SUM(PRFT_CST_AMT1  )        AS PRFT_CST_AMT1
                  , SUM(ABAL_RATE_AMT1 )        AS ABAL_RATE_AMT1
                  --------------------------------------------------
                  , SUM(ABAL2          )        AS ABAL2
                  , SUM(PRFT_CST_AMT2  )        AS PRFT_CST_AMT2
                  , SUM(ABAL_RATE_AMT2 )        AS ABAL_RATE_AMT2
                  --------------------------------------------------
                  , SUM(ABAL3          )        AS ABAL3
                  , SUM(PRFT_CST_AMT3  )        AS PRFT_CST_AMT3
                  , SUM(ABAL_RATE_AMT3 )        AS ABAL_RATE_AMT3
                  --------------------------------------------------
                  , SUM(ABAL4          )        AS ABAL4
                  , SUM(PRFT_CST_AMT4  )        AS PRFT_CST_AMT4 
                  , SUM(ABAL_RATE_AMT4 )        AS ABAL_RATE_AMT4
                  --------------------------------------------------
                  , MAX(PRNT_ORD1)              AS PRNT_ORD1
                  , MAX(PRNT_ORD2)              AS PRNT_ORD2
                  , MAX(PRNT_ORD3)              AS PRNT_ORD3
                  , MAX(PRNT_ORD4)              AS PRNT_ORD4
                  , MAX(PRNT_ORD5)              AS PRNT_ORD5
                  , MAX(PRNT_ORD6)              AS PRNT_ORD6
                  , MAX(PRNT_ORD7)              AS PRNT_ORD7
                  , MAX(DAY_CNT1)  				AS DAY_CNT1 
                  , MAX(DAY_CNT2)  				AS DAY_CNT2 
                  , MAX(DAY_CNT3)  				AS DAY_CNT3 
                  , MAX(DAY_CNT4)  				AS DAY_CNT4 
              	FROM
			    (
			    SELECT       
			       	    B.LVL1
			          , B.LVL2
			          , B.LVL3
			          , B.LVL4
			          , B.LVL5
			          , B.LVL6 
			          , B.LVL7    
                      , A.ABAL1
                      , A.PRFT_CST_AMT1
                      , A.ABAL_RATE_AMT1
                      , A.ABAL2
                      , A.PRFT_CST_AMT2
                      , A.ABAL_RATE_AMT2
                      , A.ABAL3
                      , A.PRFT_CST_AMT3
                      , A.ABAL_RATE_AMT3
                      , A.ABAL4
                      , A.PRFT_CST_AMT4
                      , A.ABAL_RATE_AMT4
                      , A.DAY_CNT1
                      , A.DAY_CNT2
                      , A.DAY_CNT3
                      , A.DAY_CNT4
			          , B.ACCT_C_NM
			          , B.PRNT_ORD1
			          , B.PRNT_ORD2
			          , B.PRNT_ORD3
			          , B.PRNT_ORD4
			          , B.PRNT_ORD5
			          , B.PRNT_ORD6
			          , B.PRNT_ORD7		          
			    FROM
			        SPLY_OPR A   
			    JOIN (   
			        SELECT 
			          LEVEL, BASE_DATE, SYS_CONNECT_BY_PATH(TRIM(ACCT_C_NM), '%') AS ACCT_PATH,
			          REGEXP_SUBSTR(SYS_CONNECT_BY_PATH(TRIM(ACCT_C_NM), '%'),'[^%]+' , 1 , 1 ) AS LVL1,
			          REGEXP_SUBSTR(SYS_CONNECT_BY_PATH(TRIM(ACCT_C_NM), '%'),'[^%]+' , 1 , 2 ) AS LVL2,
			          REGEXP_SUBSTR(SYS_CONNECT_BY_PATH(TRIM(ACCT_C_NM), '%'),'[^%]+' , 1 , 3 ) AS LVL3,
			          NVL(REGEXP_SUBSTR(SYS_CONNECT_BY_PATH(TRIM(ACCT_C_NM), '%'),'[^%]+' , 1 , 4 ),TRIM(ACCT_C_NM)) AS LVL4,
			          NVL(REGEXP_SUBSTR(SYS_CONNECT_BY_PATH(TRIM(ACCT_C_NM), '%'),'[^%]+' , 1 , 5 ),TRIM(ACCT_C_NM)) AS LVL5,
			          NVL(REGEXP_SUBSTR(SYS_CONNECT_BY_PATH(TRIM(ACCT_C_NM), '%'),'[^%]+' , 1 , 6 ),TRIM(ACCT_C_NM)) AS LVL6,
			          NVL(REGEXP_SUBSTR(SYS_CONNECT_BY_PATH(TRIM(ACCT_C_NM), '%'),'[^%]+' , 1 , 7 ),TRIM(ACCT_C_NM)) AS LVL7,
			          TRIM(ACCT_C_NM) AS ACCT_C_NM,
			          BS_PL_TC,
			          ORG_CLAS_C,
			          AC_BUSI_TC,
			          ACCT_C,
			          TO_NUMBER(REGEXP_SUBSTR(SYS_CONNECT_BY_PATH(TRIM(PRNT_ORD), '%'),'[^%]+' , 1 , 1 )) AS PRNT_ORD1,
			          TO_NUMBER(REGEXP_SUBSTR(SYS_CONNECT_BY_PATH(TRIM(PRNT_ORD), '%'),'[^%]+' , 1 , 2 )) AS PRNT_ORD2,
			          TO_NUMBER(REGEXP_SUBSTR(SYS_CONNECT_BY_PATH(TRIM(PRNT_ORD), '%'),'[^%]+' , 1 , 3 )) AS PRNT_ORD3,
			          TO_NUMBER(NVL(REGEXP_SUBSTR(SYS_CONNECT_BY_PATH(TRIM(PRNT_ORD), '%'),'[^%]+' , 1 , 4 ),TRIM(PRNT_ORD))) AS PRNT_ORD4,
			          TO_NUMBER(NVL(REGEXP_SUBSTR(SYS_CONNECT_BY_PATH(TRIM(PRNT_ORD), '%'),'[^%]+' , 1 , 5 ),TRIM(PRNT_ORD))) AS PRNT_ORD5,
			          TO_NUMBER(NVL(REGEXP_SUBSTR(SYS_CONNECT_BY_PATH(TRIM(PRNT_ORD), '%'),'[^%]+' , 1 , 6 ),TRIM(PRNT_ORD))) AS PRNT_ORD6,
			          TO_NUMBER(NVL(REGEXP_SUBSTR(SYS_CONNECT_BY_PATH(TRIM(PRNT_ORD), '%'),'[^%]+' , 1 , 7 ),TRIM(PRNT_ORD))) AS PRNT_ORD7
			        FROM TSY_ACCT_MSTR_MNG
			        WHERE BASE_DATE = (SELECT MAX(BASE_DATE) FROM TSY_ACCT_MSTR_MNG WHERE BASE_DATE &lt;= #{BASE_DATE}) 
			        START WITH UP_ACCT_C = '0000000'
			        CONNECT BY PRIOR ACCT_C = UP_ACCT_C AND PRIOR BASE_DATE = BASE_DATE AND PRIOR ORG_CLAS_C = ORG_CLAS_C AND PRIOR AC_BUSI_TC = AC_BUSI_TC 
			        ) B ON B.ACCT_C = A.ACCT_C AND B.AC_BUSI_TC = A.AC_BUSI_TC AND B.ORG_CLAS_C = A.ORG_CLAS_C 
			        AND SUBSTR( A.ACCT_C, 1, 1) != '3' -- 자본(과목) 빼기
			    )
			GROUP BY LVL1	    
		    <if test="LVL == 2">
                  , LVL2
		    </if>
		    <if test="LVL == 3">
                  , LVL2
                  , LVL3
		    </if>
		    <if test="LVL == 4">
                  , LVL2
                  , LVL3
                  , LVL4
		    </if>
		    <if test="LVL == 5">
                  , LVL2
                  , LVL3
                  , LVL4
                  , LVL5
		    </if>
		    <if test="LVL == 6">
                  , LVL2
                  , LVL3
                  , LVL4
                  , LVL5
                  , LVL6
		    </if>
		    <if test="LVL == 7">
                  , LVL2
                  , LVL3
                  , LVL4
                  , LVL5
                  , LVL6
                  , LVL7
		    </if>    
		    )
		GROUP BY 
			LVL1
			<if test="LVL == 1">
				ORDER BY 
					MAX(PRNT_ORD1)
			</if> 	    
		    <if test="LVL == 2">
		    	, ROLLUP( LVL2 )
				ORDER BY
				    MAX(PRNT_ORD1)
				    ,MAX(PRNT_ORD2)
				    ,GRP_ID
		    </if>
		    <if test="LVL == 3">
		    	, ROLLUP( LVL2, LVL3 )
				ORDER BY
				    MAX(PRNT_ORD1)
				    ,MAX(PRNT_ORD2)
				    ,MAX(PRNT_ORD3)
				    ,GRP_ID
		    </if>
		    <if test="LVL == 4">
		    	, ROLLUP( LVL2, LVL3, LVL4 )
				ORDER BY
				    MAX(PRNT_ORD1)
				    ,MAX(PRNT_ORD2)
				    ,MAX(PRNT_ORD3)
				    ,MAX(PRNT_ORD4)
				    ,GRP_ID
		    </if>
		    <if test="LVL == 5">
		    	, ROLLUP( LVL2, LVL3, LVL4, LVL5 )
				ORDER BY
				    MAX(PRNT_ORD1)
				    ,MAX(PRNT_ORD2)
				    ,MAX(PRNT_ORD3)
				    ,MAX(PRNT_ORD4)
				    ,MAX(PRNT_ORD5)
				    ,GRP_ID
		    </if>
		    <if test="LVL == 6">
		    	, ROLLUP( LVL2, LVL3, LVL4, LVL5, LVL6 )
				ORDER BY
				    MAX(PRNT_ORD1)
				    ,MAX(PRNT_ORD2)
				    ,MAX(PRNT_ORD3)
				    ,MAX(PRNT_ORD4)
				    ,MAX(PRNT_ORD5)
				    ,MAX(PRNT_ORD6)
				    ,GRP_ID
		    </if>
		    <if test="LVL == 7">
		   		, ROLLUP( LVL2, LVL3, LVL4, LVL5, LVL6, LVL7 )
				ORDER BY
				     MAX(PRNT_ORD1)
				    ,MAX(PRNT_ORD2)
				    ,MAX(PRNT_ORD3)
				    ,MAX(PRNT_ORD4)
				    ,MAX(PRNT_ORD5)
				    ,MAX(PRNT_ORD6)
				    ,MAX(PRNT_ORD7)
				    ,GRP_ID
		    </if>
		            

	
	</select>


</mapper>