<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.app.almweb.mapper.TR_6202Mapper">


	<sql id="tr_6202With">
			

		WITH PROCUREMENT AS (
		
			-- 기준일자
			SELECT 
		          BASE_DATE
		        , ALM_WORK_TC
		        , ORG_CLAS_C
		        , BR_C
		        , CUR_C
		        , AC_BUSI_TC
		        , ACCT_C
		        --------------------------------------------------기준일
		        , NVL( CASE WHEN BASE_DATE = #{BASE_DATE} THEN BKPR_AMT ELSE 0 END  ,0)                                                 		   AS               BKPR_AMT 
		        , NVL( CASE WHEN BASE_DATE = #{BASE_DATE} THEN NEW_BKPR_AMT ELSE 0 END  ,0)                                            			   AS           NEW_BKPR_AMT
		        , NVL( CASE WHEN BASE_DATE = #{BASE_DATE} THEN BKPR_APLY_RATE_AMT ELSE 0 END  ,0)                                      			   AS     BKPR_APLY_RATE_AMT
		        , NVL( CASE WHEN BASE_DATE = #{BASE_DATE} THEN NEW_BKPR_APLY_RATE_AMT ELSE 0 END  ,0)                                   		   AS NEW_BKPR_APLY_RATE_AMT    
		        --------------------------------------------------
		        , NVL( CASE WHEN BASE_DATE = TO_CHAR(TO_DATE(#{BASE_DATE},'YYYYMMDD') - 1 ,'YYYYMMDD') THEN BKPR_AMT ELSE 0 END  ,0)               AS               BKPR_AMT1 
		        , NVL( CASE WHEN BASE_DATE = TO_CHAR(TO_DATE(#{BASE_DATE},'YYYYMMDD') - 1 ,'YYYYMMDD') THEN NEW_BKPR_AMT ELSE 0 END  ,0)           AS           NEW_BKPR_AMT1
		        , NVL( CASE WHEN BASE_DATE = TO_CHAR(TO_DATE(#{BASE_DATE},'YYYYMMDD') - 1 ,'YYYYMMDD') THEN BKPR_APLY_RATE_AMT ELSE 0 END  ,0)     AS     BKPR_APLY_RATE_AMT1
		        , NVL( CASE WHEN BASE_DATE = TO_CHAR(TO_DATE(#{BASE_DATE},'YYYYMMDD') - 1 ,'YYYYMMDD') THEN NEW_BKPR_APLY_RATE_AMT ELSE 0 END  ,0) AS NEW_BKPR_APLY_RATE_AMT1       
		        --------------------------------------------------
		        , NVL( CASE WHEN BASE_DATE = TO_CHAR(TO_DATE(#{BASE_DATE},'YYYYMMDD') - 2 ,'YYYYMMDD') THEN BKPR_AMT ELSE 0 END  ,0)               AS               BKPR_AMT2 
		        , NVL( CASE WHEN BASE_DATE = TO_CHAR(TO_DATE(#{BASE_DATE},'YYYYMMDD') - 2 ,'YYYYMMDD') THEN NEW_BKPR_AMT ELSE 0 END  ,0)           AS           NEW_BKPR_AMT2
		        , NVL( CASE WHEN BASE_DATE = TO_CHAR(TO_DATE(#{BASE_DATE},'YYYYMMDD') - 2 ,'YYYYMMDD') THEN BKPR_APLY_RATE_AMT ELSE 0 END  ,0)     AS     BKPR_APLY_RATE_AMT2
		        , NVL( CASE WHEN BASE_DATE = TO_CHAR(TO_DATE(#{BASE_DATE},'YYYYMMDD') - 2 ,'YYYYMMDD') THEN NEW_BKPR_APLY_RATE_AMT ELSE 0 END  ,0) AS NEW_BKPR_APLY_RATE_AMT2       
		        --------------------------------------------------
		        , NVL( CASE WHEN BASE_DATE = TO_CHAR(TO_DATE(#{BASE_DATE},'YYYYMMDD') - 3 ,'YYYYMMDD') THEN BKPR_AMT ELSE 0 END  ,0)               AS               BKPR_AMT3 
		        , NVL( CASE WHEN BASE_DATE = TO_CHAR(TO_DATE(#{BASE_DATE},'YYYYMMDD') - 3 ,'YYYYMMDD') THEN NEW_BKPR_AMT ELSE 0 END  ,0)           AS           NEW_BKPR_AMT3
		        , NVL( CASE WHEN BASE_DATE = TO_CHAR(TO_DATE(#{BASE_DATE},'YYYYMMDD') - 3 ,'YYYYMMDD') THEN BKPR_APLY_RATE_AMT ELSE 0 END  ,0)     AS     BKPR_APLY_RATE_AMT3
		        , NVL( CASE WHEN BASE_DATE = TO_CHAR(TO_DATE(#{BASE_DATE},'YYYYMMDD') - 3 ,'YYYYMMDD') THEN NEW_BKPR_APLY_RATE_AMT ELSE 0 END  ,0) AS NEW_BKPR_APLY_RATE_AMT3       
		        --------------------------------------------------
		        , NVL( CASE WHEN BASE_DATE = TO_CHAR(TO_DATE(#{BASE_DATE},'YYYYMMDD') - 4 ,'YYYYMMDD') THEN BKPR_AMT ELSE 0 END  ,0)               AS               BKPR_AMT4 
		        , NVL( CASE WHEN BASE_DATE = TO_CHAR(TO_DATE(#{BASE_DATE},'YYYYMMDD') - 4 ,'YYYYMMDD') THEN NEW_BKPR_AMT ELSE 0 END  ,0)           AS           NEW_BKPR_AMT4
		        , NVL( CASE WHEN BASE_DATE = TO_CHAR(TO_DATE(#{BASE_DATE},'YYYYMMDD') - 4 ,'YYYYMMDD') THEN BKPR_APLY_RATE_AMT ELSE 0 END  ,0)     AS     BKPR_APLY_RATE_AMT4
		        , NVL( CASE WHEN BASE_DATE = TO_CHAR(TO_DATE(#{BASE_DATE},'YYYYMMDD') - 4 ,'YYYYMMDD') THEN NEW_BKPR_APLY_RATE_AMT ELSE 0 END  ,0) AS NEW_BKPR_APLY_RATE_AMT4       
		        --------------------------------------------------
		        , NVL( CASE WHEN BASE_DATE = TO_CHAR(TO_DATE(#{BASE_DATE},'YYYYMMDD') - 5 ,'YYYYMMDD') THEN BKPR_AMT ELSE 0 END  ,0)               AS               BKPR_AMT5 
		        , NVL( CASE WHEN BASE_DATE = TO_CHAR(TO_DATE(#{BASE_DATE},'YYYYMMDD') - 5 ,'YYYYMMDD') THEN NEW_BKPR_AMT ELSE 0 END  ,0)           AS           NEW_BKPR_AMT5
		        , NVL( CASE WHEN BASE_DATE = TO_CHAR(TO_DATE(#{BASE_DATE},'YYYYMMDD') - 5 ,'YYYYMMDD') THEN BKPR_APLY_RATE_AMT ELSE 0 END  ,0)     AS     BKPR_APLY_RATE_AMT5
		        , NVL( CASE WHEN BASE_DATE = TO_CHAR(TO_DATE(#{BASE_DATE},'YYYYMMDD') - 5 ,'YYYYMMDD') THEN NEW_BKPR_APLY_RATE_AMT ELSE 0 END  ,0) AS NEW_BKPR_APLY_RATE_AMT5       
		        --------------------------------------------------
		        , NVL( CASE WHEN BASE_DATE = TO_CHAR(TO_DATE(#{BASE_DATE},'YYYYMMDD') - 6 ,'YYYYMMDD') THEN BKPR_AMT ELSE 0 END  ,0)               AS               BKPR_AMT6 
		        , NVL( CASE WHEN BASE_DATE = TO_CHAR(TO_DATE(#{BASE_DATE},'YYYYMMDD') - 6 ,'YYYYMMDD') THEN NEW_BKPR_AMT ELSE 0 END  ,0)           AS           NEW_BKPR_AMT6
		        , NVL( CASE WHEN BASE_DATE = TO_CHAR(TO_DATE(#{BASE_DATE},'YYYYMMDD') - 6 ,'YYYYMMDD') THEN BKPR_APLY_RATE_AMT ELSE 0 END  ,0)     AS     BKPR_APLY_RATE_AMT6
		        , NVL( CASE WHEN BASE_DATE = TO_CHAR(TO_DATE(#{BASE_DATE},'YYYYMMDD') - 6 ,'YYYYMMDD') THEN NEW_BKPR_APLY_RATE_AMT ELSE 0 END  ,0) AS NEW_BKPR_APLY_RATE_AMT6       
		        --------------------------------------------------
		        , NVL( CASE WHEN BASE_DATE = TO_CHAR(TO_DATE(#{BASE_DATE},'YYYYMMDD') - 7 ,'YYYYMMDD') THEN BKPR_AMT ELSE 0 END  ,0)               AS               BKPR_AMT7 
		        , NVL( CASE WHEN BASE_DATE = TO_CHAR(TO_DATE(#{BASE_DATE},'YYYYMMDD') - 7 ,'YYYYMMDD') THEN NEW_BKPR_AMT ELSE 0 END  ,0)           AS           NEW_BKPR_AMT7
		        , NVL( CASE WHEN BASE_DATE = TO_CHAR(TO_DATE(#{BASE_DATE},'YYYYMMDD') - 7 ,'YYYYMMDD') THEN BKPR_APLY_RATE_AMT ELSE 0 END  ,0)     AS     BKPR_APLY_RATE_AMT7
		        , NVL( CASE WHEN BASE_DATE = TO_CHAR(TO_DATE(#{BASE_DATE},'YYYYMMDD') - 7 ,'YYYYMMDD') THEN NEW_BKPR_APLY_RATE_AMT ELSE 0 END  ,0) AS NEW_BKPR_APLY_RATE_AMT7       
		        --------------------------------------------------
		        , NVL( CASE WHEN BASE_DATE = TO_CHAR(TO_DATE(#{BASE_DATE},'YYYYMMDD') - 8 ,'YYYYMMDD') THEN BKPR_AMT ELSE 0 END  ,0)               AS               BKPR_AMT8 
		        , NVL( CASE WHEN BASE_DATE = TO_CHAR(TO_DATE(#{BASE_DATE},'YYYYMMDD') - 8 ,'YYYYMMDD') THEN NEW_BKPR_AMT ELSE 0 END  ,0)           AS           NEW_BKPR_AMT8
		        , NVL( CASE WHEN BASE_DATE = TO_CHAR(TO_DATE(#{BASE_DATE},'YYYYMMDD') - 8 ,'YYYYMMDD') THEN BKPR_APLY_RATE_AMT ELSE 0 END  ,0)     AS     BKPR_APLY_RATE_AMT8
		        , NVL( CASE WHEN BASE_DATE = TO_CHAR(TO_DATE(#{BASE_DATE},'YYYYMMDD') - 8 ,'YYYYMMDD') THEN NEW_BKPR_APLY_RATE_AMT ELSE 0 END  ,0) AS NEW_BKPR_APLY_RATE_AMT8       
		        --------------------------------------------------
		        , NVL( CASE WHEN BASE_DATE = TO_CHAR(TO_DATE(#{BASE_DATE},'YYYYMMDD') - 9 ,'YYYYMMDD') THEN BKPR_AMT ELSE 0 END  ,0)               AS               BKPR_AMT9 
		        , NVL( CASE WHEN BASE_DATE = TO_CHAR(TO_DATE(#{BASE_DATE},'YYYYMMDD') - 9 ,'YYYYMMDD') THEN NEW_BKPR_AMT ELSE 0 END  ,0)           AS           NEW_BKPR_AMT9
		        , NVL( CASE WHEN BASE_DATE = TO_CHAR(TO_DATE(#{BASE_DATE},'YYYYMMDD') - 9 ,'YYYYMMDD') THEN BKPR_APLY_RATE_AMT ELSE 0 END  ,0)     AS     BKPR_APLY_RATE_AMT9
		        , NVL( CASE WHEN BASE_DATE = TO_CHAR(TO_DATE(#{BASE_DATE},'YYYYMMDD') - 9 ,'YYYYMMDD') THEN NEW_BKPR_APLY_RATE_AMT ELSE 0 END  ,0) AS NEW_BKPR_APLY_RATE_AMT9       
		        --------------------------------------------------
		        , NVL( CASE WHEN BASE_DATE = TO_CHAR(TO_DATE(#{BASE_DATE},'YYYYMMDD') - 10 ,'YYYYMMDD') THEN BKPR_AMT ELSE 0 END  ,0)              AS               BKPR_AMT10 
		        , NVL( CASE WHEN BASE_DATE = TO_CHAR(TO_DATE(#{BASE_DATE},'YYYYMMDD') - 10 ,'YYYYMMDD') THEN NEW_BKPR_AMT ELSE 0 END  ,0)          AS           NEW_BKPR_AMT10
		        , NVL( CASE WHEN BASE_DATE = TO_CHAR(TO_DATE(#{BASE_DATE},'YYYYMMDD') - 10 ,'YYYYMMDD') THEN BKPR_APLY_RATE_AMT ELSE 0 END  ,0)    AS     BKPR_APLY_RATE_AMT10
		        , NVL( CASE WHEN BASE_DATE = TO_CHAR(TO_DATE(#{BASE_DATE},'YYYYMMDD') - 10 ,'YYYYMMDD') THEN NEW_BKPR_APLY_RATE_AMT ELSE 0 END  ,0)AS NEW_BKPR_APLY_RATE_AMT10       
		        --------------------------------------------------
		    FROM  TSR_SPLY_OPR_STAT 
		    WHERE ALM_WORK_TC = 'D'
		      AND CUR_C       = 'KRW'
		      AND ORG_CLAS_C  = #{ORG_CLAS_C}
		      AND BASE_DATE   IN (
		                             #{BASE_DATE} 
		                            ,TO_CHAR(TO_DATE(#{BASE_DATE},'YYYYMMDD') - 1 ,'YYYYMMDD')
		                            ,TO_CHAR(TO_DATE(#{BASE_DATE},'YYYYMMDD') - 2 ,'YYYYMMDD')
		                            ,TO_CHAR(TO_DATE(#{BASE_DATE},'YYYYMMDD') - 3 ,'YYYYMMDD')
		                            ,TO_CHAR(TO_DATE(#{BASE_DATE},'YYYYMMDD') - 4 ,'YYYYMMDD')
		                            ,TO_CHAR(TO_DATE(#{BASE_DATE},'YYYYMMDD') - 5 ,'YYYYMMDD')
		                            ,TO_CHAR(TO_DATE(#{BASE_DATE},'YYYYMMDD') - 6 ,'YYYYMMDD')
		                            ,TO_CHAR(TO_DATE(#{BASE_DATE},'YYYYMMDD') - 7 ,'YYYYMMDD')
		                            ,TO_CHAR(TO_DATE(#{BASE_DATE},'YYYYMMDD') - 8 ,'YYYYMMDD')
		                            ,TO_CHAR(TO_DATE(#{BASE_DATE},'YYYYMMDD') - 9 ,'YYYYMMDD')
		                            ,TO_CHAR(TO_DATE(#{BASE_DATE},'YYYYMMDD') - 10 ,'YYYYMMDD')
		                         )
			 -- ( 회계구분  )
			 --************************************************
			 /* 중앙회 조회 시 에만 발생  */
		 	<if test="AC_BUSI_TC == '0000'">
		 		AND AC_BUSI_TC IN('1105','1106','1107')
		 	</if>
		 	<if test="AC_BUSI_TC != '0000'">
		 		AND AC_BUSI_TC = #{AC_BUSI_TC}
		 	</if>
			 --************************************************
			 
			 
			 -- ( 점소코드  )
			 --************************************************
			 -- 전체조합 조회 시 
			 -- 신용회계 고정(2102)
			 <if test="JISO_INCLUDE == 'no' and BLNG_HQ_BR_C == '' and BR_C == 'ALL'">
			 	-- 모든 점소코드 나오기
			 </if>
			 
			 -- 단위조합별 조회 시 (지소포함여부  yes/no)
			 -- 신용회계 고정(2102)
			 <if test="JISO_INCLUDE == 'yes' and BLNG_HQ_BR_C != ''">   
			 	AND BR_C IN ( SELECT BR_C FROM TTL_BR_C_INFO WHERE MO_BR_C = #{BR_C} ) 
			 </if>
			 <if test="JISO_INCLUDE == 'no' and BLNG_HQ_BR_C != ''"> 
			 	AND BR_C     = #{BR_C}
			 </if>
			 
			 -- 도지회별 조회 시 
			 -- 신용회계 고정(2102)
			 <if test="JISO_INCLUDE == 'no' and BLNG_HQ_BR_C == '' and BR_C != 'ALL' and BR_C != '001'">
			 	AND BR_C IN ( SELECT BR_C FROM TTL_BR_C_INFO WHERE BLNG_HQ_BR_C = #{BR_C} )
			 </if>
			 
			 -- 중앙회 조회 시  
			 <if test="JISO_INCLUDE == 'no' and BLNG_HQ_BR_C == '' and BR_C == '001'">
				AND BR_C     = #{BR_C}
			 </if>
			 --************************************************
		)
	
	</sql>


    <!-- 조달운용 현황 조회(잔액)  -->
	<select id = "selectTR_6202" parameterType="java.util.Map" resultType="java.util.HashMap">
	
	   	<include refid="tr_6202With"></include>
		   
		SELECT
	     	LVL1                                                                                                         		 AS ACCT_NM1
	     	<if test="LVL == 2">
	    	,DECODE( GROUPING_ID( LVL2 ), 1  , LVL1 || ' 소계', LVL2 )                            								 AS ACCT_NM2
	    	,GROUPING_ID( LVL2 )                                                               									 AS GRP_ID   
	     	</if>
	     	<if test="LVL == 3">
	    	,DECODE( GROUPING_ID( LVL2,LVL3 ), 3  , LVL1 || ' 소계', LVL2 )                            							 AS ACCT_NM2
	    	,DECODE( GROUPING_ID( LVL2,LVL3 ), 1  , LVL2 || ' 소계', LVL3 )                            							 AS ACCT_NM3
	    	,GROUPING_ID( LVL2,LVL3 )                                                               							 AS GRP_ID
	     	</if>
	     	<if test="LVL == 4">
	    	,DECODE( GROUPING_ID( LVL2,LVL3,LVL4 ), 7  , LVL1 || ' 소계', LVL2 )                            						 AS ACCT_NM2
	    	,DECODE( GROUPING_ID( LVL2,LVL3,LVL4 ), 3  , LVL2 || ' 소계', LVL3 )                            						 AS ACCT_NM3
	    	,DECODE( GROUPING_ID( LVL2,LVL3,LVL4 ), 1  , LVL3 || ' 소계', LVL4 )                            						 AS ACCT_NM4
	    	,GROUPING_ID( LVL2,LVL3,LVL4 )                                                               						 AS GRP_ID
	     	</if>
	     	<if test="LVL == 5">
	    	,DECODE( GROUPING_ID( LVL2,LVL3,LVL4,LVL5 ), 15 , LVL1 || ' 소계', LVL2 )                            					 AS ACCT_NM2
	    	,DECODE( GROUPING_ID( LVL2,LVL3,LVL4,LVL5 ), 7  , LVL2 || ' 소계', LVL3 )                            					 AS ACCT_NM3
	    	,DECODE( GROUPING_ID( LVL2,LVL3,LVL4,LVL5 ), 3  , LVL3 || ' 소계', LVL4 )                            					 AS ACCT_NM4
	    	,DECODE( GROUPING_ID( LVL2,LVL3,LVL4,LVL5 ), 1  , LVL4 || ' 소계', LVL5 )                            					 AS ACCT_NM5
	    	,GROUPING_ID( LVL2,LVL3,LVL4,LVL5   )                                                               				 AS GRP_ID
	     	</if>
	     	<if test="LVL == 6">
	    	,DECODE( GROUPING_ID( LVL2,LVL3,LVL4,LVL5,LVL6 ), 31 , LVL1 || ' 소계', LVL2 )                            			 AS  ACCT_NM2
	    	,DECODE( GROUPING_ID( LVL2,LVL3,LVL4,LVL5,LVL6 ), 15 , LVL2 || ' 소계', LVL3 )                            			 AS  ACCT_NM3
	    	,DECODE( GROUPING_ID( LVL2,LVL3,LVL4,LVL5,LVL6 ), 7  , LVL3 || ' 소계', LVL4 )                           		    	 AS  ACCT_NM4
	    	,DECODE( GROUPING_ID( LVL2,LVL3,LVL4,LVL5,LVL6 ), 3  , LVL4 || ' 소계', LVL5 )                            			 AS  ACCT_NM5
	    	,DECODE( GROUPING_ID( LVL2,LVL3,LVL4,LVL5,LVL6 ), 1  , LVL5 || ' 소계', LVL6 )                            			 AS  ACCT_NM6
	    	,GROUPING_ID( LVL2,LVL3,LVL4,LVL5,LVL6 )                                                               				 AS  GRP_ID
	     	</if>
	     	<if test="LVL == 7">
	    	,DECODE( GROUPING_ID( LVL2,LVL3,LVL4,LVL5,LVL6,LVL7 ), 63 , LVL1 || ' 소계', LVL2 )                            		 AS ACCT_NM2
	    	,DECODE( GROUPING_ID( LVL2,LVL3,LVL4,LVL5,LVL6,LVL7 ), 31 , LVL2 || ' 소계', LVL3 )                           		 AS ACCT_NM3
	    	,DECODE( GROUPING_ID( LVL2,LVL3,LVL4,LVL5,LVL6,LVL7 ), 15 , LVL3 || ' 소계', LVL4 )                            		 AS ACCT_NM4
	   	 	,DECODE( GROUPING_ID( LVL2,LVL3,LVL4,LVL5,LVL6,LVL7 ), 7  , LVL4 || ' 소계', LVL5 )                            		 AS ACCT_NM5
	    	,DECODE( GROUPING_ID( LVL2,LVL3,LVL4,LVL5,LVL6,LVL7 ), 3  , LVL5 || ' 소계', LVL6 )                            		 AS ACCT_NM6
	    	,DECODE( GROUPING_ID( LVL2,LVL3,LVL4,LVL5,LVL6,LVL7 ), 1  , LVL6 || ' 소계', LVL7 )                            		 AS ACCT_NM7
	    	,GROUPING_ID( LVL2,LVL3,LVL4,LVL5,LVL6,LVL7   )                                                                  	 AS GRP_ID   
	     	</if> 
            ------------------------------------------------
		    , SUM(                    VIEW_BKPR_AMT )                                                                            AS          AMT
		    , SUM(                NEW_VIEW_BKPR_AMT )                                                                            AS      NEW_AMT
		    , NVL(ROUND(SUM(     BKPR_APLY_RATE_AMT ) / DECODE( SUM(     BKPR_AMT  ),0,NULL,SUM(     BKPR_AMT  ) ) ,2),0)        AS     AVG_RATE
		    , NVL(ROUND(SUM( NEW_BKPR_APLY_RATE_AMT ) / DECODE( SUM( NEW_BKPR_AMT  ),0,NULL,SUM( NEW_BKPR_AMT  ) ) ,2),0)        AS NEW_AVG_RATE
            ------------------------------------------------                                                                     
		    , SUM(                    VIEW_BKPR_AMT1 )                                                                           AS          AMT1
		    , SUM(                NEW_VIEW_BKPR_AMT1 )                                                                           AS      NEW_AMT1
		    , NVL(ROUND(SUM(     BKPR_APLY_RATE_AMT1 ) / DECODE( SUM(     BKPR_AMT1  ),0,NULL,SUM(     BKPR_AMT1  ) ) ,2),0)     AS     AVG_RATE1
		    , NVL(ROUND(SUM( NEW_BKPR_APLY_RATE_AMT1 ) / DECODE( SUM( NEW_BKPR_AMT1  ),0,NULL,SUM( NEW_BKPR_AMT1  ) ) ,2),0)     AS NEW_AVG_RATE1
            ------------------------------------------------                                                                     
		    , SUM(                    VIEW_BKPR_AMT2 )                                                                           AS          AMT2
		    , SUM(                NEW_VIEW_BKPR_AMT2 )                                                                           AS      NEW_AMT2
		    , NVL(ROUND(SUM(     BKPR_APLY_RATE_AMT2 ) / DECODE( SUM(     BKPR_AMT2  ),0,NULL,SUM(     BKPR_AMT2  ) ) ,2),0)     AS     AVG_RATE2
		    , NVL(ROUND(SUM( NEW_BKPR_APLY_RATE_AMT2 ) / DECODE( SUM( NEW_BKPR_AMT2  ),0,NULL,SUM( NEW_BKPR_AMT2  ) ) ,2),0)     AS NEW_AVG_RATE2
            ------------------------------------------------                                                                     
		    , SUM(                    VIEW_BKPR_AMT3 )                                                                           AS          AMT3
		    , SUM(                NEW_VIEW_BKPR_AMT3 )                                                                           AS      NEW_AMT3
		    , NVL(ROUND(SUM(     BKPR_APLY_RATE_AMT3 ) / DECODE( SUM(     BKPR_AMT3  ),0,NULL,SUM(     BKPR_AMT3  ) ) ,2),0)     AS     AVG_RATE3
		    , NVL(ROUND(SUM( NEW_BKPR_APLY_RATE_AMT3 ) / DECODE( SUM( NEW_BKPR_AMT3  ),0,NULL,SUM( NEW_BKPR_AMT3  ) ) ,2),0)     AS NEW_AVG_RATE3
            ------------------------------------------------                                                                     
		    , SUM(                    VIEW_BKPR_AMT4 )                                                                           AS          AMT4
		    , SUM(                NEW_VIEW_BKPR_AMT4 )                                                                           AS      NEW_AMT4
		    , NVL(ROUND(SUM(     BKPR_APLY_RATE_AMT4 ) / DECODE( SUM(     BKPR_AMT4  ),0,NULL,SUM(     BKPR_AMT4  ) ) ,2),0)     AS     AVG_RATE4
		    , NVL(ROUND(SUM( NEW_BKPR_APLY_RATE_AMT4 ) / DECODE( SUM( NEW_BKPR_AMT4  ),0,NULL,SUM( NEW_BKPR_AMT4  ) ) ,2),0)     AS NEW_AVG_RATE4
            ------------------------------------------------                                                                     
		    , SUM(                    VIEW_BKPR_AMT5 )                                                                           AS          AMT5
		    , SUM(                NEW_VIEW_BKPR_AMT5 )                                                                           AS      NEW_AMT5
		    , NVL(ROUND(SUM(     BKPR_APLY_RATE_AMT5 ) / DECODE( SUM(     BKPR_AMT5  ),0,NULL,SUM(     BKPR_AMT5  ) ) ,2),0)     AS     AVG_RATE5
		    , NVL(ROUND(SUM( NEW_BKPR_APLY_RATE_AMT5 ) / DECODE( SUM( NEW_BKPR_AMT5  ),0,NULL,SUM( NEW_BKPR_AMT5  ) ) ,2),0)     AS NEW_AVG_RATE5
            ------------------------------------------------                                                                     
		    , SUM(                    VIEW_BKPR_AMT6 )                                                                           AS          AMT6
		    , SUM(                NEW_VIEW_BKPR_AMT6 )                                                                           AS      NEW_AMT6
		    , NVL(ROUND(SUM(     BKPR_APLY_RATE_AMT6 ) / DECODE( SUM(     BKPR_AMT6  ),0,NULL,SUM(     BKPR_AMT6  ) ) ,2),0)     AS     AVG_RATE6
		    , NVL(ROUND(SUM( NEW_BKPR_APLY_RATE_AMT6 ) / DECODE( SUM( NEW_BKPR_AMT6  ),0,NULL,SUM( NEW_BKPR_AMT6  ) ) ,2),0)     AS NEW_AVG_RATE6
            ------------------------------------------------                                                                     
		    , SUM(                    VIEW_BKPR_AMT7 )                                                                           AS          AMT7
		    , SUM(                NEW_VIEW_BKPR_AMT7 )                                                                           AS      NEW_AMT7
		    , NVL(ROUND(SUM(     BKPR_APLY_RATE_AMT7 ) / DECODE( SUM(     BKPR_AMT7  ),0,NULL,SUM(     BKPR_AMT7  ) ) ,2),0)     AS     AVG_RATE7
		    , NVL(ROUND(SUM( NEW_BKPR_APLY_RATE_AMT7 ) / DECODE( SUM( NEW_BKPR_AMT7  ),0,NULL,SUM( NEW_BKPR_AMT7  ) ) ,2),0)     AS NEW_AVG_RATE7
            ------------------------------------------------                                                                     
		    , SUM(                    VIEW_BKPR_AMT8 )                                                                           AS          AMT8
		    , SUM(                NEW_VIEW_BKPR_AMT8 )                                                                           AS      NEW_AMT8
		    , NVL(ROUND(SUM(     BKPR_APLY_RATE_AMT8 ) / DECODE( SUM(     BKPR_AMT8  ),0,NULL,SUM(     BKPR_AMT8  ) ) ,2),0)     AS     AVG_RATE8
		    , NVL(ROUND(SUM( NEW_BKPR_APLY_RATE_AMT8 ) / DECODE( SUM( NEW_BKPR_AMT8  ),0,NULL,SUM( NEW_BKPR_AMT8  ) ) ,2),0)     AS NEW_AVG_RATE8
            ------------------------------------------------                                                                     
		    , SUM(                    VIEW_BKPR_AMT9 )                                                                           AS          AMT9
		    , SUM(                NEW_VIEW_BKPR_AMT9 )                                                                           AS      NEW_AMT9
		    , NVL(ROUND(SUM(     BKPR_APLY_RATE_AMT9 ) / DECODE( SUM(     BKPR_AMT9  ),0,NULL,SUM(     BKPR_AMT9  ) ) ,2),0)     AS     AVG_RATE9
		    , NVL(ROUND(SUM( NEW_BKPR_APLY_RATE_AMT9 ) / DECODE( SUM( NEW_BKPR_AMT9  ),0,NULL,SUM( NEW_BKPR_AMT9  ) ) ,2),0)     AS NEW_AVG_RATE9
            ------------------------------------------------
		    , SUM(                    VIEW_BKPR_AMT10 )                                                                          AS          AMT10
		    , SUM(                NEW_VIEW_BKPR_AMT10 )                                                                          AS      NEW_AMT10
		    , NVL(ROUND(SUM(     BKPR_APLY_RATE_AMT10 ) / DECODE( SUM(     BKPR_AMT10  ),0,NULL,SUM(     BKPR_AMT10  ) ) ,2),0)  AS     AVG_RATE10
		    , NVL(ROUND(SUM( NEW_BKPR_APLY_RATE_AMT10 ) / DECODE( SUM( NEW_BKPR_AMT10  ),0,NULL,SUM( NEW_BKPR_AMT10  ) ) ,2),0)  AS NEW_AVG_RATE10
            ------------------------------------------------
	FROM 
	(
	    SELECT
	         LVL1
     	<if test="LVL == 2">
        	,LVL2 
     	</if>
     	<if test="LVL == 3">
        	,LVL2 
        	,LVL3
     	</if>
     	<if test="LVL == 4">
        	,LVL2 
        	,LVL3
        	,LVL4
     	</if>
     	<if test="LVL == 5">
        	,LVL2 
        	,LVL3
        	,LVL4
        	,LVL5
     	</if>
     	<if test="LVL == 6">
        	,LVL2 
        	,LVL3
        	,LVL4
        	,LVL5
        	,LVL6
     	</if>
     	<if test="LVL == 7"> 
        	,LVL2 
        	,LVL3
        	,LVL4
        	,LVL5
        	,LVL6
        	,LVL7
     	</if>      
            ,ROUND(SUM(BKPR_AMT      ) / TO_NUMBER(#{AMT_UNIT}) )   AS               VIEW_BKPR_AMT
            ,ROUND(SUM(NEW_BKPR_AMT  ) / TO_NUMBER(#{AMT_UNIT}) )   AS           NEW_VIEW_BKPR_AMT
            ,ROUND(SUM(BKPR_AMT1     ) / TO_NUMBER(#{AMT_UNIT}) )   AS               VIEW_BKPR_AMT1
            ,ROUND(SUM(NEW_BKPR_AMT1 ) / TO_NUMBER(#{AMT_UNIT}) )   AS           NEW_VIEW_BKPR_AMT1
            ,ROUND(SUM(BKPR_AMT2     ) / TO_NUMBER(#{AMT_UNIT}) )   AS               VIEW_BKPR_AMT2
            ,ROUND(SUM(NEW_BKPR_AMT2 ) / TO_NUMBER(#{AMT_UNIT}) )   AS           NEW_VIEW_BKPR_AMT2
            ,ROUND(SUM(BKPR_AMT3     ) / TO_NUMBER(#{AMT_UNIT}) )   AS               VIEW_BKPR_AMT3
            ,ROUND(SUM(NEW_BKPR_AMT3 ) / TO_NUMBER(#{AMT_UNIT}) )   AS           NEW_VIEW_BKPR_AMT3
            ,ROUND(SUM(BKPR_AMT4     ) / TO_NUMBER(#{AMT_UNIT}) )   AS               VIEW_BKPR_AMT4
            ,ROUND(SUM(NEW_BKPR_AMT4 ) / TO_NUMBER(#{AMT_UNIT}) )   AS           NEW_VIEW_BKPR_AMT4
            ,ROUND(SUM(BKPR_AMT5     ) / TO_NUMBER(#{AMT_UNIT}) )   AS               VIEW_BKPR_AMT5
            ,ROUND(SUM(NEW_BKPR_AMT5 ) / TO_NUMBER(#{AMT_UNIT}) )   AS           NEW_VIEW_BKPR_AMT5
            ,ROUND(SUM(BKPR_AMT6     ) / TO_NUMBER(#{AMT_UNIT}) )   AS               VIEW_BKPR_AMT6
            ,ROUND(SUM(NEW_BKPR_AMT6 ) / TO_NUMBER(#{AMT_UNIT}) )   AS           NEW_VIEW_BKPR_AMT6
            ,ROUND(SUM(BKPR_AMT7     ) / TO_NUMBER(#{AMT_UNIT}) )   AS               VIEW_BKPR_AMT7
            ,ROUND(SUM(NEW_BKPR_AMT7 ) / TO_NUMBER(#{AMT_UNIT}) )   AS           NEW_VIEW_BKPR_AMT7
            ,ROUND(SUM(BKPR_AMT8     ) / TO_NUMBER(#{AMT_UNIT}) )   AS               VIEW_BKPR_AMT8
            ,ROUND(SUM(NEW_BKPR_AMT8 ) / TO_NUMBER(#{AMT_UNIT}) )   AS           NEW_VIEW_BKPR_AMT8
            ,ROUND(SUM(BKPR_AMT9     ) / TO_NUMBER(#{AMT_UNIT}) )   AS               VIEW_BKPR_AMT9
            ,ROUND(SUM(NEW_BKPR_AMT9 ) / TO_NUMBER(#{AMT_UNIT}) )   AS           NEW_VIEW_BKPR_AMT9
            ,ROUND(SUM(BKPR_AMT10    ) / TO_NUMBER(#{AMT_UNIT}) )   AS               VIEW_BKPR_AMT10
            ,ROUND(SUM(NEW_BKPR_AMT10) / TO_NUMBER(#{AMT_UNIT}) )   AS           NEW_VIEW_BKPR_AMT10
            ------------------------------------------------
            ,SUM(              BKPR_AMT )     AS               BKPR_AMT
            ,SUM(          NEW_BKPR_AMT )     AS           NEW_BKPR_AMT
            ,SUM(    BKPR_APLY_RATE_AMT )     AS     BKPR_APLY_RATE_AMT
            ,SUM(NEW_BKPR_APLY_RATE_AMT )     AS NEW_BKPR_APLY_RATE_AMT
            ------------------------------------------------
            ,SUM(              BKPR_AMT1 )    AS               BKPR_AMT1
            ,SUM(          NEW_BKPR_AMT1 )    AS           NEW_BKPR_AMT1
            ,SUM(    BKPR_APLY_RATE_AMT1 )    AS     BKPR_APLY_RATE_AMT1
            ,SUM(NEW_BKPR_APLY_RATE_AMT1 )    AS NEW_BKPR_APLY_RATE_AMT1
            ------------------------------------------------
            ,SUM(              BKPR_AMT2 )    AS               BKPR_AMT2
            ,SUM(          NEW_BKPR_AMT2 )    AS           NEW_BKPR_AMT2
            ,SUM(    BKPR_APLY_RATE_AMT2 )    AS     BKPR_APLY_RATE_AMT2
            ,SUM(NEW_BKPR_APLY_RATE_AMT2 )    AS NEW_BKPR_APLY_RATE_AMT2
            ------------------------------------------------
            ,SUM(              BKPR_AMT3 )    AS               BKPR_AMT3
            ,SUM(          NEW_BKPR_AMT3 )    AS           NEW_BKPR_AMT3
            ,SUM(    BKPR_APLY_RATE_AMT3 )    AS     BKPR_APLY_RATE_AMT3
            ,SUM(NEW_BKPR_APLY_RATE_AMT3 )    AS NEW_BKPR_APLY_RATE_AMT3
            ------------------------------------------------
            ,SUM(              BKPR_AMT4 )    AS               BKPR_AMT4
            ,SUM(          NEW_BKPR_AMT4 )    AS           NEW_BKPR_AMT4
            ,SUM(    BKPR_APLY_RATE_AMT4 )    AS     BKPR_APLY_RATE_AMT4
            ,SUM(NEW_BKPR_APLY_RATE_AMT4 )    AS NEW_BKPR_APLY_RATE_AMT4
            ------------------------------------------------
            ,SUM(              BKPR_AMT5 )    AS               BKPR_AMT5
            ,SUM(          NEW_BKPR_AMT5 )    AS           NEW_BKPR_AMT5
            ,SUM(    BKPR_APLY_RATE_AMT5 )    AS     BKPR_APLY_RATE_AMT5
            ,SUM(NEW_BKPR_APLY_RATE_AMT5 )    AS NEW_BKPR_APLY_RATE_AMT5
            ------------------------------------------------
            ,SUM(              BKPR_AMT6 )    AS               BKPR_AMT6
            ,SUM(          NEW_BKPR_AMT6 )    AS           NEW_BKPR_AMT6
            ,SUM(    BKPR_APLY_RATE_AMT6 )    AS     BKPR_APLY_RATE_AMT6
            ,SUM(NEW_BKPR_APLY_RATE_AMT6 )    AS NEW_BKPR_APLY_RATE_AMT6
            ------------------------------------------------
            ,SUM(              BKPR_AMT7 )    AS               BKPR_AMT7
            ,SUM(          NEW_BKPR_AMT7 )    AS           NEW_BKPR_AMT7
            ,SUM(    BKPR_APLY_RATE_AMT7 )    AS     BKPR_APLY_RATE_AMT7
            ,SUM(NEW_BKPR_APLY_RATE_AMT7 )    AS NEW_BKPR_APLY_RATE_AMT7
            ------------------------------------------------
            ,SUM(              BKPR_AMT8 )    AS               BKPR_AMT8
            ,SUM(          NEW_BKPR_AMT8 )    AS           NEW_BKPR_AMT8
            ,SUM(    BKPR_APLY_RATE_AMT8 )    AS     BKPR_APLY_RATE_AMT8
            ,SUM(NEW_BKPR_APLY_RATE_AMT8 )    AS NEW_BKPR_APLY_RATE_AMT8
            ------------------------------------------------
            ,SUM(              BKPR_AMT9 )    AS               BKPR_AMT9
            ,SUM(          NEW_BKPR_AMT9 )    AS           NEW_BKPR_AMT9
            ,SUM(    BKPR_APLY_RATE_AMT9 )    AS     BKPR_APLY_RATE_AMT9
            ,SUM(NEW_BKPR_APLY_RATE_AMT9 )    AS NEW_BKPR_APLY_RATE_AMT9
            ------------------------------------------------
            ,SUM(              BKPR_AMT10 )   AS               BKPR_AMT10
            ,SUM(          NEW_BKPR_AMT10 )   AS           NEW_BKPR_AMT10
            ,SUM(    BKPR_APLY_RATE_AMT10 )   AS     BKPR_APLY_RATE_AMT10
            ,SUM(NEW_BKPR_APLY_RATE_AMT10 )   AS NEW_BKPR_APLY_RATE_AMT10
            ------------------------------------------------
	        ,MAX(PRNT_ORD1)                                    AS PRNT_ORD1
	        ,MAX(PRNT_ORD2)                                    AS PRNT_ORD2
	        ,MAX(PRNT_ORD3)                                    AS PRNT_ORD3
	        ,MAX(PRNT_ORD4)                                    AS PRNT_ORD4
	        ,MAX(PRNT_ORD5)                                    AS PRNT_ORD5
	        ,MAX(PRNT_ORD6)                                    AS PRNT_ORD6
	        ,MAX(PRNT_ORD7)                                    AS PRNT_ORD7
	    FROM 
	    (
	        SELECT
	             B.LVL1
	            ,B.LVL2 
	            ,B.LVL3
	            ,B.LVL4
	            ,B.LVL5
	            ,B.LVL6
	            ,B.LVL7
	            ,B.ACCT_LVL
	            ,A.BKPR_AMT 
	            ,A.NEW_BKPR_AMT
	            ,A.BKPR_APLY_RATE_AMT
	            ,A.NEW_BKPR_APLY_RATE_AMT   
	            ,A.BKPR_AMT1 
	            ,A.NEW_BKPR_AMT1
	            ,A.BKPR_APLY_RATE_AMT1
	            ,A.NEW_BKPR_APLY_RATE_AMT1   
	            ,A.BKPR_AMT2 
	            ,A.NEW_BKPR_AMT2
	            ,A.BKPR_APLY_RATE_AMT2
	            ,A.NEW_BKPR_APLY_RATE_AMT2  
	            ,A.BKPR_AMT3 
	            ,A.NEW_BKPR_AMT3
	            ,A.BKPR_APLY_RATE_AMT3
	            ,A.NEW_BKPR_APLY_RATE_AMT3  
	            ,A.BKPR_AMT4 
	            ,A.NEW_BKPR_AMT4
	            ,A.BKPR_APLY_RATE_AMT4
	            ,A.NEW_BKPR_APLY_RATE_AMT4  
	            ,A.BKPR_AMT5 
	            ,A.NEW_BKPR_AMT5
	            ,A.BKPR_APLY_RATE_AMT5
	            ,A.NEW_BKPR_APLY_RATE_AMT5  
	            ,A.BKPR_AMT6 
	            ,A.NEW_BKPR_AMT6
	            ,A.BKPR_APLY_RATE_AMT6
	            ,A.NEW_BKPR_APLY_RATE_AMT6  
	            ,A.BKPR_AMT7 
	            ,A.NEW_BKPR_AMT7
	            ,A.BKPR_APLY_RATE_AMT7
	            ,A.NEW_BKPR_APLY_RATE_AMT7  
	            ,A.BKPR_AMT8 
	            ,A.NEW_BKPR_AMT8
	            ,A.BKPR_APLY_RATE_AMT8
	            ,A.NEW_BKPR_APLY_RATE_AMT8  
	            ,A.BKPR_AMT9 
	            ,A.NEW_BKPR_AMT9
	            ,A.BKPR_APLY_RATE_AMT9
	            ,A.NEW_BKPR_APLY_RATE_AMT9  
	            ,A.BKPR_AMT10 
	            ,A.NEW_BKPR_AMT10
	            ,A.BKPR_APLY_RATE_AMT10
	            ,A.NEW_BKPR_APLY_RATE_AMT10 
	            ,B.PRNT_ORD1
	            ,B.PRNT_ORD2
	            ,B.PRNT_ORD3
	            ,B.PRNT_ORD4
	            ,B.PRNT_ORD5 
	            ,B.PRNT_ORD6
	            ,B.PRNT_ORD7
	        FROM  PROCUREMENT A
	        ,(
	            SELECT
	                  REGEXP_SUBSTR( SYS_CONNECT_BY_PATH( TRIM(ACCT_C_NM) , '%' ) , '[^%]+' , 1 , 1 )  AS LVL1 
	                , NVL(REGEXP_SUBSTR( SYS_CONNECT_BY_PATH( TRIM(ACCT_C_NM) , '%' ) , '[^%]+' , 1 , 2 ),TRIM(ACCT_C_NM))  AS LVL2  
	                , NVL(REGEXP_SUBSTR( SYS_CONNECT_BY_PATH( TRIM(ACCT_C_NM) , '%' ) , '[^%]+' , 1 , 3 ),TRIM(ACCT_C_NM))  AS LVL3  
	                , NVL(REGEXP_SUBSTR( SYS_CONNECT_BY_PATH( TRIM(ACCT_C_NM) , '%' ) , '[^%]+' , 1 , 4 ),TRIM(ACCT_C_NM))  AS LVL4  
	                , NVL(REGEXP_SUBSTR( SYS_CONNECT_BY_PATH( TRIM(ACCT_C_NM) , '%' ) , '[^%]+' , 1 , 5 ),TRIM(ACCT_C_NM))  AS LVL5  
	                , NVL(REGEXP_SUBSTR( SYS_CONNECT_BY_PATH( TRIM(ACCT_C_NM) , '%' ) , '[^%]+' , 1 , 6 ),TRIM(ACCT_C_NM))  AS LVL6 
	                , NVL(REGEXP_SUBSTR( SYS_CONNECT_BY_PATH( TRIM(ACCT_C_NM) , '%' ) , '[^%]+' , 1 , 7 ),TRIM(ACCT_C_NM))  AS LVL7 
	                , TRIM(ACCT_C_NM)                                                                                       AS ACCT_C_NM
	                , ORG_CLAS_C
	                , AC_BUSI_TC
	                , ACCT_C
	                , ACCT_LVL
	                , REGEXP_SUBSTR( SYS_CONNECT_BY_PATH( TRIM(PRNT_ORD) , '%' ) , '[^%]+' , 1 , 1 )  AS PRNT_ORD1 
	                , TO_NUMBER(    NVL(REGEXP_SUBSTR( SYS_CONNECT_BY_PATH( TRIM(PRNT_ORD) , '%' ) , '[^%]+' , 1 , 2 ),TRIM(PRNT_ORD))    ) AS PRNT_ORD2  
	                , TO_NUMBER(    NVL(REGEXP_SUBSTR( SYS_CONNECT_BY_PATH( TRIM(PRNT_ORD) , '%' ) , '[^%]+' , 1 , 3 ),TRIM(PRNT_ORD))    ) AS PRNT_ORD3  
	                , TO_NUMBER(    NVL(REGEXP_SUBSTR( SYS_CONNECT_BY_PATH( TRIM(PRNT_ORD) , '%' ) , '[^%]+' , 1 , 4 ),TRIM(PRNT_ORD))    ) AS PRNT_ORD4  
	                , TO_NUMBER(    NVL(REGEXP_SUBSTR( SYS_CONNECT_BY_PATH( TRIM(PRNT_ORD) , '%' ) , '[^%]+' , 1 , 5 ),TRIM(PRNT_ORD))    ) AS PRNT_ORD5  
	                , TO_NUMBER(    NVL(REGEXP_SUBSTR( SYS_CONNECT_BY_PATH( TRIM(PRNT_ORD) , '%' ) , '[^%]+' , 1 , 6 ),TRIM(PRNT_ORD))    ) AS PRNT_ORD6  
	                , TO_NUMBER(    NVL(REGEXP_SUBSTR( SYS_CONNECT_BY_PATH( TRIM(PRNT_ORD) , '%' ) , '[^%]+' , 1 , 7 ),TRIM(PRNT_ORD))    ) AS PRNT_ORD7  
	            FROM  TSY_ACCT_MSTR_MNG
	            WHERE BASE_DATE = ( SELECT MAX(BASE_DATE) FROM TSY_ACCT_MSTR_MNG WHERE BASE_DATE  &lt;= #{BASE_DATE} )
	            START WITH UP_ACCT_C = '0000000'
	            CONNECT BY PRIOR ACCT_C = UP_ACCT_C AND PRIOR BASE_DATE = BASE_DATE AND PRIOR ORG_CLAS_C = ORG_CLAS_C AND PRIOR AC_BUSI_TC = AC_BUSI_TC
	        )B
	        WHERE 1=1
	          AND A.ACCT_C     = B.ACCT_C 
	          AND A.ORG_CLAS_C = B.ORG_CLAS_C 
	          AND A.AC_BUSI_TC = B.AC_BUSI_TC  
			  AND SUBSTR( A.ACCT_C, 1, 1) != '3' -- 자본(과목) 빼기
	    )  
	    GROUP BY 
	         LVL1
     	<if test="LVL == 2">
        	,LVL2 
     	</if>
     	<if test="LVL == 3">
        	,LVL2 
        	,LVL3
     	</if>
     	<if test="LVL == 4">
        	,LVL2 
        	,LVL3
        	,LVL4
     	</if>
     	<if test="LVL == 5">
        	,LVL2 
        	,LVL3
        	,LVL4
        	,LVL5
     	</if>
     	<if test="LVL == 6">
        	,LVL2 
        	,LVL3
        	,LVL4
        	,LVL5
        	,LVL6
     	</if>
     	<if test="LVL == 7"> 
        	,LVL2 
        	,LVL3
        	,LVL4
        	,LVL5
        	,LVL6
        	,LVL7
     	</if> 
	)
	GROUP BY
			LVL1
			<if test="LVL == 1">
				ORDER BY 
					MAX(PRNT_ORD1)
			</if> 	    
		    <if test="LVL == 2">
		    	, ROLLUP( LVL2 )
				ORDER BY
				    MAX(PRNT_ORD1)
				    ,MAX(PRNT_ORD2)
				    ,GRP_ID
		    </if>
		    <if test="LVL == 3">
		    	, ROLLUP( LVL2, LVL3 )
				ORDER BY
				    MAX(PRNT_ORD1)
				    ,MAX(PRNT_ORD2)
				    ,MAX(PRNT_ORD3)
				    ,GRP_ID
		    </if>
		    <if test="LVL == 4">
		    	, ROLLUP( LVL2, LVL3, LVL4 )
				ORDER BY
				    MAX(PRNT_ORD1)
				    ,MAX(PRNT_ORD2)
				    ,MAX(PRNT_ORD3)
				    ,MAX(PRNT_ORD4)
				    ,GRP_ID
		    </if>
		    <if test="LVL == 5">
		    	, ROLLUP( LVL2, LVL3, LVL4, LVL5 )
				ORDER BY
				    MAX(PRNT_ORD1)
				    ,MAX(PRNT_ORD2)
				    ,MAX(PRNT_ORD3)
				    ,MAX(PRNT_ORD4)
				    ,MAX(PRNT_ORD5)
				    ,GRP_ID
		    </if>
		    <if test="LVL == 6">
		    	, ROLLUP( LVL2, LVL3, LVL4, LVL5, LVL6 )
				ORDER BY
				    MAX(PRNT_ORD1)
				    ,MAX(PRNT_ORD2)
				    ,MAX(PRNT_ORD3)
				    ,MAX(PRNT_ORD4)
				    ,MAX(PRNT_ORD5)
				    ,MAX(PRNT_ORD6)
				    ,GRP_ID
		    </if>
		    <if test="LVL == 7">
		   		, ROLLUP( LVL2, LVL3, LVL4, LVL5, LVL6, LVL7 )
				ORDER BY
				     MAX(PRNT_ORD1)
				    ,MAX(PRNT_ORD2)
				    ,MAX(PRNT_ORD3)
				    ,MAX(PRNT_ORD4)
				    ,MAX(PRNT_ORD5)
				    ,MAX(PRNT_ORD6)
				    ,MAX(PRNT_ORD7)
				    ,GRP_ID
		    </if>
	    

	
	</select>



</mapper>