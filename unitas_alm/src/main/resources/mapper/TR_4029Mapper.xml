<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.app.almweb.mapper.TR_4029Mapper">

	<!-- 고객행동 연체금액 조회  -->
	<select id="selectCsBhorList" parameterType="java.util.Map" resultType="java.util.HashMap">
		WITH DATA_TB AS (
		    SELECT 
		        STND_INDS_LCLS_C
		        , MBASCN_TC
		        , CSS_RATE_C
		        , BUSI_MN_TC
		        , ALM_MRTG_TC
		        , LN_DP_GD_C
		        , DLY_TURN
		        , CASE WHEN BASE_DATE = #{sch_base_date} THEN FACN_AMT ELSE 0 END AS M0_FACN_AMT
		        , CASE WHEN BASE_DATE = TO_CHAR(ADD_MONTHS(TO_DATE(#{sch_base_date},'YYYYMMDD'), -1),'YYYYMMDD') THEN FACN_AMT ELSE 0 END AS M1_FACN_AMT
                , CASE WHEN BASE_DATE = TO_CHAR(ADD_MONTHS(TO_DATE(#{sch_base_date},'YYYYMMDD'), -2),'YYYYMMDD') THEN FACN_AMT ELSE 0 END AS M2_FACN_AMT
                , CASE WHEN BASE_DATE = TO_CHAR(ADD_MONTHS(TO_DATE(#{sch_base_date},'YYYYMMDD'), -3),'YYYYMMDD') THEN FACN_AMT ELSE 0 END AS M3_FACN_AMT
                , CASE WHEN BASE_DATE = TO_CHAR(ADD_MONTHS(TO_DATE(#{sch_base_date},'YYYYMMDD'), -4),'YYYYMMDD') THEN FACN_AMT ELSE 0 END AS M4_FACN_AMT
                , CASE WHEN BASE_DATE = TO_CHAR(ADD_MONTHS(TO_DATE(#{sch_base_date},'YYYYMMDD'), -5),'YYYYMMDD') THEN FACN_AMT ELSE 0 END AS M5_FACN_AMT
                , CASE WHEN BASE_DATE = TO_CHAR(ADD_MONTHS(TO_DATE(#{sch_base_date},'YYYYMMDD'), -6),'YYYYMMDD') THEN FACN_AMT ELSE 0 END AS M6_FACN_AMT
                , CASE WHEN BASE_DATE = TO_CHAR(ADD_MONTHS(TO_DATE(#{sch_base_date},'YYYYMMDD'), -7),'YYYYMMDD') THEN FACN_AMT ELSE 0 END AS M7_FACN_AMT
                , CASE WHEN BASE_DATE = TO_CHAR(ADD_MONTHS(TO_DATE(#{sch_base_date},'YYYYMMDD'), -8),'YYYYMMDD') THEN FACN_AMT ELSE 0 END AS M8_FACN_AMT
                , CASE WHEN BASE_DATE = TO_CHAR(ADD_MONTHS(TO_DATE(#{sch_base_date},'YYYYMMDD'), -9),'YYYYMMDD') THEN FACN_AMT ELSE 0 END AS M9_FACN_AMT
                , CASE WHEN BASE_DATE = TO_CHAR(ADD_MONTHS(TO_DATE(#{sch_base_date},'YYYYMMDD'), -10),'YYYYMMDD') THEN FACN_AMT ELSE 0 END AS M10_FACN_AMT
                , CASE WHEN BASE_DATE = TO_CHAR(ADD_MONTHS(TO_DATE(#{sch_base_date},'YYYYMMDD'), -11),'YYYYMMDD') THEN FACN_AMT ELSE 0 END AS M11_FACN_AMT
		<if test="sch_prod_trm_c > 12">
		        , CASE WHEN BASE_DATE = TO_CHAR(ADD_MONTHS(TO_DATE(#{sch_base_date},'YYYYMMDD'), -12),'YYYYMMDD') THEN FACN_AMT ELSE 0 END AS M12_FACN_AMT
                , CASE WHEN BASE_DATE = TO_CHAR(ADD_MONTHS(TO_DATE(#{sch_base_date},'YYYYMMDD'), -13),'YYYYMMDD') THEN FACN_AMT ELSE 0 END AS M13_FACN_AMT
                , CASE WHEN BASE_DATE = TO_CHAR(ADD_MONTHS(TO_DATE(#{sch_base_date},'YYYYMMDD'), -14),'YYYYMMDD') THEN FACN_AMT ELSE 0 END AS M14_FACN_AMT
                , CASE WHEN BASE_DATE = TO_CHAR(ADD_MONTHS(TO_DATE(#{sch_base_date},'YYYYMMDD'), -15),'YYYYMMDD') THEN FACN_AMT ELSE 0 END AS M15_FACN_AMT
                , CASE WHEN BASE_DATE = TO_CHAR(ADD_MONTHS(TO_DATE(#{sch_base_date},'YYYYMMDD'), -16),'YYYYMMDD') THEN FACN_AMT ELSE 0 END AS M16_FACN_AMT
                , CASE WHEN BASE_DATE = TO_CHAR(ADD_MONTHS(TO_DATE(#{sch_base_date},'YYYYMMDD'), -17),'YYYYMMDD') THEN FACN_AMT ELSE 0 END AS M17_FACN_AMT
                , CASE WHEN BASE_DATE = TO_CHAR(ADD_MONTHS(TO_DATE(#{sch_base_date},'YYYYMMDD'), -18),'YYYYMMDD') THEN FACN_AMT ELSE 0 END AS M18_FACN_AMT
                , CASE WHEN BASE_DATE = TO_CHAR(ADD_MONTHS(TO_DATE(#{sch_base_date},'YYYYMMDD'), -19),'YYYYMMDD') THEN FACN_AMT ELSE 0 END AS M19_FACN_AMT
                , CASE WHEN BASE_DATE = TO_CHAR(ADD_MONTHS(TO_DATE(#{sch_base_date},'YYYYMMDD'), -20),'YYYYMMDD') THEN FACN_AMT ELSE 0 END AS M20_FACN_AMT
                , CASE WHEN BASE_DATE = TO_CHAR(ADD_MONTHS(TO_DATE(#{sch_base_date},'YYYYMMDD'), -21),'YYYYMMDD') THEN FACN_AMT ELSE 0 END AS M21_FACN_AMT
                , CASE WHEN BASE_DATE = TO_CHAR(ADD_MONTHS(TO_DATE(#{sch_base_date},'YYYYMMDD'), -22),'YYYYMMDD') THEN FACN_AMT ELSE 0 END AS M22_FACN_AMT
                , CASE WHEN BASE_DATE = TO_CHAR(ADD_MONTHS(TO_DATE(#{sch_base_date},'YYYYMMDD'), -23),'YYYYMMDD') THEN FACN_AMT ELSE 0 END AS M23_FACN_AMT
		</if>
		<if test="sch_prod_trm_c > 24">
		        , CASE WHEN BASE_DATE = TO_CHAR(ADD_MONTHS(TO_DATE(#{sch_base_date},'YYYYMMDD'), -24),'YYYYMMDD') THEN FACN_AMT ELSE 0 END AS M24_FACN_AMT
                , CASE WHEN BASE_DATE = TO_CHAR(ADD_MONTHS(TO_DATE(#{sch_base_date},'YYYYMMDD'), -25),'YYYYMMDD') THEN FACN_AMT ELSE 0 END AS M25_FACN_AMT
                , CASE WHEN BASE_DATE = TO_CHAR(ADD_MONTHS(TO_DATE(#{sch_base_date},'YYYYMMDD'), -26),'YYYYMMDD') THEN FACN_AMT ELSE 0 END AS M26_FACN_AMT
                , CASE WHEN BASE_DATE = TO_CHAR(ADD_MONTHS(TO_DATE(#{sch_base_date},'YYYYMMDD'), -27),'YYYYMMDD') THEN FACN_AMT ELSE 0 END AS M27_FACN_AMT
                , CASE WHEN BASE_DATE = TO_CHAR(ADD_MONTHS(TO_DATE(#{sch_base_date},'YYYYMMDD'), -28),'YYYYMMDD') THEN FACN_AMT ELSE 0 END AS M28_FACN_AMT
                , CASE WHEN BASE_DATE = TO_CHAR(ADD_MONTHS(TO_DATE(#{sch_base_date},'YYYYMMDD'), -29),'YYYYMMDD') THEN FACN_AMT ELSE 0 END AS M29_FACN_AMT
                , CASE WHEN BASE_DATE = TO_CHAR(ADD_MONTHS(TO_DATE(#{sch_base_date},'YYYYMMDD'), -30),'YYYYMMDD') THEN FACN_AMT ELSE 0 END AS M30_FACN_AMT
                , CASE WHEN BASE_DATE = TO_CHAR(ADD_MONTHS(TO_DATE(#{sch_base_date},'YYYYMMDD'), -31),'YYYYMMDD') THEN FACN_AMT ELSE 0 END AS M31_FACN_AMT
                , CASE WHEN BASE_DATE = TO_CHAR(ADD_MONTHS(TO_DATE(#{sch_base_date},'YYYYMMDD'), -32),'YYYYMMDD') THEN FACN_AMT ELSE 0 END AS M32_FACN_AMT
                , CASE WHEN BASE_DATE = TO_CHAR(ADD_MONTHS(TO_DATE(#{sch_base_date},'YYYYMMDD'), -33),'YYYYMMDD') THEN FACN_AMT ELSE 0 END AS M33_FACN_AMT
                , CASE WHEN BASE_DATE = TO_CHAR(ADD_MONTHS(TO_DATE(#{sch_base_date},'YYYYMMDD'), -34),'YYYYMMDD') THEN FACN_AMT ELSE 0 END AS M34_FACN_AMT
                , CASE WHEN BASE_DATE = TO_CHAR(ADD_MONTHS(TO_DATE(#{sch_base_date},'YYYYMMDD'), -35),'YYYYMMDD') THEN FACN_AMT ELSE 0 END AS M35_FACN_AMT
		</if>
		<if test="sch_prod_trm_c > 36">
		        , CASE WHEN BASE_DATE = TO_CHAR(ADD_MONTHS(TO_DATE(#{sch_base_date},'YYYYMMDD'), -36),'YYYYMMDD') THEN FACN_AMT ELSE 0 END AS M36_FACN_AMT
                , CASE WHEN BASE_DATE = TO_CHAR(ADD_MONTHS(TO_DATE(#{sch_base_date},'YYYYMMDD'), -37),'YYYYMMDD') THEN FACN_AMT ELSE 0 END AS M37_FACN_AMT
                , CASE WHEN BASE_DATE = TO_CHAR(ADD_MONTHS(TO_DATE(#{sch_base_date},'YYYYMMDD'), -38),'YYYYMMDD') THEN FACN_AMT ELSE 0 END AS M38_FACN_AMT
                , CASE WHEN BASE_DATE = TO_CHAR(ADD_MONTHS(TO_DATE(#{sch_base_date},'YYYYMMDD'), -39),'YYYYMMDD') THEN FACN_AMT ELSE 0 END AS M39_FACN_AMT
                , CASE WHEN BASE_DATE = TO_CHAR(ADD_MONTHS(TO_DATE(#{sch_base_date},'YYYYMMDD'), -40),'YYYYMMDD') THEN FACN_AMT ELSE 0 END AS M40_FACN_AMT
                , CASE WHEN BASE_DATE = TO_CHAR(ADD_MONTHS(TO_DATE(#{sch_base_date},'YYYYMMDD'), -41),'YYYYMMDD') THEN FACN_AMT ELSE 0 END AS M41_FACN_AMT
                , CASE WHEN BASE_DATE = TO_CHAR(ADD_MONTHS(TO_DATE(#{sch_base_date},'YYYYMMDD'), -42),'YYYYMMDD') THEN FACN_AMT ELSE 0 END AS M42_FACN_AMT
                , CASE WHEN BASE_DATE = TO_CHAR(ADD_MONTHS(TO_DATE(#{sch_base_date},'YYYYMMDD'), -43),'YYYYMMDD') THEN FACN_AMT ELSE 0 END AS M43_FACN_AMT
                , CASE WHEN BASE_DATE = TO_CHAR(ADD_MONTHS(TO_DATE(#{sch_base_date},'YYYYMMDD'), -44),'YYYYMMDD') THEN FACN_AMT ELSE 0 END AS M44_FACN_AMT
                , CASE WHEN BASE_DATE = TO_CHAR(ADD_MONTHS(TO_DATE(#{sch_base_date},'YYYYMMDD'), -45),'YYYYMMDD') THEN FACN_AMT ELSE 0 END AS M45_FACN_AMT
                , CASE WHEN BASE_DATE = TO_CHAR(ADD_MONTHS(TO_DATE(#{sch_base_date},'YYYYMMDD'), -46),'YYYYMMDD') THEN FACN_AMT ELSE 0 END AS M46_FACN_AMT
                , CASE WHEN BASE_DATE = TO_CHAR(ADD_MONTHS(TO_DATE(#{sch_base_date},'YYYYMMDD'), -47),'YYYYMMDD') THEN FACN_AMT ELSE 0 END AS M47_FACN_AMT
		</if>
		<if test="sch_prod_trm_c > 48">
		        , CASE WHEN BASE_DATE = TO_CHAR(ADD_MONTHS(TO_DATE(#{sch_base_date},'YYYYMMDD'), -48),'YYYYMMDD') THEN FACN_AMT ELSE 0 END AS M48_FACN_AMT
                , CASE WHEN BASE_DATE = TO_CHAR(ADD_MONTHS(TO_DATE(#{sch_base_date},'YYYYMMDD'), -49),'YYYYMMDD') THEN FACN_AMT ELSE 0 END AS M49_FACN_AMT
                , CASE WHEN BASE_DATE = TO_CHAR(ADD_MONTHS(TO_DATE(#{sch_base_date},'YYYYMMDD'), -50),'YYYYMMDD') THEN FACN_AMT ELSE 0 END AS M50_FACN_AMT
                , CASE WHEN BASE_DATE = TO_CHAR(ADD_MONTHS(TO_DATE(#{sch_base_date},'YYYYMMDD'), -51),'YYYYMMDD') THEN FACN_AMT ELSE 0 END AS M51_FACN_AMT
                , CASE WHEN BASE_DATE = TO_CHAR(ADD_MONTHS(TO_DATE(#{sch_base_date},'YYYYMMDD'), -52),'YYYYMMDD') THEN FACN_AMT ELSE 0 END AS M52_FACN_AMT
                , CASE WHEN BASE_DATE = TO_CHAR(ADD_MONTHS(TO_DATE(#{sch_base_date},'YYYYMMDD'), -53),'YYYYMMDD') THEN FACN_AMT ELSE 0 END AS M53_FACN_AMT
                , CASE WHEN BASE_DATE = TO_CHAR(ADD_MONTHS(TO_DATE(#{sch_base_date},'YYYYMMDD'), -54),'YYYYMMDD') THEN FACN_AMT ELSE 0 END AS M54_FACN_AMT
                , CASE WHEN BASE_DATE = TO_CHAR(ADD_MONTHS(TO_DATE(#{sch_base_date},'YYYYMMDD'), -55),'YYYYMMDD') THEN FACN_AMT ELSE 0 END AS M55_FACN_AMT
                , CASE WHEN BASE_DATE = TO_CHAR(ADD_MONTHS(TO_DATE(#{sch_base_date},'YYYYMMDD'), -56),'YYYYMMDD') THEN FACN_AMT ELSE 0 END AS M56_FACN_AMT
                , CASE WHEN BASE_DATE = TO_CHAR(ADD_MONTHS(TO_DATE(#{sch_base_date},'YYYYMMDD'), -57),'YYYYMMDD') THEN FACN_AMT ELSE 0 END AS M57_FACN_AMT
                , CASE WHEN BASE_DATE = TO_CHAR(ADD_MONTHS(TO_DATE(#{sch_base_date},'YYYYMMDD'), -58),'YYYYMMDD') THEN FACN_AMT ELSE 0 END AS M58_FACN_AMT
                , CASE WHEN BASE_DATE = TO_CHAR(ADD_MONTHS(TO_DATE(#{sch_base_date},'YYYYMMDD'), -59),'YYYYMMDD') THEN FACN_AMT ELSE 0 END AS M59_FACN_AMT
		 </if>
		 
		        , CASE WHEN BASE_DATE = #{sch_base_date} THEN DVSR_AMT ELSE 0 END AS M0_DVSR_AMT
		        , CASE WHEN BASE_DATE = TO_CHAR(ADD_MONTHS(TO_DATE(#{sch_base_date},'YYYYMMDD'), -1),'YYYYMMDD') THEN DVSR_AMT ELSE 0 END AS M1_DVSR_AMT
                , CASE WHEN BASE_DATE = TO_CHAR(ADD_MONTHS(TO_DATE(#{sch_base_date},'YYYYMMDD'), -2),'YYYYMMDD') THEN DVSR_AMT ELSE 0 END AS M2_DVSR_AMT
                , CASE WHEN BASE_DATE = TO_CHAR(ADD_MONTHS(TO_DATE(#{sch_base_date},'YYYYMMDD'), -3),'YYYYMMDD') THEN DVSR_AMT ELSE 0 END AS M3_DVSR_AMT
                , CASE WHEN BASE_DATE = TO_CHAR(ADD_MONTHS(TO_DATE(#{sch_base_date},'YYYYMMDD'), -4),'YYYYMMDD') THEN DVSR_AMT ELSE 0 END AS M4_DVSR_AMT
                , CASE WHEN BASE_DATE = TO_CHAR(ADD_MONTHS(TO_DATE(#{sch_base_date},'YYYYMMDD'), -5),'YYYYMMDD') THEN DVSR_AMT ELSE 0 END AS M5_DVSR_AMT
                , CASE WHEN BASE_DATE = TO_CHAR(ADD_MONTHS(TO_DATE(#{sch_base_date},'YYYYMMDD'), -6),'YYYYMMDD') THEN DVSR_AMT ELSE 0 END AS M6_DVSR_AMT
                , CASE WHEN BASE_DATE = TO_CHAR(ADD_MONTHS(TO_DATE(#{sch_base_date},'YYYYMMDD'), -7),'YYYYMMDD') THEN DVSR_AMT ELSE 0 END AS M7_DVSR_AMT
                , CASE WHEN BASE_DATE = TO_CHAR(ADD_MONTHS(TO_DATE(#{sch_base_date},'YYYYMMDD'), -8),'YYYYMMDD') THEN DVSR_AMT ELSE 0 END AS M8_DVSR_AMT
                , CASE WHEN BASE_DATE = TO_CHAR(ADD_MONTHS(TO_DATE(#{sch_base_date},'YYYYMMDD'), -9),'YYYYMMDD') THEN DVSR_AMT ELSE 0 END AS M9_DVSR_AMT
                , CASE WHEN BASE_DATE = TO_CHAR(ADD_MONTHS(TO_DATE(#{sch_base_date},'YYYYMMDD'), -10),'YYYYMMDD') THEN DVSR_AMT ELSE 0 END AS M10_DVSR_AMT
                , CASE WHEN BASE_DATE = TO_CHAR(ADD_MONTHS(TO_DATE(#{sch_base_date},'YYYYMMDD'), -11),'YYYYMMDD') THEN DVSR_AMT ELSE 0 END AS M11_DVSR_AMT
		<if test="sch_prod_trm_c > 12">
		        , CASE WHEN BASE_DATE = TO_CHAR(ADD_MONTHS(TO_DATE(#{sch_base_date},'YYYYMMDD'), -12),'YYYYMMDD') THEN DVSR_AMT ELSE 0 END AS M12_DVSR_AMT
                , CASE WHEN BASE_DATE = TO_CHAR(ADD_MONTHS(TO_DATE(#{sch_base_date},'YYYYMMDD'), -13),'YYYYMMDD') THEN DVSR_AMT ELSE 0 END AS M13_DVSR_AMT
                , CASE WHEN BASE_DATE = TO_CHAR(ADD_MONTHS(TO_DATE(#{sch_base_date},'YYYYMMDD'), -14),'YYYYMMDD') THEN DVSR_AMT ELSE 0 END AS M14_DVSR_AMT
                , CASE WHEN BASE_DATE = TO_CHAR(ADD_MONTHS(TO_DATE(#{sch_base_date},'YYYYMMDD'), -15),'YYYYMMDD') THEN DVSR_AMT ELSE 0 END AS M15_DVSR_AMT
                , CASE WHEN BASE_DATE = TO_CHAR(ADD_MONTHS(TO_DATE(#{sch_base_date},'YYYYMMDD'), -16),'YYYYMMDD') THEN DVSR_AMT ELSE 0 END AS M16_DVSR_AMT
                , CASE WHEN BASE_DATE = TO_CHAR(ADD_MONTHS(TO_DATE(#{sch_base_date},'YYYYMMDD'), -17),'YYYYMMDD') THEN DVSR_AMT ELSE 0 END AS M17_DVSR_AMT
                , CASE WHEN BASE_DATE = TO_CHAR(ADD_MONTHS(TO_DATE(#{sch_base_date},'YYYYMMDD'), -18),'YYYYMMDD') THEN DVSR_AMT ELSE 0 END AS M18_DVSR_AMT
                , CASE WHEN BASE_DATE = TO_CHAR(ADD_MONTHS(TO_DATE(#{sch_base_date},'YYYYMMDD'), -19),'YYYYMMDD') THEN DVSR_AMT ELSE 0 END AS M19_DVSR_AMT
                , CASE WHEN BASE_DATE = TO_CHAR(ADD_MONTHS(TO_DATE(#{sch_base_date},'YYYYMMDD'), -20),'YYYYMMDD') THEN DVSR_AMT ELSE 0 END AS M20_DVSR_AMT
                , CASE WHEN BASE_DATE = TO_CHAR(ADD_MONTHS(TO_DATE(#{sch_base_date},'YYYYMMDD'), -21),'YYYYMMDD') THEN DVSR_AMT ELSE 0 END AS M21_DVSR_AMT
                , CASE WHEN BASE_DATE = TO_CHAR(ADD_MONTHS(TO_DATE(#{sch_base_date},'YYYYMMDD'), -22),'YYYYMMDD') THEN DVSR_AMT ELSE 0 END AS M22_DVSR_AMT
                , CASE WHEN BASE_DATE = TO_CHAR(ADD_MONTHS(TO_DATE(#{sch_base_date},'YYYYMMDD'), -23),'YYYYMMDD') THEN DVSR_AMT ELSE 0 END AS M23_DVSR_AMT
		</if>
		<if test="sch_prod_trm_c > 24">
		        , CASE WHEN BASE_DATE = TO_CHAR(ADD_MONTHS(TO_DATE(#{sch_base_date},'YYYYMMDD'), -24),'YYYYMMDD') THEN DVSR_AMT ELSE 0 END AS M24_DVSR_AMT
                , CASE WHEN BASE_DATE = TO_CHAR(ADD_MONTHS(TO_DATE(#{sch_base_date},'YYYYMMDD'), -25),'YYYYMMDD') THEN DVSR_AMT ELSE 0 END AS M25_DVSR_AMT
                , CASE WHEN BASE_DATE = TO_CHAR(ADD_MONTHS(TO_DATE(#{sch_base_date},'YYYYMMDD'), -26),'YYYYMMDD') THEN DVSR_AMT ELSE 0 END AS M26_DVSR_AMT
                , CASE WHEN BASE_DATE = TO_CHAR(ADD_MONTHS(TO_DATE(#{sch_base_date},'YYYYMMDD'), -27),'YYYYMMDD') THEN DVSR_AMT ELSE 0 END AS M27_DVSR_AMT
                , CASE WHEN BASE_DATE = TO_CHAR(ADD_MONTHS(TO_DATE(#{sch_base_date},'YYYYMMDD'), -28),'YYYYMMDD') THEN DVSR_AMT ELSE 0 END AS M28_DVSR_AMT
                , CASE WHEN BASE_DATE = TO_CHAR(ADD_MONTHS(TO_DATE(#{sch_base_date},'YYYYMMDD'), -29),'YYYYMMDD') THEN DVSR_AMT ELSE 0 END AS M29_DVSR_AMT
                , CASE WHEN BASE_DATE = TO_CHAR(ADD_MONTHS(TO_DATE(#{sch_base_date},'YYYYMMDD'), -30),'YYYYMMDD') THEN DVSR_AMT ELSE 0 END AS M30_DVSR_AMT
                , CASE WHEN BASE_DATE = TO_CHAR(ADD_MONTHS(TO_DATE(#{sch_base_date},'YYYYMMDD'), -31),'YYYYMMDD') THEN DVSR_AMT ELSE 0 END AS M31_DVSR_AMT
                , CASE WHEN BASE_DATE = TO_CHAR(ADD_MONTHS(TO_DATE(#{sch_base_date},'YYYYMMDD'), -32),'YYYYMMDD') THEN DVSR_AMT ELSE 0 END AS M32_DVSR_AMT
                , CASE WHEN BASE_DATE = TO_CHAR(ADD_MONTHS(TO_DATE(#{sch_base_date},'YYYYMMDD'), -33),'YYYYMMDD') THEN DVSR_AMT ELSE 0 END AS M33_DVSR_AMT
                , CASE WHEN BASE_DATE = TO_CHAR(ADD_MONTHS(TO_DATE(#{sch_base_date},'YYYYMMDD'), -34),'YYYYMMDD') THEN DVSR_AMT ELSE 0 END AS M34_DVSR_AMT
                , CASE WHEN BASE_DATE = TO_CHAR(ADD_MONTHS(TO_DATE(#{sch_base_date},'YYYYMMDD'), -35),'YYYYMMDD') THEN DVSR_AMT ELSE 0 END AS M35_DVSR_AMT
		</if>
		<if test="sch_prod_trm_c > 36">
		        , CASE WHEN BASE_DATE = TO_CHAR(ADD_MONTHS(TO_DATE(#{sch_base_date},'YYYYMMDD'), -36),'YYYYMMDD') THEN DVSR_AMT ELSE 0 END AS M36_DVSR_AMT
                , CASE WHEN BASE_DATE = TO_CHAR(ADD_MONTHS(TO_DATE(#{sch_base_date},'YYYYMMDD'), -37),'YYYYMMDD') THEN DVSR_AMT ELSE 0 END AS M37_DVSR_AMT
                , CASE WHEN BASE_DATE = TO_CHAR(ADD_MONTHS(TO_DATE(#{sch_base_date},'YYYYMMDD'), -38),'YYYYMMDD') THEN DVSR_AMT ELSE 0 END AS M38_DVSR_AMT
                , CASE WHEN BASE_DATE = TO_CHAR(ADD_MONTHS(TO_DATE(#{sch_base_date},'YYYYMMDD'), -39),'YYYYMMDD') THEN DVSR_AMT ELSE 0 END AS M39_DVSR_AMT
                , CASE WHEN BASE_DATE = TO_CHAR(ADD_MONTHS(TO_DATE(#{sch_base_date},'YYYYMMDD'), -40),'YYYYMMDD') THEN DVSR_AMT ELSE 0 END AS M40_DVSR_AMT
                , CASE WHEN BASE_DATE = TO_CHAR(ADD_MONTHS(TO_DATE(#{sch_base_date},'YYYYMMDD'), -41),'YYYYMMDD') THEN DVSR_AMT ELSE 0 END AS M41_DVSR_AMT
                , CASE WHEN BASE_DATE = TO_CHAR(ADD_MONTHS(TO_DATE(#{sch_base_date},'YYYYMMDD'), -42),'YYYYMMDD') THEN DVSR_AMT ELSE 0 END AS M42_DVSR_AMT
                , CASE WHEN BASE_DATE = TO_CHAR(ADD_MONTHS(TO_DATE(#{sch_base_date},'YYYYMMDD'), -43),'YYYYMMDD') THEN DVSR_AMT ELSE 0 END AS M43_DVSR_AMT
                , CASE WHEN BASE_DATE = TO_CHAR(ADD_MONTHS(TO_DATE(#{sch_base_date},'YYYYMMDD'), -44),'YYYYMMDD') THEN DVSR_AMT ELSE 0 END AS M44_DVSR_AMT
                , CASE WHEN BASE_DATE = TO_CHAR(ADD_MONTHS(TO_DATE(#{sch_base_date},'YYYYMMDD'), -45),'YYYYMMDD') THEN DVSR_AMT ELSE 0 END AS M45_DVSR_AMT
                , CASE WHEN BASE_DATE = TO_CHAR(ADD_MONTHS(TO_DATE(#{sch_base_date},'YYYYMMDD'), -46),'YYYYMMDD') THEN DVSR_AMT ELSE 0 END AS M46_DVSR_AMT
                , CASE WHEN BASE_DATE = TO_CHAR(ADD_MONTHS(TO_DATE(#{sch_base_date},'YYYYMMDD'), -47),'YYYYMMDD') THEN DVSR_AMT ELSE 0 END AS M47_DVSR_AMT
		</if>
		<if test="sch_prod_trm_c > 48">
		        , CASE WHEN BASE_DATE = TO_CHAR(ADD_MONTHS(TO_DATE(#{sch_base_date},'YYYYMMDD'), -48),'YYYYMMDD') THEN DVSR_AMT ELSE 0 END AS M48_DVSR_AMT
                , CASE WHEN BASE_DATE = TO_CHAR(ADD_MONTHS(TO_DATE(#{sch_base_date},'YYYYMMDD'), -49),'YYYYMMDD') THEN DVSR_AMT ELSE 0 END AS M49_DVSR_AMT
                , CASE WHEN BASE_DATE = TO_CHAR(ADD_MONTHS(TO_DATE(#{sch_base_date},'YYYYMMDD'), -50),'YYYYMMDD') THEN DVSR_AMT ELSE 0 END AS M50_DVSR_AMT
                , CASE WHEN BASE_DATE = TO_CHAR(ADD_MONTHS(TO_DATE(#{sch_base_date},'YYYYMMDD'), -51),'YYYYMMDD') THEN DVSR_AMT ELSE 0 END AS M51_DVSR_AMT
                , CASE WHEN BASE_DATE = TO_CHAR(ADD_MONTHS(TO_DATE(#{sch_base_date},'YYYYMMDD'), -52),'YYYYMMDD') THEN DVSR_AMT ELSE 0 END AS M52_DVSR_AMT
                , CASE WHEN BASE_DATE = TO_CHAR(ADD_MONTHS(TO_DATE(#{sch_base_date},'YYYYMMDD'), -53),'YYYYMMDD') THEN DVSR_AMT ELSE 0 END AS M53_DVSR_AMT
                , CASE WHEN BASE_DATE = TO_CHAR(ADD_MONTHS(TO_DATE(#{sch_base_date},'YYYYMMDD'), -54),'YYYYMMDD') THEN DVSR_AMT ELSE 0 END AS M54_DVSR_AMT
                , CASE WHEN BASE_DATE = TO_CHAR(ADD_MONTHS(TO_DATE(#{sch_base_date},'YYYYMMDD'), -55),'YYYYMMDD') THEN DVSR_AMT ELSE 0 END AS M55_DVSR_AMT
                , CASE WHEN BASE_DATE = TO_CHAR(ADD_MONTHS(TO_DATE(#{sch_base_date},'YYYYMMDD'), -56),'YYYYMMDD') THEN DVSR_AMT ELSE 0 END AS M56_DVSR_AMT
                , CASE WHEN BASE_DATE = TO_CHAR(ADD_MONTHS(TO_DATE(#{sch_base_date},'YYYYMMDD'), -57),'YYYYMMDD') THEN DVSR_AMT ELSE 0 END AS M57_DVSR_AMT
                , CASE WHEN BASE_DATE = TO_CHAR(ADD_MONTHS(TO_DATE(#{sch_base_date},'YYYYMMDD'), -58),'YYYYMMDD') THEN DVSR_AMT ELSE 0 END AS M58_DVSR_AMT
                , CASE WHEN BASE_DATE = TO_CHAR(ADD_MONTHS(TO_DATE(#{sch_base_date},'YYYYMMDD'), -59),'YYYYMMDD') THEN DVSR_AMT ELSE 0 END AS M59_DVSR_AMT
		 </if>
		    FROM (
		        SELECT
		            BASE_DATE
		            , STND_INDS_LCLS_C
		            , MBASCN_TC
		            , CSS_RATE_C
		            , BUSI_MN_TC
		            , ALM_MRTG_TC
		            , LN_DP_GD_C
		            , DLY_TURN
		 <if test="sch_prod_base_c == 'INS'">
		            , BF_RATE_FACN_AMT AS FACN_AMT
		            , BF_RATE_DVSR_AMT AS DVSR_AMT
		 </if>
		 <if test="sch_prod_base_c == 'FSS'">
		            , FSS_BASE_BF_RATE_FACN_AMT AS FACN_AMT
		            , FSS_BASE_BF_RATE_DVSR_AMT AS DVSR_AMT
		 </if>
		        FROM TST_CS_DLY_BF_RATE_PROD
		        WHERE BASE_DATE BETWEEN TO_CHAR(ADD_MONTHS(TO_DATE(#{sch_base_date},'YYYYMMDD'), -${sch_prod_trm_c}),'YYYYMMDD') AND #{sch_base_date}
		        AND DLY_TURN &gt; 0
		<if test='sch_br_c == "ALL"'>
				AND BR_C IN (SELECT BR_C FROM TTL_BR_C_INFO WHERE BR_TC = '03') /*전체조합*/
		</if>
		<if test="sch_br_c != 'ALL'">
			<if test="sch_br_c == '001'">
				AND BR_C = '001' /*중앙회*/
			</if>
			<if test="sch_br_c != '001' and (sch_blng_hq_br_c == '' or sch_blng_hq_br_c == null)">
				AND BR_C IN (SELECT BR_C FROM TTL_BR_C_INFO WHERE BLNG_HQ_BR_C = #{sch_br_c}) /*도지회별합산*/
			</if>
			<if test="sch_br_c != '001' and sch_blng_hq_br_c != '' and sch_blng_hq_br_c != null and sch_sub_yn == 'Y'.toString()">
				AND BR_C IN (SELECT BR_C FROM TTL_BR_C_INFO WHERE MO_BR_C = #{sch_br_c}) /*단위조합별조회(지소포함)*/
			</if>
			<if test="sch_br_c != '001' and sch_blng_hq_br_c != '' and sch_blng_hq_br_c != null and sch_sub_yn == 'N'.toString()">
				AND BR_C = #{sch_br_c}
			</if>
		</if>
		<if test="sch_acct_c != '' and sch_acct_c != null">
				AND ACCT_C = #{sch_acct_c}
		</if>
		    )
		)
		SELECT
		<choose>
			<when test="sch_be_rate_dtl != '' and sch_be_rate_dtl != null">
		    RPRT_TOT_CDNM
		    , MAX(PRNT_SEQ) AS PRNT_SEQ
		    , 0 AS GRP_ID
		    --, DLY_TURN
		    </when>
		    <otherwise>
		    '' AS RPRT_TOT_CDNM
		    , 0 AS PRNT_SEQ
		    , 0 AS GRP_ID
		    --, DLY_TURN
		    </otherwise>
		</choose>
			, CASE
                WHEN DLY_TURN = 0 THEN '정상'
                WHEN DLY_TURN = 13 THEN '13 이상'
                ELSE TO_CHAR(DLY_TURN)
            END AS DLY_TURN
			, DLY_TURN AS TURN_SEQ
		    , CASE WHEN SUM(M0_DVSR_AMT) != 0 THEN ROUND(LEAST(SUM(M0_FACN_AMT)/SUM(M0_DVSR_AMT), 1)*100, 5) ELSE 0 END AS M0_DLY_BF_RATE
            , CASE WHEN SUM(M1_DVSR_AMT) != 0 THEN ROUND(LEAST(SUM(M1_FACN_AMT)/SUM(M1_DVSR_AMT), 1)*100, 5) ELSE 0 END AS M1_DLY_BF_RATE
            , CASE WHEN SUM(M2_DVSR_AMT) != 0 THEN ROUND(LEAST(SUM(M2_FACN_AMT)/SUM(M2_DVSR_AMT), 1)*100, 5) ELSE 0 END AS M2_DLY_BF_RATE
            , CASE WHEN SUM(M3_DVSR_AMT) != 0 THEN ROUND(LEAST(SUM(M3_FACN_AMT)/SUM(M3_DVSR_AMT), 1)*100, 5) ELSE 0 END AS M3_DLY_BF_RATE
            , CASE WHEN SUM(M4_DVSR_AMT) != 0 THEN ROUND(LEAST(SUM(M4_FACN_AMT)/SUM(M4_DVSR_AMT), 1)*100, 5) ELSE 0 END AS M4_DLY_BF_RATE
            , CASE WHEN SUM(M5_DVSR_AMT) != 0 THEN ROUND(LEAST(SUM(M5_FACN_AMT)/SUM(M5_DVSR_AMT), 1)*100, 5) ELSE 0 END AS M5_DLY_BF_RATE
            , CASE WHEN SUM(M6_DVSR_AMT) != 0 THEN ROUND(LEAST(SUM(M6_FACN_AMT)/SUM(M6_DVSR_AMT), 1)*100, 5) ELSE 0 END AS M6_DLY_BF_RATE
            , CASE WHEN SUM(M7_DVSR_AMT) != 0 THEN ROUND(LEAST(SUM(M7_FACN_AMT)/SUM(M7_DVSR_AMT), 1)*100, 5) ELSE 0 END AS M7_DLY_BF_RATE
            , CASE WHEN SUM(M8_DVSR_AMT) != 0 THEN ROUND(LEAST(SUM(M8_FACN_AMT)/SUM(M8_DVSR_AMT), 1)*100, 5) ELSE 0 END AS M8_DLY_BF_RATE
            , CASE WHEN SUM(M9_DVSR_AMT) != 0 THEN ROUND(LEAST(SUM(M9_FACN_AMT)/SUM(M9_DVSR_AMT), 1)*100, 5) ELSE 0 END AS M9_DLY_BF_RATE
            , CASE WHEN SUM(M10_DVSR_AMT) != 0 THEN ROUND(LEAST(SUM(M10_FACN_AMT)/SUM(M10_DVSR_AMT), 1)*100, 5) ELSE 0 END AS M10_DLY_BF_RATE
            , CASE WHEN SUM(M11_DVSR_AMT) != 0 THEN ROUND(LEAST(SUM(M11_FACN_AMT)/SUM(M11_DVSR_AMT), 1)*100, 5) ELSE 0 END AS M11_DLY_BF_RATE
		<if test="sch_prod_trm_c > 12">
		    , CASE WHEN SUM(M12_DVSR_AMT) != 0 THEN ROUND(LEAST(SUM(M12_FACN_AMT)/SUM(M12_DVSR_AMT), 1)*100, 5) ELSE 0 END AS M12_DLY_BF_RATE
            , CASE WHEN SUM(M13_DVSR_AMT) != 0 THEN ROUND(LEAST(SUM(M13_FACN_AMT)/SUM(M13_DVSR_AMT), 1)*100, 5) ELSE 0 END AS M13_DLY_BF_RATE
            , CASE WHEN SUM(M14_DVSR_AMT) != 0 THEN ROUND(LEAST(SUM(M14_FACN_AMT)/SUM(M14_DVSR_AMT), 1)*100, 5) ELSE 0 END AS M14_DLY_BF_RATE
            , CASE WHEN SUM(M15_DVSR_AMT) != 0 THEN ROUND(LEAST(SUM(M15_FACN_AMT)/SUM(M15_DVSR_AMT), 1)*100, 5) ELSE 0 END AS M15_DLY_BF_RATE
            , CASE WHEN SUM(M16_DVSR_AMT) != 0 THEN ROUND(LEAST(SUM(M16_FACN_AMT)/SUM(M16_DVSR_AMT), 1)*100, 5) ELSE 0 END AS M16_DLY_BF_RATE
            , CASE WHEN SUM(M17_DVSR_AMT) != 0 THEN ROUND(LEAST(SUM(M17_FACN_AMT)/SUM(M17_DVSR_AMT), 1)*100, 5) ELSE 0 END AS M17_DLY_BF_RATE
            , CASE WHEN SUM(M18_DVSR_AMT) != 0 THEN ROUND(LEAST(SUM(M18_FACN_AMT)/SUM(M18_DVSR_AMT), 1)*100, 5) ELSE 0 END AS M18_DLY_BF_RATE
            , CASE WHEN SUM(M19_DVSR_AMT) != 0 THEN ROUND(LEAST(SUM(M19_FACN_AMT)/SUM(M19_DVSR_AMT), 1)*100, 5) ELSE 0 END AS M19_DLY_BF_RATE
            , CASE WHEN SUM(M20_DVSR_AMT) != 0 THEN ROUND(LEAST(SUM(M20_FACN_AMT)/SUM(M20_DVSR_AMT), 1)*100, 5) ELSE 0 END AS M20_DLY_BF_RATE
            , CASE WHEN SUM(M21_DVSR_AMT) != 0 THEN ROUND(LEAST(SUM(M21_FACN_AMT)/SUM(M21_DVSR_AMT), 1)*100, 5) ELSE 0 END AS M21_DLY_BF_RATE
            , CASE WHEN SUM(M22_DVSR_AMT) != 0 THEN ROUND(LEAST(SUM(M22_FACN_AMT)/SUM(M22_DVSR_AMT), 1)*100, 5) ELSE 0 END AS M22_DLY_BF_RATE
            , CASE WHEN SUM(M23_DVSR_AMT) != 0 THEN ROUND(LEAST(SUM(M23_FACN_AMT)/SUM(M23_DVSR_AMT), 1)*100, 5) ELSE 0 END AS M23_DLY_BF_RATE
		</if>
		<if test="sch_prod_trm_c > 24">
		    , CASE WHEN SUM(M24_DVSR_AMT) != 0 THEN ROUND(LEAST(SUM(M24_FACN_AMT)/SUM(M24_DVSR_AMT), 1)*100, 5) ELSE 0 END AS M24_DLY_BF_RATE
            , CASE WHEN SUM(M25_DVSR_AMT) != 0 THEN ROUND(LEAST(SUM(M25_FACN_AMT)/SUM(M25_DVSR_AMT), 1)*100, 5) ELSE 0 END AS M25_DLY_BF_RATE
            , CASE WHEN SUM(M26_DVSR_AMT) != 0 THEN ROUND(LEAST(SUM(M26_FACN_AMT)/SUM(M26_DVSR_AMT), 1)*100, 5) ELSE 0 END AS M26_DLY_BF_RATE
            , CASE WHEN SUM(M27_DVSR_AMT) != 0 THEN ROUND(LEAST(SUM(M27_FACN_AMT)/SUM(M27_DVSR_AMT), 1)*100, 5) ELSE 0 END AS M27_DLY_BF_RATE
            , CASE WHEN SUM(M28_DVSR_AMT) != 0 THEN ROUND(LEAST(SUM(M28_FACN_AMT)/SUM(M28_DVSR_AMT), 1)*100, 5) ELSE 0 END AS M28_DLY_BF_RATE
            , CASE WHEN SUM(M29_DVSR_AMT) != 0 THEN ROUND(LEAST(SUM(M29_FACN_AMT)/SUM(M29_DVSR_AMT), 1)*100, 5) ELSE 0 END AS M29_DLY_BF_RATE
            , CASE WHEN SUM(M30_DVSR_AMT) != 0 THEN ROUND(LEAST(SUM(M30_FACN_AMT)/SUM(M30_DVSR_AMT), 1)*100, 5) ELSE 0 END AS M30_DLY_BF_RATE
            , CASE WHEN SUM(M31_DVSR_AMT) != 0 THEN ROUND(LEAST(SUM(M31_FACN_AMT)/SUM(M31_DVSR_AMT), 1)*100, 5) ELSE 0 END AS M31_DLY_BF_RATE
            , CASE WHEN SUM(M32_DVSR_AMT) != 0 THEN ROUND(LEAST(SUM(M32_FACN_AMT)/SUM(M32_DVSR_AMT), 1)*100, 5) ELSE 0 END AS M32_DLY_BF_RATE
            , CASE WHEN SUM(M33_DVSR_AMT) != 0 THEN ROUND(LEAST(SUM(M33_FACN_AMT)/SUM(M33_DVSR_AMT), 1)*100, 5) ELSE 0 END AS M33_DLY_BF_RATE
            , CASE WHEN SUM(M34_DVSR_AMT) != 0 THEN ROUND(LEAST(SUM(M34_FACN_AMT)/SUM(M34_DVSR_AMT), 1)*100, 5) ELSE 0 END AS M34_DLY_BF_RATE
            , CASE WHEN SUM(M35_DVSR_AMT) != 0 THEN ROUND(LEAST(SUM(M35_FACN_AMT)/SUM(M35_DVSR_AMT), 1)*100, 5) ELSE 0 END AS M35_DLY_BF_RATE
		</if>
		<if test="sch_prod_trm_c > 36">
		    , CASE WHEN SUM(M36_DVSR_AMT) != 0 THEN ROUND(LEAST(SUM(M36_FACN_AMT)/SUM(M36_DVSR_AMT), 1)*100, 5) ELSE 0 END AS M36_DLY_BF_RATE
            , CASE WHEN SUM(M37_DVSR_AMT) != 0 THEN ROUND(LEAST(SUM(M37_FACN_AMT)/SUM(M37_DVSR_AMT), 1)*100, 5) ELSE 0 END AS M37_DLY_BF_RATE
            , CASE WHEN SUM(M38_DVSR_AMT) != 0 THEN ROUND(LEAST(SUM(M38_FACN_AMT)/SUM(M38_DVSR_AMT), 1)*100, 5) ELSE 0 END AS M38_DLY_BF_RATE
            , CASE WHEN SUM(M39_DVSR_AMT) != 0 THEN ROUND(LEAST(SUM(M39_FACN_AMT)/SUM(M39_DVSR_AMT), 1)*100, 5) ELSE 0 END AS M39_DLY_BF_RATE
            , CASE WHEN SUM(M40_DVSR_AMT) != 0 THEN ROUND(LEAST(SUM(M40_FACN_AMT)/SUM(M40_DVSR_AMT), 1)*100, 5) ELSE 0 END AS M40_DLY_BF_RATE
            , CASE WHEN SUM(M41_DVSR_AMT) != 0 THEN ROUND(LEAST(SUM(M41_FACN_AMT)/SUM(M41_DVSR_AMT), 1)*100, 5) ELSE 0 END AS M41_DLY_BF_RATE
            , CASE WHEN SUM(M42_DVSR_AMT) != 0 THEN ROUND(LEAST(SUM(M42_FACN_AMT)/SUM(M42_DVSR_AMT), 1)*100, 5) ELSE 0 END AS M42_DLY_BF_RATE
            , CASE WHEN SUM(M43_DVSR_AMT) != 0 THEN ROUND(LEAST(SUM(M43_FACN_AMT)/SUM(M43_DVSR_AMT), 1)*100, 5) ELSE 0 END AS M43_DLY_BF_RATE
            , CASE WHEN SUM(M44_DVSR_AMT) != 0 THEN ROUND(LEAST(SUM(M44_FACN_AMT)/SUM(M44_DVSR_AMT), 1)*100, 5) ELSE 0 END AS M44_DLY_BF_RATE
            , CASE WHEN SUM(M45_DVSR_AMT) != 0 THEN ROUND(LEAST(SUM(M45_FACN_AMT)/SUM(M45_DVSR_AMT), 1)*100, 5) ELSE 0 END AS M45_DLY_BF_RATE
            , CASE WHEN SUM(M46_DVSR_AMT) != 0 THEN ROUND(LEAST(SUM(M46_FACN_AMT)/SUM(M46_DVSR_AMT), 1)*100, 5) ELSE 0 END AS M46_DLY_BF_RATE
            , CASE WHEN SUM(M47_DVSR_AMT) != 0 THEN ROUND(LEAST(SUM(M47_FACN_AMT)/SUM(M47_DVSR_AMT), 1)*100, 5) ELSE 0 END AS M47_DLY_BF_RATE
		</if>
		<if test="sch_prod_trm_c > 48">
		    , CASE WHEN SUM(M48_DVSR_AMT) != 0 THEN ROUND(LEAST(SUM(M48_FACN_AMT)/SUM(M48_DVSR_AMT), 1)*100, 5) ELSE 0 END AS M48_DLY_BF_RATE
            , CASE WHEN SUM(M49_DVSR_AMT) != 0 THEN ROUND(LEAST(SUM(M49_FACN_AMT)/SUM(M49_DVSR_AMT), 1)*100, 5) ELSE 0 END AS M49_DLY_BF_RATE
            , CASE WHEN SUM(M50_DVSR_AMT) != 0 THEN ROUND(LEAST(SUM(M50_FACN_AMT)/SUM(M50_DVSR_AMT), 1)*100, 5) ELSE 0 END AS M50_DLY_BF_RATE
            , CASE WHEN SUM(M51_DVSR_AMT) != 0 THEN ROUND(LEAST(SUM(M51_FACN_AMT)/SUM(M51_DVSR_AMT), 1)*100, 5) ELSE 0 END AS M51_DLY_BF_RATE
            , CASE WHEN SUM(M52_DVSR_AMT) != 0 THEN ROUND(LEAST(SUM(M52_FACN_AMT)/SUM(M52_DVSR_AMT), 1)*100, 5) ELSE 0 END AS M52_DLY_BF_RATE
            , CASE WHEN SUM(M53_DVSR_AMT) != 0 THEN ROUND(LEAST(SUM(M53_FACN_AMT)/SUM(M53_DVSR_AMT), 1)*100, 5) ELSE 0 END AS M53_DLY_BF_RATE
            , CASE WHEN SUM(M54_DVSR_AMT) != 0 THEN ROUND(LEAST(SUM(M54_FACN_AMT)/SUM(M54_DVSR_AMT), 1)*100, 5) ELSE 0 END AS M54_DLY_BF_RATE
            , CASE WHEN SUM(M55_DVSR_AMT) != 0 THEN ROUND(LEAST(SUM(M55_FACN_AMT)/SUM(M55_DVSR_AMT), 1)*100, 5) ELSE 0 END AS M55_DLY_BF_RATE
            , CASE WHEN SUM(M56_DVSR_AMT) != 0 THEN ROUND(LEAST(SUM(M56_FACN_AMT)/SUM(M56_DVSR_AMT), 1)*100, 5) ELSE 0 END AS M56_DLY_BF_RATE
            , CASE WHEN SUM(M57_DVSR_AMT) != 0 THEN ROUND(LEAST(SUM(M57_FACN_AMT)/SUM(M57_DVSR_AMT), 1)*100, 5) ELSE 0 END AS M57_DLY_BF_RATE
            , CASE WHEN SUM(M58_DVSR_AMT) != 0 THEN ROUND(LEAST(SUM(M58_FACN_AMT)/SUM(M58_DVSR_AMT), 1)*100, 5) ELSE 0 END AS M58_DLY_BF_RATE
            , CASE WHEN SUM(M59_DVSR_AMT) != 0 THEN ROUND(LEAST(SUM(M59_FACN_AMT)/SUM(M59_DVSR_AMT), 1)*100, 5) ELSE 0 END AS M59_DLY_BF_RATE
		</if>
		FROM (
		    SELECT
		        DLY_TURN
		<if test="sch_be_rate_dtl != '' and sch_be_rate_dtl != null">
		        , NVL(B.RPRT_TOT_CDNM, '미분류') AS RPRT_TOT_CDNM
		        , MAX(PRNT_SEQ) AS PRNT_SEQ
		</if>
		        , SUM(M0_FACN_AMT) AS M0_FACN_AMT
                , SUM(M1_FACN_AMT) AS M1_FACN_AMT
                , SUM(M2_FACN_AMT) AS M2_FACN_AMT
                , SUM(M3_FACN_AMT) AS M3_FACN_AMT
                , SUM(M4_FACN_AMT) AS M4_FACN_AMT
                , SUM(M5_FACN_AMT) AS M5_FACN_AMT
                , SUM(M6_FACN_AMT) AS M6_FACN_AMT
                , SUM(M7_FACN_AMT) AS M7_FACN_AMT
                , SUM(M8_FACN_AMT) AS M8_FACN_AMT
                , SUM(M9_FACN_AMT) AS M9_FACN_AMT
                , SUM(M10_FACN_AMT) AS M10_FACN_AMT
                , SUM(M11_FACN_AMT) AS M11_FACN_AMT
		<if test="sch_prod_trm_c > 12">
		        , SUM(M12_FACN_AMT) AS M12_FACN_AMT
                , SUM(M13_FACN_AMT) AS M13_FACN_AMT
                , SUM(M14_FACN_AMT) AS M14_FACN_AMT
                , SUM(M15_FACN_AMT) AS M15_FACN_AMT
                , SUM(M16_FACN_AMT) AS M16_FACN_AMT
                , SUM(M17_FACN_AMT) AS M17_FACN_AMT
                , SUM(M18_FACN_AMT) AS M18_FACN_AMT
                , SUM(M19_FACN_AMT) AS M19_FACN_AMT
                , SUM(M20_FACN_AMT) AS M20_FACN_AMT
                , SUM(M21_FACN_AMT) AS M21_FACN_AMT
                , SUM(M22_FACN_AMT) AS M22_FACN_AMT
                , SUM(M23_FACN_AMT) AS M23_FACN_AMT
		</if>
		<if test="sch_prod_trm_c > 24">
		        , SUM(M24_FACN_AMT) AS M24_FACN_AMT
                , SUM(M25_FACN_AMT) AS M25_FACN_AMT
                , SUM(M26_FACN_AMT) AS M26_FACN_AMT
                , SUM(M27_FACN_AMT) AS M27_FACN_AMT
                , SUM(M28_FACN_AMT) AS M28_FACN_AMT
                , SUM(M29_FACN_AMT) AS M29_FACN_AMT
                , SUM(M30_FACN_AMT) AS M30_FACN_AMT
                , SUM(M31_FACN_AMT) AS M31_FACN_AMT
                , SUM(M32_FACN_AMT) AS M32_FACN_AMT
                , SUM(M33_FACN_AMT) AS M33_FACN_AMT
                , SUM(M34_FACN_AMT) AS M34_FACN_AMT
                , SUM(M35_FACN_AMT) AS M35_FACN_AMT
		</if>
		<if test="sch_prod_trm_c > 36">
		        , SUM(M36_FACN_AMT) AS M36_FACN_AMT
                , SUM(M37_FACN_AMT) AS M37_FACN_AMT
                , SUM(M38_FACN_AMT) AS M38_FACN_AMT
                , SUM(M39_FACN_AMT) AS M39_FACN_AMT
                , SUM(M40_FACN_AMT) AS M40_FACN_AMT
                , SUM(M41_FACN_AMT) AS M41_FACN_AMT
                , SUM(M42_FACN_AMT) AS M42_FACN_AMT
                , SUM(M43_FACN_AMT) AS M43_FACN_AMT
                , SUM(M44_FACN_AMT) AS M44_FACN_AMT
                , SUM(M45_FACN_AMT) AS M45_FACN_AMT
                , SUM(M46_FACN_AMT) AS M46_FACN_AMT
                , SUM(M47_FACN_AMT) AS M47_FACN_AMT
		</if>
		<if test="sch_prod_trm_c > 48">
		        , SUM(M48_FACN_AMT) AS M48_FACN_AMT
                , SUM(M49_FACN_AMT) AS M49_FACN_AMT
                , SUM(M50_FACN_AMT) AS M50_FACN_AMT
                , SUM(M51_FACN_AMT) AS M51_FACN_AMT
                , SUM(M52_FACN_AMT) AS M52_FACN_AMT
                , SUM(M53_FACN_AMT) AS M53_FACN_AMT
                , SUM(M54_FACN_AMT) AS M54_FACN_AMT
                , SUM(M55_FACN_AMT) AS M55_FACN_AMT
                , SUM(M56_FACN_AMT) AS M56_FACN_AMT
                , SUM(M57_FACN_AMT) AS M57_FACN_AMT
                , SUM(M58_FACN_AMT) AS M58_FACN_AMT
                , SUM(M59_FACN_AMT) AS M59_FACN_AMT
		</if>
		
		        , SUM(M0_DVSR_AMT) AS M0_DVSR_AMT
                , SUM(M1_DVSR_AMT) AS M1_DVSR_AMT
                , SUM(M2_DVSR_AMT) AS M2_DVSR_AMT
                , SUM(M3_DVSR_AMT) AS M3_DVSR_AMT
                , SUM(M4_DVSR_AMT) AS M4_DVSR_AMT
                , SUM(M5_DVSR_AMT) AS M5_DVSR_AMT
                , SUM(M6_DVSR_AMT) AS M6_DVSR_AMT
                , SUM(M7_DVSR_AMT) AS M7_DVSR_AMT
                , SUM(M8_DVSR_AMT) AS M8_DVSR_AMT
                , SUM(M9_DVSR_AMT) AS M9_DVSR_AMT
                , SUM(M10_DVSR_AMT) AS M10_DVSR_AMT
                , SUM(M11_DVSR_AMT) AS M11_DVSR_AMT
		<if test="sch_prod_trm_c > 12">
		        , SUM(M12_DVSR_AMT) AS M12_DVSR_AMT
                , SUM(M13_DVSR_AMT) AS M13_DVSR_AMT
                , SUM(M14_DVSR_AMT) AS M14_DVSR_AMT
                , SUM(M15_DVSR_AMT) AS M15_DVSR_AMT
                , SUM(M16_DVSR_AMT) AS M16_DVSR_AMT
                , SUM(M17_DVSR_AMT) AS M17_DVSR_AMT
                , SUM(M18_DVSR_AMT) AS M18_DVSR_AMT
                , SUM(M19_DVSR_AMT) AS M19_DVSR_AMT
                , SUM(M20_DVSR_AMT) AS M20_DVSR_AMT
                , SUM(M21_DVSR_AMT) AS M21_DVSR_AMT
                , SUM(M22_DVSR_AMT) AS M22_DVSR_AMT
                , SUM(M23_DVSR_AMT) AS M23_DVSR_AMT
		</if>
		<if test="sch_prod_trm_c > 24">
		        , SUM(M24_DVSR_AMT) AS M24_DVSR_AMT
                , SUM(M25_DVSR_AMT) AS M25_DVSR_AMT
                , SUM(M26_DVSR_AMT) AS M26_DVSR_AMT
                , SUM(M27_DVSR_AMT) AS M27_DVSR_AMT
                , SUM(M28_DVSR_AMT) AS M28_DVSR_AMT
                , SUM(M29_DVSR_AMT) AS M29_DVSR_AMT
                , SUM(M30_DVSR_AMT) AS M30_DVSR_AMT
                , SUM(M31_DVSR_AMT) AS M31_DVSR_AMT
                , SUM(M32_DVSR_AMT) AS M32_DVSR_AMT
                , SUM(M33_DVSR_AMT) AS M33_DVSR_AMT
                , SUM(M34_DVSR_AMT) AS M34_DVSR_AMT
                , SUM(M35_DVSR_AMT) AS M35_DVSR_AMT
		</if>
		<if test="sch_prod_trm_c > 36">
		        , SUM(M36_DVSR_AMT) AS M36_DVSR_AMT
                , SUM(M37_DVSR_AMT) AS M37_DVSR_AMT
                , SUM(M38_DVSR_AMT) AS M38_DVSR_AMT
                , SUM(M39_DVSR_AMT) AS M39_DVSR_AMT
                , SUM(M40_DVSR_AMT) AS M40_DVSR_AMT
                , SUM(M41_DVSR_AMT) AS M41_DVSR_AMT
                , SUM(M42_DVSR_AMT) AS M42_DVSR_AMT
                , SUM(M43_DVSR_AMT) AS M43_DVSR_AMT
                , SUM(M44_DVSR_AMT) AS M44_DVSR_AMT
                , SUM(M45_DVSR_AMT) AS M45_DVSR_AMT
                , SUM(M46_DVSR_AMT) AS M46_DVSR_AMT
                , SUM(M47_DVSR_AMT) AS M47_DVSR_AMT
		</if>
		<if test="sch_prod_trm_c > 48">
		        , SUM(M48_DVSR_AMT) AS M48_DVSR_AMT
                , SUM(M49_DVSR_AMT) AS M49_DVSR_AMT
                , SUM(M50_DVSR_AMT) AS M50_DVSR_AMT
                , SUM(M51_DVSR_AMT) AS M51_DVSR_AMT
                , SUM(M52_DVSR_AMT) AS M52_DVSR_AMT
                , SUM(M53_DVSR_AMT) AS M53_DVSR_AMT
                , SUM(M54_DVSR_AMT) AS M54_DVSR_AMT
                , SUM(M55_DVSR_AMT) AS M55_DVSR_AMT
                , SUM(M56_DVSR_AMT) AS M56_DVSR_AMT
                , SUM(M57_DVSR_AMT) AS M57_DVSR_AMT
                , SUM(M58_DVSR_AMT) AS M58_DVSR_AMT
                , SUM(M59_DVSR_AMT) AS M59_DVSR_AMT
		</if>
		    FROM DATA_TB A
		<if test="sch_be_rate_dtl == 1">
			LEFT JOIN TII_DLY_BE_RATE_DTL_INFO B 
				ON B.BE_RATE_ITEM_VAL = '1' 
				AND B.RPRT_TOT_C_VAL = A.BUSI_MN_TC
		</if>
		<if test="sch_be_rate_dtl == 2">
			LEFT JOIN TII_DLY_BE_RATE_DTL_INFO B 
				ON B.BE_RATE_ITEM_VAL = '2' 
				AND B.RPRT_TOT_C_VAL = A.MBASCN_TC
		</if>
		<if test="sch_be_rate_dtl == 3">
			LEFT JOIN TII_DLY_BE_RATE_DTL_INFO B 
				ON B.BE_RATE_ITEM_VAL = '3' 
				AND B.RPRT_TOT_C_VAL = A.CSS_RATE_C
		</if>
		<if test="sch_be_rate_dtl == 4">
			LEFT JOIN TII_DLY_BE_RATE_DTL_INFO B 
				ON B.BE_RATE_ITEM_VAL = '4' 
				AND B.RPRT_TOT_C_VAL = A.ALM_MRTG_TC
		</if>
		<if test="sch_be_rate_dtl == 5">
			LEFT JOIN TII_DLY_BE_RATE_DTL_INFO B 
				ON B.BE_RATE_ITEM_VAL = '5' 
				AND B.RPRT_TOT_C_VAL = A.STND_INDS_LCLS_C
		</if>
		<if test="sch_be_rate_dtl == 6">
			LEFT JOIN TII_DLY_BE_RATE_DTL_INFO B 
				ON B.BE_RATE_ITEM_VAL = '6' 
				AND B.RPRT_TOT_C_VAL = A.LN_DP_GD_C
		</if>
		    GROUP BY 
		<if test="sch_be_rate_dtl != '' and sch_be_rate_dtl != null">
		        B.RPRT_TOT_CDNM,
		</if>
		        A.DLY_TURN
		)
		GROUP BY
		<choose>
			<when test="sch_be_rate_dtl != '' and sch_be_rate_dtl != null">
		    DLY_TURN
		    , RPRT_TOT_CDNM 
			</when>
			<otherwise>
			DLY_TURN
			</otherwise>
		</choose>
		ORDER BY PRNT_SEQ, GRP_ID, TURN_SEQ
	</select>
	
	<select id="selectBaseDateSchCbList" parameterType="java.util.Map" resultType="java.util.HashMap">
		SELECT 
			TO_CHAR(TO_DATE(MAX(BASE_DATE), 'YYYYMMDD'), 'YYYY-MM') AS BASE_DATE 
		FROM TST_CS_DLY_BF_RATE_PROD
	</select>
	
	<select id="selectDlyBeRateDtlList" parameterType="java.util.Map" resultType="java.util.HashMap">
	    SELECT
			BE_RATE_ITEM_VAL
			, BE_RATE_ITEM_NM
	    FROM TII_DLY_BE_RATE_DTL_INFO
	    GROUP BY
			BE_RATE_ITEM_VAL
			, BE_RATE_ITEM_NM
		ORDER BY BE_RATE_ITEM_VAL
	</select>
	
	<select id="selectAcctCListPopup" parameterType="java.util.Map" resultType="java.util.HashMap">
		SELECT 
			ACCT_C, ACCT_PATH, ACCT_C_NM, ACCT_LVL
		FROM (
		    SELECT 
		        LEVEL AS ACCT_LVL, BASE_DATE, 
		        --SUBSTR(SYS_CONNECT_BY_PATH(TRIM(ACCT_C_NM), '&gt;'), 2) AS ACCT_PATH,
		        SUBSTR(SYS_CONNECT_BY_PATH(TRIM(ACCT_C_NM), '>'), 2, LENGTH(SYS_CONNECT_BY_PATH(TRIM(ACCT_C_NM), '&gt;'))-LENGTH(TRIM(ACCT_C_NM))-2) AS ACCT_PATH,
		        REGEXP_SUBSTR(SYS_CONNECT_BY_PATH(TRIM(ACCT_C_NM), '%'),'[^%]+' , 1 , 1 ) AS LVL1,
		        REGEXP_SUBSTR(SYS_CONNECT_BY_PATH(TRIM(ACCT_C_NM), '%'),'[^%]+' , 1 , 2 ) AS LVL2,
		        REGEXP_SUBSTR(SYS_CONNECT_BY_PATH(TRIM(ACCT_C_NM), '%'),'[^%]+' , 1 , 3 ) AS LVL3,
		        REGEXP_SUBSTR(SYS_CONNECT_BY_PATH(TRIM(ACCT_C_NM), '%'),'[^%]+' , 1 , 4 ) AS LVL4,
		        REGEXP_SUBSTR(SYS_CONNECT_BY_PATH(TRIM(ACCT_C_NM), '%'),'[^%]+' , 1 , 5 ) AS LVL5,
		        REGEXP_SUBSTR(SYS_CONNECT_BY_PATH(TRIM(ACCT_C_NM), '%'),'[^%]+' , 1 , 6 ) AS LVL6,
		        REGEXP_SUBSTR(SYS_CONNECT_BY_PATH(TRIM(ACCT_C_NM), '%'),'[^%]+' , 1 , 7 ) AS LVL7,
		        TRIM(ACCT_C_NM) AS ACCT_C_NM,
		        BS_PL_TC,
		        ORG_CLAS_C,
		        AC_BUSI_TC,
		        ACCT_C,
		        LWST_YN,
        		PRNT_ORD
		    FROM TSY_ACCT_MSTR_MNG
			WHERE BASE_DATE = (SELECT MAX(BASE_DATE) FROM TSY_ACCT_MSTR_MNG WHERE BASE_DATE &lt;= #{sch_base_date})
		<choose>
			<when test="sch_br_tc == '10'">
			AND AC_BUSI_TC = '1105' /*회계구분*/
			</when>
		    <otherwise>
		    AND AC_BUSI_TC = '2102' /*회계구분*/
		    </otherwise>
		</choose>
			START WITH UP_ACCT_C = '0000000'
	        CONNECT BY PRIOR ACCT_C = UP_ACCT_C AND PRIOR BASE_DATE = BASE_DATE AND PRIOR ORG_CLAS_C = ORG_CLAS_C AND PRIOR AC_BUSI_TC = AC_BUSI_TC
		)
		WHERE LWST_YN = 'Y'
		AND (ACCT_C_NM LIKE '%'||#{sch_acct_c_nm}||'%' OR ACCT_C = #{sch_acct_c_nm})
		ORDER BY PRNT_ORD
	</select>

</mapper>