<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.app.almweb.mapper.TR_1202Mapper">




  	<!-- 금리구간별 현황 조회  -->
	<select id = "selectTR_1202" parameterType="java.util.Map" resultType="java.util.HashMap">
	
		
		WITH RATE_SECT AS(
		
	    SELECT 
	           BASE_DATE
	         , ALM_WORK_TC
	         , ORG_CLAS_C
	         , BR_C
	         , CUR_C
	         , AC_BUSI_TC
	         , STAT_RPRT_ID
	         , STAT_RPRT_ITEM_ID
	         , SEQ
	         , BKPR_AMT
	         , BKPR_APLY_RATE_AMT
	         , RPRT_ACC_CNT
	     FROM  ALMADM.TSR_RATE_SECT_STAT
			WHERE 
		      BASE_DATE   = #{BASE_DATE}
		  AND ALM_WORK_TC = 'M'
		  AND CUR_C       = 'KRW'
		  AND ORG_CLAS_C  = #{ORG_CLAS_C}

		        
		 -- [ 회계구분 ]
		 -- 중앙회를 제외한 나머지는 신용회계(2102) 로 고정!
		 ----------------------------------------
		 /* 중앙회 조회 시 에만 발생  */
	 	<if test="AC_BUSI_TC == '0000'">
	 		AND AC_BUSI_TC IN('1105','1106','1107')
	 	</if>
	 	<if test="AC_BUSI_TC != '0000'">
	 		AND AC_BUSI_TC = #{AC_BUSI_TC}
	 	</if>
		 ----------------------------------------
	 	
		 -- [ 점소코드  ]
		 ----------------------------------------
		 -- 전체조합 조회 시 
		 <if test="JISO_INCLUDE == 'no' and BLNG_HQ_BR_C == '' and BR_C == 'ALL'">
		 	-- 모든 점소코드 나오기
		 </if>
		 
		 -- 단위조합별 조회 시 (지소포함여부  yes/no)
		 <if test="JISO_INCLUDE == 'yes' and BLNG_HQ_BR_C != ''">   
		 	AND BR_C IN ( SELECT BR_C FROM TTL_BR_C_INFO WHERE MO_BR_C = #{BR_C} ) 
		 </if>
		 <if test="JISO_INCLUDE == 'no' and BLNG_HQ_BR_C != ''"> 
		 	AND BR_C     = #{BR_C}
		 </if>
		 
		 -- 도지회별 조회 시 
		 <if test="JISO_INCLUDE == 'no' and BLNG_HQ_BR_C == '' and BR_C != 'ALL' and BR_C != '001'">
		 	AND BR_C IN ( SELECT BR_C FROM TTL_BR_C_INFO WHERE BLNG_HQ_BR_C = #{BR_C} )
		 </if>
		 
		 -- 중앙회 조회 시  
		 <if test="JISO_INCLUDE == 'no' and BLNG_HQ_BR_C == '' and BR_C == '001'">
			AND BR_C     = #{BR_C}
		 </if>
		 ----------------------------------------
	)      
                                                                                    
    /* 금리기간별 조회 */
    SELECT 
  		  LVL1                                                                   AS ACCT_NM1         
	    <if test="LVL == 2">                                   
	    , DECODE( GROUPING_ID(LVL2) , 1 , LVL1 || ' 소계' , LVL2 )      			 AS ACCT_NM2 
	    , GROUPING_ID(LVL2)                                           			 AS GRP_ID  
	    </if>                                                                                      
	    <if test="LVL == 3">                                   
	    , DECODE( GROUPING_ID(LVL2,LVL3) , 3 , LVL1 || ' 소계' , LVL2 )      		 AS ACCT_NM2                                                                                                                  
	    , DECODE( GROUPING_ID(LVL2,LVL3) , 1 , LVL2 || ' 소계' , LVL3 )       	 AS ACCT_NM3  
	    , GROUPING_ID(LVL2,LVL3)                                           		 AS GRP_ID  
	    </if>                                                                  
	    <if test="LVL == 4">                                   
	    , DECODE( GROUPING_ID(LVL2,LVL3,LVL4) , 7 , LVL1 || ' 소계' , LVL2 )       AS ACCT_NM2                                                                                                                  
	    , DECODE( GROUPING_ID(LVL2,LVL3,LVL4) , 3 , LVL2 || ' 소계' , LVL3 )       AS ACCT_NM3                                                                                                                   
	    , DECODE( GROUPING_ID(LVL2,LVL3,LVL4) , 1 , LVL3 || ' 소계' , LVL4 )       AS ACCT_NM4 
	    , GROUPING_ID(LVL2,LVL3,LVL4)                                            AS GRP_ID  
	    </if>      
        ------------------------------------------------------------------------------------------기준월합계
	    , SUM(VIEW_BKPR_AMT0)                                                                                     AS BKPR_AMT0 
	    , NVL(ROUND(SUM(AVG_RATE0) / DECODE(SUM(BKPR_AMT0),0,NULL,SUM(BKPR_AMT0)) ,2),0)                          AS AVG_RATE0   
	    , SUM(ACC_CNT0      )                                                                                     AS  ACC_CNT0 
        ------------------------------------------------------------------------------------------1     
	    , SUM(VIEW_BKPR_AMT1)                                                                                     AS BKPR_AMT1 
	    , NVL(ROUND(SUM(AVG_RATE1) / DECODE(SUM(BKPR_AMT1),0,NULL,SUM(BKPR_AMT1)) ,2),0)                          AS AVG_RATE1   
	    , SUM(ACC_CNT1      )                                                                                     AS  ACC_CNT1 
        ------------------------------------------------------------------------------------------2              
	    , SUM(VIEW_BKPR_AMT2)                                                                                     AS BKPR_AMT2 
	    , NVL(ROUND(SUM(AVG_RATE2) / DECODE(SUM(BKPR_AMT2),0,NULL,SUM(BKPR_AMT2)) ,2),0)                          AS AVG_RATE2   
	    , SUM(ACC_CNT2      )                                                                                     AS  ACC_CNT2 
        ------------------------------------------------------------------------------------------3         
	    , SUM(VIEW_BKPR_AMT3)                                                                                     AS BKPR_AMT3 
	    , NVL(ROUND(SUM(AVG_RATE3) / DECODE(SUM(BKPR_AMT3),0,NULL,SUM(BKPR_AMT3)) ,2),0)                          AS AVG_RATE3   
	    , SUM(ACC_CNT3      )                                                                                     AS  ACC_CNT3 
        ------------------------------------------------------------------------------------------4         
	    , SUM(VIEW_BKPR_AMT4)                                                                                     AS BKPR_AMT4 
	    , NVL(ROUND(SUM(AVG_RATE4) / DECODE(SUM(BKPR_AMT4),0,NULL,SUM(BKPR_AMT4)) ,2),0)                          AS AVG_RATE4   
	    , SUM(ACC_CNT4      )                                                                                     AS  ACC_CNT4 
        ------------------------------------------------------------------------------------------5         
	    , SUM(VIEW_BKPR_AMT5)                                                                                     AS BKPR_AMT5 
	    , NVL(ROUND(SUM(AVG_RATE5) / DECODE(SUM(BKPR_AMT5),0,NULL,SUM(BKPR_AMT5)) ,2),0)                          AS AVG_RATE5   
	    , SUM(ACC_CNT5      )                                                                                     AS  ACC_CNT5 
        ------------------------------------------------------------------------------------------6         
	    , SUM(VIEW_BKPR_AMT6)                                                                                     AS BKPR_AMT6 
	    , NVL(ROUND(SUM(AVG_RATE6) / DECODE(SUM(BKPR_AMT6),0,NULL,SUM(BKPR_AMT6)) ,2),0)                          AS AVG_RATE6   
	    , SUM(ACC_CNT6      )                                                                                     AS  ACC_CNT6 
        ------------------------------------------------------------------------------------------7           
	    , SUM(VIEW_BKPR_AMT7)                                                                                     AS BKPR_AMT7 
	    , NVL(ROUND(SUM(AVG_RATE7) / DECODE(SUM(BKPR_AMT7),0,NULL,SUM(BKPR_AMT7)) ,2),0)                          AS AVG_RATE7   
	    , SUM(ACC_CNT7      )                                                                                     AS  ACC_CNT7 
        ------------------------------------------------------------------------------------------8            
	    , SUM(VIEW_BKPR_AMT8)                                                                                     AS BKPR_AMT8 
	    , NVL(ROUND(SUM(AVG_RATE8) / DECODE(SUM(BKPR_AMT8),0,NULL,SUM(BKPR_AMT8)) ,2),0)                          AS AVG_RATE8   
	    , SUM(ACC_CNT8      )                                                                                     AS  ACC_CNT8 
        ------------------------------------------------------------------------------------------9           
	    , SUM(VIEW_BKPR_AMT9)                                                                                     AS BKPR_AMT9 
	    , NVL(ROUND(SUM(AVG_RATE9) / DECODE(SUM(BKPR_AMT9),0,NULL,SUM(BKPR_AMT9)) ,2),0)                          AS AVG_RATE9   
	    , SUM(ACC_CNT9      )                                                                                     AS  ACC_CNT9 
        ------------------------------------------------------------------------------------------10          
	    , SUM(VIEW_BKPR_AMT10)                                                                                    AS BKPR_AMT10 
	    , NVL(ROUND(SUM(AVG_RATE10) / DECODE(SUM(BKPR_AMT10),0,NULL,SUM(BKPR_AMT10)) ,2),0)                       AS AVG_RATE10   
	    , SUM(ACC_CNT10      )                                                                                    AS  ACC_CNT10 
        ------------------------------------------------------------------------------------------15           
	    , SUM(VIEW_BKPR_AMT15)                                                                                    AS BKPR_AMT15 
	    , NVL(ROUND(SUM(AVG_RATE15) / DECODE(SUM(BKPR_AMT15),0,NULL,SUM(BKPR_AMT15)) ,2),0)                       AS AVG_RATE15   
	    , SUM(ACC_CNT15      )                                                                                    AS  ACC_CNT15 
        ------------------------------------------------------------------------------------------20      
	    , SUM(VIEW_BKPR_AMT20)                                                                                    AS BKPR_AMT20 
	    , NVL(ROUND(SUM(AVG_RATE20) / DECODE(SUM(BKPR_AMT20),0,NULL,SUM(BKPR_AMT20)) ,2),0)                       AS AVG_RATE20   
	    , SUM(ACC_CNT20      )                                                                                    AS  ACC_CNT20 
        ------------------------------------------------------------------------------------------21          
	    , SUM(VIEW_BKPR_AMT21)                                                                                    AS BKPR_AMT21 
	    , NVL(ROUND(SUM(AVG_RATE21) / DECODE(SUM(BKPR_AMT21),0,NULL,SUM(BKPR_AMT21)) ,2),0)                       AS AVG_RATE21   
	    , SUM(ACC_CNT21      )                                                                                    AS  ACC_CNT21 
        ------------------------------------------------------------------------------------------                                                                                                                                                            
	FROM 
	(    
        /* 데이터 처리 죤 */
        SELECT 
                LVL1 
		    <if test="LVL == 2">
		      , LVL2
		    </if>
		    <if test="LVL == 3">
		      , LVL2
		      , LVL3
		    </if>
		    <if test="LVL == 4">
		      , LVL2
		      , LVL3
		      , LVL4
		    </if>
              /* 화면에 보여질 금액부분 처리  */  
              , ROUND(SUM(BKPR_AMT) / TO_NUMBER(#{AMT_UNIT}))                                                   AS VIEW_BKPR_AMT0    
              , ROUND(SUM( CASE WHEN SEQ = '1'  THEN BKPR_AMT ELSE 0 END ) / TO_NUMBER(#{AMT_UNIT}))            AS VIEW_BKPR_AMT1
              , ROUND(SUM( CASE WHEN SEQ = '2'  THEN BKPR_AMT ELSE 0 END ) / TO_NUMBER(#{AMT_UNIT}))            AS VIEW_BKPR_AMT2
              , ROUND(SUM( CASE WHEN SEQ = '3'  THEN BKPR_AMT ELSE 0 END ) / TO_NUMBER(#{AMT_UNIT}))            AS VIEW_BKPR_AMT3
              , ROUND(SUM( CASE WHEN SEQ = '4'  THEN BKPR_AMT ELSE 0 END ) / TO_NUMBER(#{AMT_UNIT}))            AS VIEW_BKPR_AMT4
              , ROUND(SUM( CASE WHEN SEQ = '5'  THEN BKPR_AMT ELSE 0 END ) / TO_NUMBER(#{AMT_UNIT}))            AS VIEW_BKPR_AMT5
              , ROUND(SUM( CASE WHEN SEQ = '6'  THEN BKPR_AMT ELSE 0 END ) / TO_NUMBER(#{AMT_UNIT}))            AS VIEW_BKPR_AMT6
              , ROUND(SUM( CASE WHEN SEQ = '7'  THEN BKPR_AMT ELSE 0 END ) / TO_NUMBER(#{AMT_UNIT}))            AS VIEW_BKPR_AMT7
              , ROUND(SUM( CASE WHEN SEQ = '8'  THEN BKPR_AMT ELSE 0 END ) / TO_NUMBER(#{AMT_UNIT}))            AS VIEW_BKPR_AMT8
              , ROUND(SUM( CASE WHEN SEQ = '9'  THEN BKPR_AMT ELSE 0 END ) / TO_NUMBER(#{AMT_UNIT}))            AS VIEW_BKPR_AMT9
              , ROUND(SUM( CASE WHEN SEQ = '10' THEN BKPR_AMT ELSE 0 END ) / TO_NUMBER(#{AMT_UNIT}))            AS VIEW_BKPR_AMT10
              , ROUND(SUM( CASE WHEN SEQ = '15' THEN BKPR_AMT ELSE 0 END ) / TO_NUMBER(#{AMT_UNIT}))            AS VIEW_BKPR_AMT15
              , ROUND(SUM( CASE WHEN SEQ = '20' THEN BKPR_AMT ELSE 0 END ) / TO_NUMBER(#{AMT_UNIT}))            AS VIEW_BKPR_AMT20
              , ROUND(SUM( CASE WHEN SEQ = '21' THEN BKPR_AMT ELSE 0 END ) / TO_NUMBER(#{AMT_UNIT}))            AS VIEW_BKPR_AMT21      
              ------------------------------------------------------------------------------------------기준월
              , NVL(SUM(BKPR_AMT),0)                                                                              AS BKPR_AMT0
              , NVL(SUM(BKPR_APLY_RATE_AMT),0)                                                                    AS AVG_RATE0 
              , NVL(SUM(RPRT_ACC_CNT),0)                                                                          AS ACC_CNT0
              ------------------------------------------------------------------------------------------1    
              , NVL(SUM( CASE WHEN SEQ = '1' THEN BKPR_AMT END ),0)                                               AS      BKPR_AMT1
              , NVL(SUM( CASE WHEN SEQ = '1' THEN BKPR_APLY_RATE_AMT END ),0)                                     AS      AVG_RATE1    
              , NVL(SUM( CASE WHEN SEQ = '1' THEN RPRT_ACC_CNT END ),0)                                           AS       ACC_CNT1
              ------------------------------------------------------------------------------------------2   
              , NVL(SUM( CASE WHEN SEQ = '2' THEN BKPR_AMT END ),0)                                               AS      BKPR_AMT2
              , NVL(SUM( CASE WHEN SEQ = '2' THEN BKPR_APLY_RATE_AMT END ),0)                                     AS      AVG_RATE2    
              , NVL(SUM( CASE WHEN SEQ = '2' THEN RPRT_ACC_CNT END ),0)                                           AS       ACC_CNT2
              ------------------------------------------------------------------------------------------3        
              , NVL(SUM( CASE WHEN SEQ = '3' THEN BKPR_AMT END ),0)                                               AS      BKPR_AMT3
              , NVL(SUM( CASE WHEN SEQ = '3' THEN BKPR_APLY_RATE_AMT END ),0)                                     AS      AVG_RATE3    
              , NVL(SUM( CASE WHEN SEQ = '3' THEN RPRT_ACC_CNT END ),0)                                           AS       ACC_CNT3
              ------------------------------------------------------------------------------------------4         
              , NVL(SUM( CASE WHEN SEQ = '4' THEN BKPR_AMT END ),0)                                               AS      BKPR_AMT4
              , NVL(SUM( CASE WHEN SEQ = '4' THEN BKPR_APLY_RATE_AMT END ),0)                                     AS      AVG_RATE4    
              , NVL(SUM( CASE WHEN SEQ = '4' THEN RPRT_ACC_CNT END ),0)                                           AS       ACC_CNT4
              ------------------------------------------------------------------------------------------5       
              , NVL(SUM( CASE WHEN SEQ = '5' THEN BKPR_AMT END ),0)                                               AS      BKPR_AMT5
              , NVL(SUM( CASE WHEN SEQ = '5' THEN BKPR_APLY_RATE_AMT END ),0)                                     AS      AVG_RATE5    
              , NVL(SUM( CASE WHEN SEQ = '5' THEN RPRT_ACC_CNT END ),0)                                           AS       ACC_CNT5
              ------------------------------------------------------------------------------------------6       
              , NVL(SUM( CASE WHEN SEQ = '6' THEN BKPR_AMT END ),0)                                               AS      BKPR_AMT6
              , NVL(SUM( CASE WHEN SEQ = '6' THEN BKPR_APLY_RATE_AMT END ),0)                                     AS      AVG_RATE6    
              , NVL(SUM( CASE WHEN SEQ = '6' THEN RPRT_ACC_CNT END ),0)                                           AS       ACC_CNT6
              ------------------------------------------------------------------------------------------7           
              , NVL(SUM( CASE WHEN SEQ = '7' THEN BKPR_AMT END ),0)                                               AS      BKPR_AMT7
              , NVL(SUM( CASE WHEN SEQ = '7' THEN BKPR_APLY_RATE_AMT END ),0)                                     AS      AVG_RATE7    
              , NVL(SUM( CASE WHEN SEQ = '7' THEN RPRT_ACC_CNT END ),0)                                           AS       ACC_CNT7
              ------------------------------------------------------------------------------------------8          
              , NVL(SUM( CASE WHEN SEQ = '8' THEN BKPR_AMT END ),0)                                               AS      BKPR_AMT8
              , NVL(SUM( CASE WHEN SEQ = '8' THEN BKPR_APLY_RATE_AMT END ),0)                                     AS      AVG_RATE8    
              , NVL(SUM( CASE WHEN SEQ = '8' THEN RPRT_ACC_CNT END ),0)                                           AS       ACC_CNT8
              ------------------------------------------------------------------------------------------9         
              , NVL(SUM( CASE WHEN SEQ = '9' THEN BKPR_AMT END ),0)                                               AS      BKPR_AMT9
              , NVL(SUM( CASE WHEN SEQ = '9' THEN BKPR_APLY_RATE_AMT END ),0)                                     AS      AVG_RATE9    
              , NVL(SUM( CASE WHEN SEQ = '9' THEN RPRT_ACC_CNT END ),0)                                           AS       ACC_CNT9
              ------------------------------------------------------------------------------------------10          
              , NVL(SUM( CASE WHEN SEQ = '10' THEN BKPR_AMT END ),0)                                              AS      BKPR_AMT10
              , NVL(SUM( CASE WHEN SEQ = '10' THEN BKPR_APLY_RATE_AMT END ),0)                                    AS      AVG_RATE10    
              , NVL(SUM( CASE WHEN SEQ = '10' THEN RPRT_ACC_CNT END ),0)                                          AS       ACC_CNT10
              ------------------------------------------------------------------------------------------15           
              , NVL(SUM( CASE WHEN SEQ = '15' THEN BKPR_AMT END ),0)                                              AS      BKPR_AMT15
              , NVL(SUM( CASE WHEN SEQ = '15' THEN BKPR_APLY_RATE_AMT END ),0)                                    AS      AVG_RATE15    
              , NVL(SUM( CASE WHEN SEQ = '15' THEN RPRT_ACC_CNT END ),0)                                          AS       ACC_CNT15
              ------------------------------------------------------------------------------------------20      
              , NVL(SUM( CASE WHEN SEQ = '20' THEN BKPR_AMT END ),0)                                              AS      BKPR_AMT20
              , NVL(SUM( CASE WHEN SEQ = '20' THEN BKPR_APLY_RATE_AMT END ),0)                                    AS      AVG_RATE20    
              , NVL(SUM( CASE WHEN SEQ = '20' THEN RPRT_ACC_CNT END ),0)                                          AS       ACC_CNT20
              ------------------------------------------------------------------------------------------20초과                       
              , NVL(SUM( CASE WHEN SEQ = '21' THEN BKPR_AMT END ),0)                                              AS      BKPR_AMT21
              , NVL(SUM( CASE WHEN SEQ = '21' THEN BKPR_APLY_RATE_AMT END ),0)                                    AS      AVG_RATE21    
              , NVL(SUM( CASE WHEN SEQ = '21' THEN RPRT_ACC_CNT END ),0)                                          AS       ACC_CNT21
              ------------------------------------------------------------------------------------------               
              , MAX(PRNT_ORD1)                                                                                    AS PRNT_ORD1
		    <if test="LVL == 2">
              , MAX(PRNT_ORD2)                                                                                    AS PRNT_ORD2
		    </if>
		    <if test="LVL == 3">
              , MAX(PRNT_ORD2)                                                                                    AS PRNT_ORD2
              , MAX(PRNT_ORD3)                                                                                    AS PRNT_ORD3 
		    </if>
		    <if test="LVL == 4">
              , MAX(PRNT_ORD2)                                                                                    AS PRNT_ORD2
              , MAX(PRNT_ORD3)                                                                                    AS PRNT_ORD3 
              , MAX(PRNT_ORD4)                                                                                    AS PRNT_ORD4
		    </if>                                                                                                                                                                                                                                                                                         
      FROM   
         (
         SELECT 
                B.LVL1
              , B.LVL2
              , B.LVL3
              , B.LVL4
              , B.LVL5
              , A.BKPR_AMT
              , A.BKPR_APLY_RATE_AMT
              , A.RPRT_ACC_CNT
              , A.SEQ
              , B.PRNT_ORD1
              , B.PRNT_ORD2
              , B.PRNT_ORD3
              , B.PRNT_ORD4
              , B.PRNT_ORD5
          FROM  RATE_SECT A
          ,(
            SELECT 
                  LEVEL AS LVL
                , SYS_CONNECT_BY_PATH(TRIM(STAT_RPRT_ITEM_NM), '%') AS STAT_RPRT_ITEM_NM_PATH
                , REGEXP_SUBSTR(SYS_CONNECT_BY_PATH(TRIM(STAT_RPRT_ITEM_NM), '%'),'[^%]+' , 1 , 1 )                              AS LVL1
                , NVL(REGEXP_SUBSTR(SYS_CONNECT_BY_PATH(TRIM(STAT_RPRT_ITEM_NM), '%'),'[^%]+' , 1 , 2 ),TRIM(STAT_RPRT_ITEM_NM)) AS LVL2
                , NVL(REGEXP_SUBSTR(SYS_CONNECT_BY_PATH(TRIM(STAT_RPRT_ITEM_NM), '%'),'[^%]+' , 1 , 3 ),TRIM(STAT_RPRT_ITEM_NM)) AS LVL3
                , NVL(REGEXP_SUBSTR(SYS_CONNECT_BY_PATH(TRIM(STAT_RPRT_ITEM_NM), '%'),'[^%]+' , 1 , 4 ),TRIM(STAT_RPRT_ITEM_NM)) AS LVL4
                , NVL(REGEXP_SUBSTR(SYS_CONNECT_BY_PATH(TRIM(STAT_RPRT_ITEM_NM), '%'),'[^%]+' , 1 , 5 ),TRIM(STAT_RPRT_ITEM_NM)) AS LVL5
                , STAT_RPRT_ITEM_NM
                , ORG_CLAS_C
                , STAT_RPRT_ID
                , STAT_RPRT_ITEM_ID
                , TO_NUMBER(REGEXP_SUBSTR(SYS_CONNECT_BY_PATH(TRIM(PRNT_ORD), '%'),'[^%]+' , 1 , 1 ) )                           AS PRNT_ORD1
                , TO_NUMBER(NVL(REGEXP_SUBSTR(SYS_CONNECT_BY_PATH(TRIM(PRNT_ORD), '%'),'[^%]+' , 1 , 2 ),TRIM(PRNT_ORD)))        AS PRNT_ORD2
                , TO_NUMBER(NVL(REGEXP_SUBSTR(SYS_CONNECT_BY_PATH(TRIM(PRNT_ORD), '%'),'[^%]+' , 1 , 3 ),TRIM(PRNT_ORD)))        AS PRNT_ORD3
                , TO_NUMBER(NVL(REGEXP_SUBSTR(SYS_CONNECT_BY_PATH(TRIM(PRNT_ORD), '%'),'[^%]+' , 1 , 4 ),TRIM(PRNT_ORD)))        AS PRNT_ORD4
                , TO_NUMBER(NVL(REGEXP_SUBSTR(SYS_CONNECT_BY_PATH(TRIM(PRNT_ORD), '%'),'[^%]+' , 1 , 5 ),TRIM(PRNT_ORD)))        AS PRNT_ORD5
            FROM (
                    SELECT ORG_CLAS_C
                        , STAT_RPRT_ID
                        , STAT_RPRT_ITEM_ID
                        , CASE WHEN STAT_RPRT_LVL = 1 THEN '-'
                                WHEN STAT_RPRT_LVL = 2 THEN SUBSTR(STAT_RPRT_ITEM_ID, 0, STAT_RPRT_LVL -1) 
                                WHEN STAT_RPRT_LVL = 3 AND ORG_CLAS_C = '10' THEN SUBSTR(STAT_RPRT_ITEM_ID, 0, STAT_RPRT_LVL) -- 중앙회 데이터가 없기에 일단 킵
                                WHEN STAT_RPRT_LVL = 3 AND ORG_CLAS_C = '30' THEN SUBSTR(STAT_RPRT_ITEM_ID, 0, STAT_RPRT_LVL -1)
                                WHEN STAT_RPRT_LVL = 4 THEN SUBSTR(STAT_RPRT_ITEM_ID, 0, STAT_RPRT_LVL)
                          END 																									 AS UP_STAT_RPRT_ITEM_ID
                        , STAT_RPRT_ITEM_NM
                        , STAT_RPRT_LVL
                        , TOT_ITEM_YN
                        , PRNT_ORD
                    FROM  TII_STAT_ANAL_RPRT_INFO
                   WHERE  STAT_RPRT_ID = 'P200'
                     AND  ORG_CLAS_C   = #{ORG_CLAS_C}
                ) 
            START WITH UP_STAT_RPRT_ITEM_ID    = '-'
            CONNECT BY PRIOR STAT_RPRT_ITEM_ID = UP_STAT_RPRT_ITEM_ID 
                   AND PRIOR ORG_CLAS_C        = ORG_CLAS_C
                   AND PRIOR STAT_RPRT_ID      = STAT_RPRT_ID
          )B
          WHERE
                A.ORG_CLAS_C        = B.ORG_CLAS_C
            AND A.STAT_RPRT_ID      = B.STAT_RPRT_ID
            AND A.STAT_RPRT_ITEM_ID = B.STAT_RPRT_ITEM_ID
	    )     
	    GROUP BY 
                LVL1 
		    <if test="LVL == 2">
		      , LVL2
		    </if>
		    <if test="LVL == 3">
		      , LVL2
		      , LVL3
		    </if>
		    <if test="LVL == 4">
		      , LVL2
		      , LVL3
		      , LVL4
		    </if>
   )----------------------------------------------------------------------------------최종 SELECT문     
    GROUP BY 
          LVL1          
   <if test="LVL == 1">
	ORDER BY
          MAX(PRNT_ORD1)
   </if>      
   <if test="LVL == 2">
   		, ROLLUP(LVL2)
	ORDER BY
          MAX(PRNT_ORD1)
        , MAX(PRNT_ORD2)
        , GRP_ID
   </if>
   <if test="LVL == 3">
        , ROLLUP(LVL2,LVL3)
	ORDER BY
          MAX(PRNT_ORD1)
        , MAX(PRNT_ORD2)
        , MAX(PRNT_ORD3)
        , GRP_ID
   </if>
   <if test="LVL == 4">
   	    , ROLLUP(LVL2,LVL3,LVL4)
	ORDER BY
          MAX(PRNT_ORD1)
        , MAX(PRNT_ORD2)
        , MAX(PRNT_ORD3)
        , MAX(PRNT_ORD4)
        , GRP_ID
   </if>

	
	</select>


  


</mapper>