<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.app.almweb.mapper.TR_2204Mapper">
	<!-- 통화별충격치 -->
	<select id="selectIrrbbRateSnroList1" parameterType="java.util.Map" resultType="java.util.HashMap">
		SELECT 
		    CUR_TYPE
		    , MAX(ARS) AS ARS
		    , MAX(AUD) AS AUD
		    , MAX(BRL) AS BRL
		    , MAX(CAD) AS CAD
		    , MAX(CHF) AS CHF
		    , MAX(CNY) AS CNY
		    , MAX(EUR) AS EUR
		    , MAX(GBP) AS GBP
		    , MAX(HKD) AS HKD
		    , MAX(IDR) AS IDR
		    , MAX(INR) AS INR
		    , MAX(JPY) AS JPY
		    , MAX(KRW) AS KRW
		    , MAX(MXN) AS MXN
		    , MAX(RUB) AS RUB
		    , MAX(SAR) AS SAR
		    , MAX(SEK) AS SEK
		    , MAX(SGD) AS SGD
		    , MAX(TRY) AS TRY
		    , MAX(USD) AS USD
		    , MAX(ZAR) AS ZAR
		FROM (
		    SELECT
		        '평행' AS CUR_TYPE
		        , CASE WHEN DTL_CLAS_VAL = 'ARS' THEN CO_C_1_VAL ELSE '' END AS ARS
		        , CASE WHEN DTL_CLAS_VAL = 'AUD' THEN CO_C_1_VAL ELSE '' END AS AUD
		        , CASE WHEN DTL_CLAS_VAL = 'BRL' THEN CO_C_1_VAL ELSE '' END AS BRL
		        , CASE WHEN DTL_CLAS_VAL = 'CAD' THEN CO_C_1_VAL ELSE '' END AS CAD
		        , CASE WHEN DTL_CLAS_VAL = 'CHF' THEN CO_C_1_VAL ELSE '' END AS CHF
		        , CASE WHEN DTL_CLAS_VAL = 'CNY' THEN CO_C_1_VAL ELSE '' END AS CNY
		        , CASE WHEN DTL_CLAS_VAL = 'EUR' THEN CO_C_1_VAL ELSE '' END AS EUR
		        , CASE WHEN DTL_CLAS_VAL = 'GBP' THEN CO_C_1_VAL ELSE '' END AS GBP
		        , CASE WHEN DTL_CLAS_VAL = 'HKD' THEN CO_C_1_VAL ELSE '' END AS HKD
		        , CASE WHEN DTL_CLAS_VAL = 'IDR' THEN CO_C_1_VAL ELSE '' END AS IDR
		        , CASE WHEN DTL_CLAS_VAL = 'INR' THEN CO_C_1_VAL ELSE '' END AS INR
		        , CASE WHEN DTL_CLAS_VAL = 'JPY' THEN CO_C_1_VAL ELSE '' END AS JPY
		        , CASE WHEN DTL_CLAS_VAL = 'KRW' THEN CO_C_1_VAL ELSE '' END AS KRW
		        , CASE WHEN DTL_CLAS_VAL = 'MXN' THEN CO_C_1_VAL ELSE '' END AS MXN
		        , CASE WHEN DTL_CLAS_VAL = 'RUB' THEN CO_C_1_VAL ELSE '' END AS RUB
		        , CASE WHEN DTL_CLAS_VAL = 'SAR' THEN CO_C_1_VAL ELSE '' END AS SAR
		        , CASE WHEN DTL_CLAS_VAL = 'SEK' THEN CO_C_1_VAL ELSE '' END AS SEK
		        , CASE WHEN DTL_CLAS_VAL = 'SGD' THEN CO_C_1_VAL ELSE '' END AS SGD
		        , CASE WHEN DTL_CLAS_VAL = 'TRY' THEN CO_C_1_VAL ELSE '' END AS TRY
		        , CASE WHEN DTL_CLAS_VAL = 'USD' THEN CO_C_1_VAL ELSE '' END AS USD
		        , CASE WHEN DTL_CLAS_VAL = 'ZAR' THEN CO_C_1_VAL ELSE '' END AS ZAR
		    FROM TSY_CO_MNG
		    WHERE CO_C = 'CUR_BY_IPVL'
		    AND DTL_CLAS_VAL != '-'
		    UNION ALL
		    SELECT
		        '단기' AS CUR_TYPE
		        , CASE WHEN DTL_CLAS_VAL = 'ARS' THEN CO_C_2_VAL ELSE '' END AS ARS
		        , CASE WHEN DTL_CLAS_VAL = 'AUD' THEN CO_C_2_VAL ELSE '' END AS AUD
		        , CASE WHEN DTL_CLAS_VAL = 'BRL' THEN CO_C_2_VAL ELSE '' END AS BRL
		        , CASE WHEN DTL_CLAS_VAL = 'CAD' THEN CO_C_2_VAL ELSE '' END AS CAD
		        , CASE WHEN DTL_CLAS_VAL = 'CHF' THEN CO_C_2_VAL ELSE '' END AS CHF
		        , CASE WHEN DTL_CLAS_VAL = 'CNY' THEN CO_C_2_VAL ELSE '' END AS CNY
		        , CASE WHEN DTL_CLAS_VAL = 'EUR' THEN CO_C_2_VAL ELSE '' END AS EUR
		        , CASE WHEN DTL_CLAS_VAL = 'GBP' THEN CO_C_2_VAL ELSE '' END AS GBP
		        , CASE WHEN DTL_CLAS_VAL = 'HKD' THEN CO_C_2_VAL ELSE '' END AS HKD
		        , CASE WHEN DTL_CLAS_VAL = 'IDR' THEN CO_C_2_VAL ELSE '' END AS IDR
		        , CASE WHEN DTL_CLAS_VAL = 'INR' THEN CO_C_2_VAL ELSE '' END AS INR
		        , CASE WHEN DTL_CLAS_VAL = 'JPY' THEN CO_C_2_VAL ELSE '' END AS JPY
		        , CASE WHEN DTL_CLAS_VAL = 'KRW' THEN CO_C_2_VAL ELSE '' END AS KRW
		        , CASE WHEN DTL_CLAS_VAL = 'MXN' THEN CO_C_2_VAL ELSE '' END AS MXN
		        , CASE WHEN DTL_CLAS_VAL = 'RUB' THEN CO_C_2_VAL ELSE '' END AS RUB
		        , CASE WHEN DTL_CLAS_VAL = 'SAR' THEN CO_C_2_VAL ELSE '' END AS SAR
		        , CASE WHEN DTL_CLAS_VAL = 'SEK' THEN CO_C_2_VAL ELSE '' END AS SEK
		        , CASE WHEN DTL_CLAS_VAL = 'SGD' THEN CO_C_2_VAL ELSE '' END AS SGD
		        , CASE WHEN DTL_CLAS_VAL = 'TRY' THEN CO_C_2_VAL ELSE '' END AS TRY
		        , CASE WHEN DTL_CLAS_VAL = 'USD' THEN CO_C_2_VAL ELSE '' END AS USD
		        , CASE WHEN DTL_CLAS_VAL = 'ZAR' THEN CO_C_2_VAL ELSE '' END AS ZAR
		    FROM TSY_CO_MNG
		    WHERE CO_C = 'CUR_BY_IPVL'
		    AND DTL_CLAS_VAL != '-'
		    UNION ALL
		    SELECT
		        '장기' AS CUR_TYPE
		        , CASE WHEN DTL_CLAS_VAL = 'ARS' THEN CO_C_3_VAL ELSE '' END AS ARS
		        , CASE WHEN DTL_CLAS_VAL = 'AUD' THEN CO_C_3_VAL ELSE '' END AS AUD
		        , CASE WHEN DTL_CLAS_VAL = 'BRL' THEN CO_C_3_VAL ELSE '' END AS BRL
		        , CASE WHEN DTL_CLAS_VAL = 'CAD' THEN CO_C_3_VAL ELSE '' END AS CAD
		        , CASE WHEN DTL_CLAS_VAL = 'CHF' THEN CO_C_3_VAL ELSE '' END AS CHF
		        , CASE WHEN DTL_CLAS_VAL = 'CNY' THEN CO_C_3_VAL ELSE '' END AS CNY
		        , CASE WHEN DTL_CLAS_VAL = 'EUR' THEN CO_C_3_VAL ELSE '' END AS EUR
		        , CASE WHEN DTL_CLAS_VAL = 'GBP' THEN CO_C_3_VAL ELSE '' END AS GBP
		        , CASE WHEN DTL_CLAS_VAL = 'HKD' THEN CO_C_3_VAL ELSE '' END AS HKD
		        , CASE WHEN DTL_CLAS_VAL = 'IDR' THEN CO_C_3_VAL ELSE '' END AS IDR
		        , CASE WHEN DTL_CLAS_VAL = 'INR' THEN CO_C_3_VAL ELSE '' END AS INR
		        , CASE WHEN DTL_CLAS_VAL = 'JPY' THEN CO_C_3_VAL ELSE '' END AS JPY
		        , CASE WHEN DTL_CLAS_VAL = 'KRW' THEN CO_C_3_VAL ELSE '' END AS KRW
		        , CASE WHEN DTL_CLAS_VAL = 'MXN' THEN CO_C_3_VAL ELSE '' END AS MXN
		        , CASE WHEN DTL_CLAS_VAL = 'RUB' THEN CO_C_3_VAL ELSE '' END AS RUB
		        , CASE WHEN DTL_CLAS_VAL = 'SAR' THEN CO_C_3_VAL ELSE '' END AS SAR
		        , CASE WHEN DTL_CLAS_VAL = 'SEK' THEN CO_C_3_VAL ELSE '' END AS SEK
		        , CASE WHEN DTL_CLAS_VAL = 'SGD' THEN CO_C_3_VAL ELSE '' END AS SGD
		        , CASE WHEN DTL_CLAS_VAL = 'TRY' THEN CO_C_3_VAL ELSE '' END AS TRY
		        , CASE WHEN DTL_CLAS_VAL = 'USD' THEN CO_C_3_VAL ELSE '' END AS USD
		        , CASE WHEN DTL_CLAS_VAL = 'ZAR' THEN CO_C_3_VAL ELSE '' END AS ZAR
		    FROM TSY_CO_MNG
		    WHERE CO_C = 'CUR_BY_IPVL'
		    AND DTL_CLAS_VAL != '-'
		)
		GROUP BY CUR_TYPE
	</select>
	
	<!-- 국고채금리 -->
	<select id="selectIrrbbRateSnroList2" parameterType="java.util.Map" resultType="java.util.HashMap">
		SELECT
		    ITEM_TYPE
		    , A.ITEM_C
		    , B.M3_VAL
		    , B.M6_VAL
		    , B.M9_VAL
		    , B.M12_VAL
		    , B.M18_VAL
		    , B.M24_VAL
		    , B.M30_VAL
		    , B.M36_VAL
		    , B.M48_VAL
		    , B.M60_VAL
		    , B.M84_VAL
		    , B.M120_VAL
		    , B.M240_VAL
		    , B.M360_VAL
		    , B.M600_VAL
		FROM (
		    SELECT '중간시점' AS ITEM_TYPE, 1 AS ITEM_C FROM DUAL
		    UNION ALL
		    SELECT '금리' AS ITEM_TYPE, 2 AS ITEM_C FROM DUAL
		) A
		LEFT JOIN (
		    SELECT
		        ITEM_C
		        , MAX(M3_VAL) AS M3_VAL
		        , MAX(M6_VAL) AS M6_VAL
		        , MAX(M9_VAL) AS M9_VAL
		        , MAX(M12_VAL) AS M12_VAL
		        , MAX(M18_VAL) AS M18_VAL
		        , MAX(M24_VAL) AS M24_VAL
		        , MAX(M30_VAL) AS M30_VAL
		        , MAX(M36_VAL) AS M36_VAL
		        , MAX(M48_VAL) AS M48_VAL
		        , MAX(M60_VAL) AS M60_VAL
		        , MAX(M84_VAL) AS M84_VAL
		        , MAX(M120_VAL) AS M120_VAL
		        , MAX(M240_VAL) AS M240_VAL
		        , MAX(M360_VAL) AS M360_VAL
		        , MAX(M600_VAL) AS M600_VAL
		    FROM 
		    (
		        SELECT 
		            1 AS ITEM_C
		            , BASE_DATE
		            , ALM_BASE_RATE_C
		            , ALM_BASE_RATE_TRM_CNT
		            , ALM_BASE_RATE
		            , ALM_BASE_RATE_TRM_CNT*30/360 AS MDDL_POT_VAL
		            , CASE WHEN ALM_BASE_RATE_TRM_CNT = 3 THEN ALM_BASE_RATE_TRM_CNT*30/360 ELSE 0 END AS M3_VAL
		            , CASE WHEN ALM_BASE_RATE_TRM_CNT = 6 THEN ALM_BASE_RATE_TRM_CNT*30/360 ELSE 0 END AS M6_VAL
		            , CASE WHEN ALM_BASE_RATE_TRM_CNT = 9 THEN ALM_BASE_RATE_TRM_CNT*30/360 ELSE 0 END AS M9_VAL
		            , CASE WHEN ALM_BASE_RATE_TRM_CNT = 12 THEN ALM_BASE_RATE_TRM_CNT*30/360 ELSE 0 END AS M12_VAL
		            , CASE WHEN ALM_BASE_RATE_TRM_CNT = 18 THEN ALM_BASE_RATE_TRM_CNT*30/360 ELSE 0 END AS M18_VAL
		            , CASE WHEN ALM_BASE_RATE_TRM_CNT = 24 THEN ALM_BASE_RATE_TRM_CNT*30/360 ELSE 0 END AS M24_VAL
		            , CASE WHEN ALM_BASE_RATE_TRM_CNT = 30 THEN ALM_BASE_RATE_TRM_CNT*30/360 ELSE 0 END AS M30_VAL
		            , CASE WHEN ALM_BASE_RATE_TRM_CNT = 36 THEN ALM_BASE_RATE_TRM_CNT*30/360 ELSE 0 END AS M36_VAL
		            , CASE WHEN ALM_BASE_RATE_TRM_CNT = 48 THEN ALM_BASE_RATE_TRM_CNT*30/360 ELSE 0 END AS M48_VAL
		            , CASE WHEN ALM_BASE_RATE_TRM_CNT = 60 THEN ALM_BASE_RATE_TRM_CNT*30/360 ELSE 0 END AS M60_VAL
		            , CASE WHEN ALM_BASE_RATE_TRM_CNT = 84 THEN ALM_BASE_RATE_TRM_CNT*30/360 ELSE 0 END AS M84_VAL
		            , CASE WHEN ALM_BASE_RATE_TRM_CNT = 120 THEN ALM_BASE_RATE_TRM_CNT*30/360 ELSE 0 END AS M120_VAL
		            , CASE WHEN ALM_BASE_RATE_TRM_CNT = 240 THEN ALM_BASE_RATE_TRM_CNT*30/360 ELSE 0 END AS M240_VAL
		            , CASE WHEN ALM_BASE_RATE_TRM_CNT = 360 THEN ALM_BASE_RATE_TRM_CNT*30/360 ELSE 0 END AS M360_VAL
		            , CASE WHEN ALM_BASE_RATE_TRM_CNT = 600 THEN ALM_BASE_RATE_TRM_CNT*30/360 ELSE 0 END AS M600_VAL
		        FROM TIG_ALM_BASE_RATE_INFO
		        WHERE ALM_BASE_RATE_C IN (
                        SELECT ALM_BASE_RATE_C
                     FROM ALMADM.TSY_ALM_BASE_RATE_MNG C  -- 시스템_ALM기준금리관리
                    WHERE 1=1
                      AND C.USE_YN = 'Y'
                      AND C.ALM_REP_RATE_YN = 'Y' 
		        ) 
		        AND BASE_DATE = #{sch_base_date}
		        UNION ALL
		        SELECT 
		            2 AS ITEM_C
		            , BASE_DATE
		            , ALM_BASE_RATE_C
		            , ALM_BASE_RATE_TRM_CNT
		            , ALM_BASE_RATE
		            , ALM_BASE_RATE_TRM_CNT*30/360 AS MDDL_POT_VAL
		            , CASE WHEN ALM_BASE_RATE_TRM_CNT = 3 THEN ALM_BASE_RATE ELSE 0 END AS M3_VAL
		            , CASE WHEN ALM_BASE_RATE_TRM_CNT = 6 THEN ALM_BASE_RATE ELSE 0 END AS M6_VAL
		            , CASE WHEN ALM_BASE_RATE_TRM_CNT = 9 THEN ALM_BASE_RATE ELSE 0 END AS M9_VAL
		            , CASE WHEN ALM_BASE_RATE_TRM_CNT = 12 THEN ALM_BASE_RATE ELSE 0 END AS M12_VAL
		            , CASE WHEN ALM_BASE_RATE_TRM_CNT = 18 THEN ALM_BASE_RATE ELSE 0 END AS M18_VAL
		            , CASE WHEN ALM_BASE_RATE_TRM_CNT = 24 THEN ALM_BASE_RATE ELSE 0 END AS M24_VAL
		            , CASE WHEN ALM_BASE_RATE_TRM_CNT = 30 THEN ALM_BASE_RATE ELSE 0 END AS M30_VAL
		            , CASE WHEN ALM_BASE_RATE_TRM_CNT = 36 THEN ALM_BASE_RATE ELSE 0 END AS M36_VAL
		            , CASE WHEN ALM_BASE_RATE_TRM_CNT = 48 THEN ALM_BASE_RATE ELSE 0 END AS M48_VAL
		            , CASE WHEN ALM_BASE_RATE_TRM_CNT = 60 THEN ALM_BASE_RATE ELSE 0 END AS M60_VAL
		            , CASE WHEN ALM_BASE_RATE_TRM_CNT = 84 THEN ALM_BASE_RATE ELSE 0 END AS M84_VAL
		            , CASE WHEN ALM_BASE_RATE_TRM_CNT = 120 THEN ALM_BASE_RATE ELSE 0 END AS M120_VAL
		            , CASE WHEN ALM_BASE_RATE_TRM_CNT = 240 THEN ALM_BASE_RATE ELSE 0 END AS M240_VAL
		            , CASE WHEN ALM_BASE_RATE_TRM_CNT = 360 THEN ALM_BASE_RATE ELSE 0 END AS M360_VAL
		            , CASE WHEN ALM_BASE_RATE_TRM_CNT = 600 THEN ALM_BASE_RATE ELSE 0 END AS M600_VAL
		        FROM TIG_ALM_BASE_RATE_INFO
		        WHERE ALM_BASE_RATE_C IN (
                        SELECT ALM_BASE_RATE_C
                     FROM ALMADM.TSY_ALM_BASE_RATE_MNG C  -- 시스템_ALM기준금리관리
                    WHERE 1=1
                      AND C.USE_YN = 'Y'
                      AND C.ALM_REP_RATE_YN = 'Y' 
		        )
		        AND BASE_DATE = #{sch_base_date}
		    )
		    GROUP BY ITEM_C
		) B ON B.ITEM_C = A.ITEM_C
		ORDER BY A.ITEM_C
	</select>
	
	<!-- 할인금리 및 할인계수 -->
	<select id="selectIrrbbRateSnroList3" parameterType="java.util.Map" resultType="java.util.HashMap">
		SELECT 
		    A.MTRT_SECT_NM
    		, TO_CHAR(A.RATE_RFM_MDDL_POT_VAL,'FM90.0999') AS RATE_RFM_MDDL_POT_VAL
    		, A.MTRT_SECT_SEQ
		    , B.CUR_C
		    , S1_SNRO_RATE_IPVL_VAL
		    , S2_SNRO_RATE_IPVL_VAL
		    , S3_SNRO_RATE_IPVL_VAL
		    , S4_SNRO_RATE_IPVL_VAL
		    , S5_SNRO_RATE_IPVL_VAL
		    , S6_SNRO_RATE_IPVL_VAL
		    , S7_SNRO_RATE_IPVL_VAL
		    , S1_SNRO_RATE
		    , S2_SNRO_RATE
		    , S3_SNRO_RATE
		    , S4_SNRO_RATE
		    , S5_SNRO_RATE
		    , S6_SNRO_RATE
		    , S7_SNRO_RATE
		    , S1_SNRO_DISC_CALC
		    , S2_SNRO_DISC_CALC
		    , S3_SNRO_DISC_CALC
		    , S4_SNRO_DISC_CALC
		    , S5_SNRO_DISC_CALC
		    , S6_SNRO_DISC_CALC
		    , S7_SNRO_DISC_CALC
		FROM TSY_MTRT_SECT_MNG A
		LEFT JOIN (
		    SELECT 
		        BASE_DATE, CUR_C, ALM_MTRT_SECT_C, MTRT_SECT_SEQ
		        , SUM(S1_SNRO_RATE_IPVL_VAL) AS S1_SNRO_RATE_IPVL_VAL
		        , SUM(S2_SNRO_RATE_IPVL_VAL) AS S2_SNRO_RATE_IPVL_VAL
		        , SUM(S3_SNRO_RATE_IPVL_VAL) AS S3_SNRO_RATE_IPVL_VAL
		        , SUM(S4_SNRO_RATE_IPVL_VAL) AS S4_SNRO_RATE_IPVL_VAL
		        , SUM(S5_SNRO_RATE_IPVL_VAL) AS S5_SNRO_RATE_IPVL_VAL
		        , SUM(S6_SNRO_RATE_IPVL_VAL) AS S6_SNRO_RATE_IPVL_VAL
		        , SUM(S7_SNRO_RATE_IPVL_VAL) AS S7_SNRO_RATE_IPVL_VAL
		        , SUM(S1_SNRO_RATE) AS S1_SNRO_RATE
		        , SUM(S2_SNRO_RATE) AS S2_SNRO_RATE
		        , SUM(S3_SNRO_RATE) AS S3_SNRO_RATE
		        , SUM(S4_SNRO_RATE) AS S4_SNRO_RATE
		        , SUM(S5_SNRO_RATE) AS S5_SNRO_RATE
		        , SUM(S6_SNRO_RATE) AS S6_SNRO_RATE
		        , SUM(S7_SNRO_RATE) AS S7_SNRO_RATE
		        , SUM(S1_SNRO_DISC_CALC) AS S1_SNRO_DISC_CALC
		        , SUM(S2_SNRO_DISC_CALC) AS S2_SNRO_DISC_CALC
		        , SUM(S3_SNRO_DISC_CALC) AS S3_SNRO_DISC_CALC
		        , SUM(S4_SNRO_DISC_CALC) AS S4_SNRO_DISC_CALC
		        , SUM(S5_SNRO_DISC_CALC) AS S5_SNRO_DISC_CALC
		        , SUM(S6_SNRO_DISC_CALC) AS S6_SNRO_DISC_CALC
		        , SUM(S7_SNRO_DISC_CALC) AS S7_SNRO_DISC_CALC
		    FROM (
		        SELECT 
		            A.BASE_DATE
		            , A.CUR_C
		            , A.ALM_MTRT_SECT_C
		            , A.MTRT_SECT_SEQ
		            , CASE WHEN SNRO_NO = '1' THEN SNRO_RATE_IPVL_VAL ELSE 0 END S1_SNRO_RATE_IPVL_VAL
		            , CASE WHEN SNRO_NO = '2' THEN SNRO_RATE_IPVL_VAL ELSE 0 END S2_SNRO_RATE_IPVL_VAL
		            , CASE WHEN SNRO_NO = '3' THEN SNRO_RATE_IPVL_VAL ELSE 0 END S3_SNRO_RATE_IPVL_VAL
		            , CASE WHEN SNRO_NO = '4' THEN SNRO_RATE_IPVL_VAL ELSE 0 END S4_SNRO_RATE_IPVL_VAL
		            , CASE WHEN SNRO_NO = '5' THEN SNRO_RATE_IPVL_VAL ELSE 0 END S5_SNRO_RATE_IPVL_VAL
		            , CASE WHEN SNRO_NO = '6' THEN SNRO_RATE_IPVL_VAL ELSE 0 END S6_SNRO_RATE_IPVL_VAL
		            , CASE WHEN SNRO_NO = '7' THEN SNRO_RATE_IPVL_VAL ELSE 0 END S7_SNRO_RATE_IPVL_VAL
		            , CASE WHEN SNRO_NO = '1' THEN SNRO_RATE ELSE 0 END S1_SNRO_RATE
		            , CASE WHEN SNRO_NO = '2' THEN SNRO_RATE ELSE 0 END S2_SNRO_RATE
		            , CASE WHEN SNRO_NO = '3' THEN SNRO_RATE ELSE 0 END S3_SNRO_RATE
		            , CASE WHEN SNRO_NO = '4' THEN SNRO_RATE ELSE 0 END S4_SNRO_RATE
		            , CASE WHEN SNRO_NO = '5' THEN SNRO_RATE ELSE 0 END S5_SNRO_RATE
		            , CASE WHEN SNRO_NO = '6' THEN SNRO_RATE ELSE 0 END S6_SNRO_RATE
		            , CASE WHEN SNRO_NO = '7' THEN SNRO_RATE ELSE 0 END S7_SNRO_RATE
		            , CASE WHEN SNRO_NO = '1' THEN SNRO_DISC_CALC ELSE 0 END S1_SNRO_DISC_CALC
		            , CASE WHEN SNRO_NO = '2' THEN SNRO_DISC_CALC ELSE 0 END S2_SNRO_DISC_CALC
		            , CASE WHEN SNRO_NO = '3' THEN SNRO_DISC_CALC ELSE 0 END S3_SNRO_DISC_CALC
		            , CASE WHEN SNRO_NO = '4' THEN SNRO_DISC_CALC ELSE 0 END S4_SNRO_DISC_CALC
		            , CASE WHEN SNRO_NO = '5' THEN SNRO_DISC_CALC ELSE 0 END S5_SNRO_DISC_CALC
		            , CASE WHEN SNRO_NO = '6' THEN SNRO_DISC_CALC ELSE 0 END S6_SNRO_DISC_CALC
		            , CASE WHEN SNRO_NO = '7' THEN SNRO_DISC_CALC ELSE 0 END S7_SNRO_DISC_CALC
		        FROM TBI_RATE_SNRO_RSLT A
		        WHERE BASE_DATE = #{sch_base_date}
		        AND CUR_C = 'KRW'
		    )
		    GROUP BY BASE_DATE, CUR_C, ALM_MTRT_SECT_C, MTRT_SECT_SEQ
		) B ON B.ALM_MTRT_SECT_C = A.ALM_MTRT_SECT_C AND B.MTRT_SECT_SEQ = A.MTRT_SECT_SEQ
		WHERE A.ALM_MTRT_SECT_C = '20'
		ORDER BY B.CUR_C, A.MTRT_SECT_SEQ
	</select>
	
	<select id="selectBaseDateSchCbList" parameterType="java.util.Map" resultType="java.util.HashMap">
		SELECT 
		    TO_CHAR(TO_DATE(MAX(BASE_DATE), 'YYYYMMDD'), 'YYYY-MM') AS BASE_DATE 
		FROM (
		    SELECT 
		        MAX(BASE_DATE) AS BASE_DATE
		    FROM TBI_RATE_SNRO_RSLT
		    WHERE CUR_C = 'KRW'
		    AND ALM_MTRT_SECT_C = '20'
		    UNION
		    SELECT 
		        MAX(BASE_DATE) AS BASE_DATE
		    FROM TIG_ALM_BASE_RATE_INFO
		    WHERE ALM_BASE_RATE_C = '111100' 
		) A
	</select>

</mapper>